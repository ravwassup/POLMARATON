2025-03-18 14:59:40,568:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36005/79100150.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Rocznik"].fillna(mediana_rocznik_2023, inplace=True)

2025-03-18 14:59:40,569:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36005/79100150.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Rocznik"].fillna(mediana_rocznik_2024, inplace=True)

2025-03-18 15:03:43,737:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36142/79100150.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Rocznik"].fillna(mediana_rocznik_2023, inplace=True)

2025-03-18 15:03:43,738:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36142/79100150.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Rocznik"].fillna(mediana_rocznik_2024, inplace=True)

2025-03-18 15:04:47,795:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36142/3648960729.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Płeć"] = df_2023["Płeć"].map({"K": 0, "M": 1})

2025-03-18 15:04:47,798:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36142/3648960729.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Płeć"] = df_2024["Płeć"].map({"K": 0, "M": 1})

2025-03-18 15:07:25,816:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36142/4154060525.py:9: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Czas"] = df_2023["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:07:25,828:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36142/4154060525.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Czas"] = df_2024["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:08:08,264:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/79100150.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Rocznik"].fillna(mediana_rocznik_2023, inplace=True)

2025-03-18 15:08:08,265:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/79100150.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Rocznik"].fillna(mediana_rocznik_2024, inplace=True)

2025-03-18 15:08:08,663:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/3648960729.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Płeć"] = df_2023["Płeć"].map({"K": 0, "M": 1})

2025-03-18 15:08:08,664:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/3648960729.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Płeć"] = df_2024["Płeć"].map({"K": 0, "M": 1})

2025-03-18 15:08:09,169:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/4154060525.py:9: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Czas"] = df_2023["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:08:09,178:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/4154060525.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Czas"] = df_2024["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:13:17,536:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/4066836477.py:16: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[col] = df_2023[col].apply(convert_pace_to_seconds)

2025-03-18 15:13:17,543:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/4066836477.py:17: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024[col] = df_2024[col].apply(convert_pace_to_seconds)

2025-03-18 15:13:19,490:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/4066836477.py:16: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[col] = df_2023[col].apply(convert_pace_to_seconds)

2025-03-18 15:13:19,498:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/4066836477.py:17: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024[col] = df_2024[col].apply(convert_pace_to_seconds)

2025-03-18 15:14:48,464:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/1654880026.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Czas"] = df_2023["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:14:48,474:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36195/1654880026.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Czas"] = df_2024["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:15:21,866:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/79100150.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Rocznik"].fillna(mediana_rocznik_2023, inplace=True)

2025-03-18 15:15:21,867:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/79100150.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Rocznik"].fillna(mediana_rocznik_2024, inplace=True)

2025-03-18 15:15:23,375:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/3648960729.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Płeć"] = df_2023["Płeć"].map({"K": 0, "M": 1})

2025-03-18 15:15:23,376:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/3648960729.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Płeć"] = df_2024["Płeć"].map({"K": 0, "M": 1})

2025-03-18 15:15:24,718:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/4154060525.py:9: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Czas"] = df_2023["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:15:24,729:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/4154060525.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Czas"] = df_2024["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:15:25,220:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/4066836477.py:16: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[col] = df_2023[col].apply(convert_pace_to_seconds)

2025-03-18 15:15:25,229:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/4066836477.py:17: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024[col] = df_2024[col].apply(convert_pace_to_seconds)

2025-03-18 15:15:26,597:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1654880026.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Czas"] = df_2023["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:15:26,606:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1654880026.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Czas"] = df_2024["Czas"].apply(convert_time_to_seconds)

2025-03-18 15:17:19,864:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1969272315.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[col] = df_2023[col].apply(convert_time_to_seconds)

2025-03-18 15:17:19,876:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1969272315.py:24: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024[col] = df_2024[col].apply(convert_time_to_seconds)

2025-03-18 15:19:40,548:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/3592461323.py:22: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[col] = df_2023[col].apply(convert_time_to_seconds)

2025-03-18 15:19:40,557:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/3592461323.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024[col] = df_2024[col].apply(convert_time_to_seconds)

2025-03-18 15:21:12,672:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/2059240301.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["20 km Czas"] = df_2023["20 km Czas"].fillna(0).astype(int)

2025-03-18 15:21:12,673:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/2059240301.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["20 km Czas"] = df_2024["20 km Czas"].fillna(0).astype(int)

2025-03-18 15:24:32,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-18 15:24:32,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-18 15:24:32,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-18 15:24:32,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-18 15:25:10,153:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1031131505.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["20 km Tempo"].fillna(df_2023["20 km Tempo"].median(), inplace=True)

2025-03-18 15:25:10,155:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1031131505.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Tempo Stabilność"].fillna(df_2023["Tempo Stabilność"].median(), inplace=True)

2025-03-18 15:25:37,892:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1085130917.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["20 km Tempo"].fillna(df_2023["20 km Tempo"].median(), inplace=True)

2025-03-18 15:25:37,893:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1085130917.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Tempo Stabilność"].fillna(df_2023["Tempo Stabilność"].median(), inplace=True)

2025-03-18 15:25:48,643:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/2041955425.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[columns_to_scale] = scaler.fit_transform(df_2023[columns_to_scale])

2025-03-18 15:25:54,167:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/2041955425.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[columns_to_scale] = scaler.fit_transform(df_2023[columns_to_scale])

2025-03-18 15:26:08,001:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/1856762077.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[columns_to_scale] = scaler.fit_transform(df_2023[columns_to_scale])

2025-03-18 15:26:18,817:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/2502075622.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023[columns_to_scale] = scaler.fit_transform(df_2023[columns_to_scale])

2025-03-18 15:26:18,823:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_36277/2502075622.py:11: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024[columns_to_scale] = scaler.fit_transform(df_2024[columns_to_scale])

2025-03-18 15:26:40,306:INFO:PyCaret RegressionExperiment
2025-03-18 15:26:40,306:INFO:Logging name: reg-default-name
2025-03-18 15:26:40,306:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-18 15:26:40,306:INFO:version 3.3.2
2025-03-18 15:26:40,306:INFO:Initializing setup()
2025-03-18 15:26:40,306:INFO:self.USI: b547
2025-03-18 15:26:40,306:INFO:self._variable_keys: {'fold_generator', 'X_test', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'html_param', 'exp_name_log', 'data', 'logging_param', 'gpu_param', 'y_test', 'transform_target_param', 'target_param', 'y_train', 'memory', 'exp_id', 'y', 'X_train', 'seed', '_ml_usecase', 'fold_shuffle_param', 'idx', 'fold_groups_param', 'X', '_available_plots', 'USI', 'n_jobs_param'}
2025-03-18 15:26:40,306:INFO:Checking environment
2025-03-18 15:26:40,306:INFO:python_version: 3.10.16
2025-03-18 15:26:40,306:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-18 15:26:40,307:INFO:machine: arm64
2025-03-18 15:26:40,307:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-18 15:26:40,307:INFO:Memory: svmem(total=38654705664, available=13624754176, percent=64.8, used=16840130560, free=543997952, active=13081133056, inactive=12897959936, wired=3758997504)
2025-03-18 15:26:40,307:INFO:Physical Core: 11
2025-03-18 15:26:40,307:INFO:Logical Core: 11
2025-03-18 15:26:40,307:INFO:Checking libraries
2025-03-18 15:26:40,307:INFO:System:
2025-03-18 15:26:40,307:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-18 15:26:40,307:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-18 15:26:40,307:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-18 15:26:40,307:INFO:PyCaret required dependencies:
2025-03-18 19:38:42,763:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/79100150.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Rocznik"].fillna(mediana_rocznik_2023, inplace=True)

2025-03-18 19:38:42,763:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/79100150.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Rocznik"].fillna(mediana_rocznik_2024, inplace=True)

2025-03-18 19:38:43,193:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/3648960729.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Płeć"] = df_2023["Płeć"].map({"K": 0, "M": 1})

2025-03-18 19:38:43,194:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/3648960729.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Płeć"] = df_2024["Płeć"].map({"K": 0, "M": 1})

2025-03-18 19:38:43,665:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/1031131505.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["20 km Tempo"].fillna(df_2023["20 km Tempo"].median(), inplace=True)

2025-03-18 19:38:43,666:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/1031131505.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2023["Tempo Stabilność"].fillna(df_2023["Tempo Stabilność"].median(), inplace=True)

2025-03-18 19:38:43,986:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/1085130917.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["20 km Tempo"].fillna(df_2023["20 km Tempo"].median(), inplace=True)

2025-03-18 19:38:43,987:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_37285/1085130917.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_2024["Tempo Stabilność"].fillna(df_2023["Tempo Stabilność"].median(), inplace=True)

2025-03-19 10:43:57,682:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/2326258937.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Rocznik"].fillna(df_med, inplace=True)

2025-03-19 10:44:47,072:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3193214685.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Rocznik"].fillna(df_med, inplace=True)

2025-03-19 10:51:31,100:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4025745632.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Rocznik"].fillna(df_cleanM, inplace=True)

2025-03-19 10:54:13,193:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/1844407854.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Rocznik"].fillna(mediana_rocznika, inplace=True)

2025-03-19 11:00:27,915:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/1357282383.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Płeć"] = df_clean["Płeć"].map({"K": 0, "M": 1})

2025-03-19 11:02:43,479:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4109558753.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["20 km Tempo"].fillna(df_clean["20 km Tempo"].median(), inplace=True)

2025-03-19 11:02:43,480:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4109558753.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Tempo Stabilność"].fillna(df_clean["Tempo Stabilność"].median(), inplace=True)

2025-03-19 11:03:01,745:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4109558753.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["20 km Tempo"].fillna(df_clean["20 km Tempo"].median(), inplace=True)

2025-03-19 11:03:01,747:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4109558753.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Tempo Stabilność"].fillna(df_clean["Tempo Stabilność"].median(), inplace=True)

2025-03-19 11:03:19,348:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/2699068602.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["20 km Tempo"].fillna(df_clean["20 km Tempo"].median(), inplace=True)

2025-03-19 11:04:32,001:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/126182999.py:13: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].apply(time_to_seconds)

2025-03-19 11:04:32,053:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/126182999.py:16: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["20 km Czas"].fillna(df_clean["20 km Czas"].median(), inplace=True)

2025-03-19 11:04:32,054:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/126182999.py:17: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Tempo Stabilność"].fillna(df_clean["Tempo Stabilność"].median(), inplace=True)

2025-03-19 11:04:38,007:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/2699068602.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["20 km Tempo"].fillna(df_clean["20 km Tempo"].median(), inplace=True)

2025-03-19 11:04:38,008:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/2699068602.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["20 km Czas"].fillna(df_clean["20 km Czas"].median(), inplace=True)

2025-03-19 11:04:38,009:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/2699068602.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Tempo Stabilność"].fillna(df_clean["Tempo Stabilność"].median(), inplace=True)

2025-03-19 11:06:45,403:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(str).apply(time_to_seconds)

2025-03-19 11:06:45,423:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(str).apply(time_to_seconds)

2025-03-19 11:06:45,442:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(str).apply(time_to_seconds)

2025-03-19 11:06:45,460:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(str).apply(time_to_seconds)

2025-03-19 11:06:45,479:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(str).apply(time_to_seconds)

2025-03-19 11:06:45,480:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:22: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(float)

2025-03-19 11:06:45,482:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice
  return np.nanmean(a, axis, out=out, keepdims=keepdims)

2025-03-19 11:06:45,482:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col].fillna(df_clean[col].median(), inplace=True)

2025-03-19 11:06:45,483:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:22: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(float)

2025-03-19 11:06:45,483:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice
  return np.nanmean(a, axis, out=out, keepdims=keepdims)

2025-03-19 11:06:45,483:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col].fillna(df_clean[col].median(), inplace=True)

2025-03-19 11:06:45,484:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:22: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(float)

2025-03-19 11:06:45,484:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice
  return np.nanmean(a, axis, out=out, keepdims=keepdims)

2025-03-19 11:06:45,484:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col].fillna(df_clean[col].median(), inplace=True)

2025-03-19 11:06:45,484:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:22: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(float)

2025-03-19 11:06:45,485:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice
  return np.nanmean(a, axis, out=out, keepdims=keepdims)

2025-03-19 11:06:45,485:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col].fillna(df_clean[col].median(), inplace=True)

2025-03-19 11:06:45,485:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:22: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col] = df_clean[col].astype(float)

2025-03-19 11:06:45,485:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice
  return np.nanmean(a, axis, out=out, keepdims=keepdims)

2025-03-19 11:06:45,485:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean[col].fillna(df_clean[col].median(), inplace=True)

2025-03-19 11:06:45,486:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/3060402247.py:26: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_clean["Tempo Stabilność"].fillna(df_clean["Tempo Stabilność"].median(), inplace=True)

2025-03-19 12:55:31,755:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4047828159.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["Rocznik"].fillna(mean_year, inplace=True)  # Uzupełnienie brakujących wartości

2025-03-19 12:55:31,756:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4047828159.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["Rocznik"].fillna(round(mean_year), inplace=True)

2025-03-19 12:55:31,756:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_41602/4047828159.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["Rocznik"] = df_final["Rocznik"].astype(int)  # Konwersja na liczbę całkowitą

2025-03-19 13:03:43,801:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_42278/4047828159.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["Rocznik"].fillna(mean_year, inplace=True)  # Uzupełnienie brakujących wartości

2025-03-19 13:03:43,802:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_42278/4047828159.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["Rocznik"].fillna(round(mean_year), inplace=True)

2025-03-19 13:03:43,803:WARNING:/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/ipykernel_42278/4047828159.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["Rocznik"] = df_final["Rocznik"].astype(int)  # Konwersja na liczbę całkowitą

2025-03-20 08:40:25,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 08:40:25,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 08:40:25,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 08:40:25,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 08:40:25,406:INFO:PyCaret RegressionExperiment
2025-03-20 08:40:25,406:INFO:Logging name: reg-default-name
2025-03-20 08:40:25,406:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 08:40:25,406:INFO:version 3.3.2
2025-03-20 08:40:25,406:INFO:Initializing setup()
2025-03-20 08:40:25,406:INFO:self.USI: 17b1
2025-03-20 08:40:25,406:INFO:self._variable_keys: {'pipeline', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'memory', 'y_train', 'idx', 'data', 'transform_target_param', 'X_test', '_ml_usecase', 'html_param', 'gpu_param', 'y', 'fold_groups_param', 'X', 'exp_name_log', 'exp_id', 'seed', '_available_plots', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'USI'}
2025-03-20 08:40:25,406:INFO:Checking environment
2025-03-20 08:40:25,406:INFO:python_version: 3.10.16
2025-03-20 08:40:25,406:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 08:40:25,406:INFO:machine: arm64
2025-03-20 08:40:25,406:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 08:40:25,406:INFO:Memory: svmem(total=38654705664, available=12989792256, percent=66.4, used=16621076480, free=52379648, active=12674269184, inactive=12535054336, wired=3946807296)
2025-03-20 08:40:25,407:INFO:Physical Core: 11
2025-03-20 08:40:25,407:INFO:Logical Core: 11
2025-03-20 08:40:25,407:INFO:Checking libraries
2025-03-20 08:40:25,407:INFO:System:
2025-03-20 08:40:25,407:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 08:40:25,407:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 08:40:25,407:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 08:40:25,407:INFO:PyCaret required dependencies:
2025-03-20 08:50:13,116:INFO:PyCaret RegressionExperiment
2025-03-20 08:50:13,116:INFO:Logging name: reg-default-name
2025-03-20 08:50:13,116:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 08:50:13,116:INFO:version 3.3.2
2025-03-20 08:50:13,116:INFO:Initializing setup()
2025-03-20 08:50:13,116:INFO:self.USI: 4430
2025-03-20 08:50:13,116:INFO:self._variable_keys: {'pipeline', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'memory', 'y_train', 'idx', 'data', 'transform_target_param', 'X_test', '_ml_usecase', 'html_param', 'gpu_param', 'y', 'fold_groups_param', 'X', 'exp_name_log', 'exp_id', 'seed', '_available_plots', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'USI'}
2025-03-20 08:50:13,116:INFO:Checking environment
2025-03-20 08:50:13,116:INFO:python_version: 3.10.16
2025-03-20 08:50:13,116:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 08:50:13,117:INFO:machine: arm64
2025-03-20 08:50:13,117:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 08:50:13,117:INFO:Memory: svmem(total=38654705664, available=13371031552, percent=65.4, used=15914237952, free=1211416576, active=12223856640, inactive=12152291328, wired=3690381312)
2025-03-20 08:50:13,117:INFO:Physical Core: 11
2025-03-20 08:50:13,117:INFO:Logical Core: 11
2025-03-20 08:50:13,117:INFO:Checking libraries
2025-03-20 08:50:13,117:INFO:System:
2025-03-20 08:50:13,117:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 08:50:13,117:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 08:50:13,117:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 08:50:13,117:INFO:PyCaret required dependencies:
2025-03-20 08:55:31,630:INFO:PyCaret RegressionExperiment
2025-03-20 08:55:31,630:INFO:Logging name: reg-default-name
2025-03-20 08:55:31,631:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 08:55:31,631:INFO:version 3.3.2
2025-03-20 08:55:31,631:INFO:Initializing setup()
2025-03-20 08:55:31,631:INFO:self.USI: 71c9
2025-03-20 08:55:31,631:INFO:self._variable_keys: {'pipeline', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'memory', 'y_train', 'idx', 'data', 'transform_target_param', 'X_test', '_ml_usecase', 'html_param', 'gpu_param', 'y', 'fold_groups_param', 'X', 'exp_name_log', 'exp_id', 'seed', '_available_plots', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'USI'}
2025-03-20 08:55:31,631:INFO:Checking environment
2025-03-20 08:55:31,631:INFO:python_version: 3.10.16
2025-03-20 08:55:31,631:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 08:55:31,631:INFO:machine: arm64
2025-03-20 08:55:31,631:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 08:55:31,631:INFO:Memory: svmem(total=38654705664, available=13188530176, percent=65.9, used=16148561920, free=647512064, active=12417482752, inactive=12419547136, wired=3731079168)
2025-03-20 08:55:31,631:INFO:Physical Core: 11
2025-03-20 08:55:31,631:INFO:Logical Core: 11
2025-03-20 08:55:31,631:INFO:Checking libraries
2025-03-20 08:55:31,631:INFO:System:
2025-03-20 08:55:31,631:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 08:55:31,631:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 08:55:31,631:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 08:55:31,631:INFO:PyCaret required dependencies:
2025-03-20 08:55:35,534:INFO:                 pip: 25.0
2025-03-20 08:55:35,534:INFO:          setuptools: 75.8.0
2025-03-20 08:55:35,534:INFO:             pycaret: 3.3.2
2025-03-20 08:55:35,534:INFO:             IPython: 8.34.0
2025-03-20 08:55:35,534:INFO:          ipywidgets: 8.1.5
2025-03-20 08:55:35,534:INFO:                tqdm: 4.67.1
2025-03-20 08:55:35,534:INFO:               numpy: 1.26.4
2025-03-20 08:55:35,534:INFO:              pandas: 2.1.4
2025-03-20 08:55:35,534:INFO:              jinja2: 3.1.6
2025-03-20 08:55:35,534:INFO:               scipy: 1.11.4
2025-03-20 08:55:35,534:INFO:              joblib: 1.3.2
2025-03-20 08:55:35,534:INFO:             sklearn: 1.4.2
2025-03-20 08:55:35,534:INFO:                pyod: 2.0.3
2025-03-20 08:55:35,534:INFO:            imblearn: 0.13.0
2025-03-20 08:55:35,534:INFO:   category_encoders: 2.7.0
2025-03-20 08:55:35,534:INFO:            lightgbm: 4.6.0
2025-03-20 08:55:35,534:INFO:               numba: 0.61.0
2025-03-20 08:55:35,534:INFO:            requests: 2.32.3
2025-03-20 08:55:35,534:INFO:          matplotlib: 3.7.5
2025-03-20 08:55:35,534:INFO:          scikitplot: 0.3.7
2025-03-20 08:55:35,534:INFO:         yellowbrick: 1.5
2025-03-20 08:55:35,534:INFO:              plotly: 5.24.1
2025-03-20 08:55:35,534:INFO:    plotly-resampler: Not installed
2025-03-20 08:55:35,534:INFO:             kaleido: 0.2.1
2025-03-20 08:55:35,534:INFO:           schemdraw: 0.15
2025-03-20 08:55:35,534:INFO:         statsmodels: 0.14.4
2025-03-20 08:55:35,534:INFO:              sktime: 0.26.0
2025-03-20 08:55:35,534:INFO:               tbats: 1.1.3
2025-03-20 08:55:35,534:INFO:            pmdarima: 2.0.4
2025-03-20 08:55:35,534:INFO:              psutil: 7.0.0
2025-03-20 08:55:35,534:INFO:          markupsafe: 3.0.2
2025-03-20 08:55:35,534:INFO:             pickle5: Not installed
2025-03-20 08:55:35,534:INFO:         cloudpickle: 3.1.1
2025-03-20 08:55:35,534:INFO:         deprecation: 2.1.0
2025-03-20 08:55:35,534:INFO:              xxhash: 3.5.0
2025-03-20 08:55:35,534:INFO:           wurlitzer: 3.1.1
2025-03-20 08:55:35,534:INFO:PyCaret optional dependencies:
2025-03-20 08:55:35,541:INFO:                shap: Not installed
2025-03-20 08:55:35,541:INFO:           interpret: Not installed
2025-03-20 08:55:35,541:INFO:                umap: Not installed
2025-03-20 08:55:35,541:INFO:     ydata_profiling: Not installed
2025-03-20 08:55:35,541:INFO:  explainerdashboard: Not installed
2025-03-20 08:55:35,541:INFO:             autoviz: Not installed
2025-03-20 08:55:35,541:INFO:           fairlearn: Not installed
2025-03-20 08:55:35,541:INFO:          deepchecks: Not installed
2025-03-20 08:55:35,541:INFO:             xgboost: Not installed
2025-03-20 08:55:35,541:INFO:            catboost: Not installed
2025-03-20 08:55:35,541:INFO:              kmodes: Not installed
2025-03-20 08:55:35,541:INFO:             mlxtend: Not installed
2025-03-20 08:55:35,541:INFO:       statsforecast: Not installed
2025-03-20 08:55:35,542:INFO:        tune_sklearn: Not installed
2025-03-20 08:55:35,542:INFO:                 ray: Not installed
2025-03-20 08:55:35,542:INFO:            hyperopt: Not installed
2025-03-20 08:55:35,542:INFO:              optuna: Not installed
2025-03-20 08:55:35,542:INFO:               skopt: Not installed
2025-03-20 08:55:35,542:INFO:              mlflow: Not installed
2025-03-20 08:55:35,542:INFO:              gradio: Not installed
2025-03-20 08:55:35,542:INFO:             fastapi: Not installed
2025-03-20 08:55:35,542:INFO:             uvicorn: Not installed
2025-03-20 08:55:35,542:INFO:              m2cgen: Not installed
2025-03-20 08:55:35,542:INFO:           evidently: Not installed
2025-03-20 08:55:35,542:INFO:               fugue: Not installed
2025-03-20 08:55:35,542:INFO:           streamlit: 1.43.2
2025-03-20 08:55:35,542:INFO:             prophet: Not installed
2025-03-20 08:55:35,542:INFO:None
2025-03-20 08:55:35,542:INFO:Set up data.
2025-03-20 08:55:35,546:INFO:Set up folding strategy.
2025-03-20 08:55:35,546:INFO:Set up train/test split.
2025-03-20 08:55:35,551:INFO:Set up index.
2025-03-20 08:55:35,551:INFO:Assigning column types.
2025-03-20 08:55:35,555:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 08:55:35,555:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,557:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,559:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,592:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,614:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,615:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,617:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,619:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,651:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,674:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 08:55:35,676:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,735:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,792:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 08:55:35,796:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,828:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,855:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,909:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 08:55:35,945:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:35,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:35,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:36,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:55:36,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,026:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 08:55:36,062:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:36,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,121:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:55:36,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,144:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 08:55:36,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,263:INFO:Preparing preprocessing pipeline...
2025-03-20 08:55:36,263:INFO:Set up simple imputation.
2025-03-20 08:55:36,263:INFO:Set up removing outliers.
2025-03-20 08:55:36,263:INFO:Set up feature normalization.
2025-03-20 08:55:36,263:INFO:Set up feature selection.
2025-03-20 08:55:36,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:55:36,323:INFO:Set up column name cleaning.
2025-03-20 08:57:19,891:INFO:PyCaret RegressionExperiment
2025-03-20 08:57:19,891:INFO:Logging name: reg-default-name
2025-03-20 08:57:19,891:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 08:57:19,891:INFO:version 3.3.2
2025-03-20 08:57:19,891:INFO:Initializing setup()
2025-03-20 08:57:19,891:INFO:self.USI: 387c
2025-03-20 08:57:19,891:INFO:self._variable_keys: {'pipeline', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'memory', 'y_train', 'idx', 'data', 'transform_target_param', 'X_test', '_ml_usecase', 'html_param', 'gpu_param', 'y', 'fold_groups_param', 'X', 'exp_name_log', 'exp_id', 'seed', '_available_plots', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'USI'}
2025-03-20 08:57:19,891:INFO:Checking environment
2025-03-20 08:57:19,891:INFO:python_version: 3.10.16
2025-03-20 08:57:19,891:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 08:57:19,891:INFO:machine: arm64
2025-03-20 08:57:19,891:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 08:57:19,891:INFO:Memory: svmem(total=38654705664, available=12811780096, percent=66.9, used=16550772736, free=59326464, active=12782927872, inactive=12441698304, wired=3767844864)
2025-03-20 08:57:19,891:INFO:Physical Core: 11
2025-03-20 08:57:19,891:INFO:Logical Core: 11
2025-03-20 08:57:19,891:INFO:Checking libraries
2025-03-20 08:57:19,891:INFO:System:
2025-03-20 08:57:19,891:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 08:57:19,891:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 08:57:19,891:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 08:57:19,891:INFO:PyCaret required dependencies:
2025-03-20 08:57:19,891:INFO:                 pip: 25.0
2025-03-20 08:57:19,891:INFO:          setuptools: 75.8.0
2025-03-20 08:57:19,891:INFO:             pycaret: 3.3.2
2025-03-20 08:57:19,891:INFO:             IPython: 8.34.0
2025-03-20 08:57:19,891:INFO:          ipywidgets: 8.1.5
2025-03-20 08:57:19,891:INFO:                tqdm: 4.67.1
2025-03-20 08:57:19,891:INFO:               numpy: 1.26.4
2025-03-20 08:57:19,891:INFO:              pandas: 2.1.4
2025-03-20 08:57:19,891:INFO:              jinja2: 3.1.6
2025-03-20 08:57:19,891:INFO:               scipy: 1.11.4
2025-03-20 08:57:19,891:INFO:              joblib: 1.3.2
2025-03-20 08:57:19,891:INFO:             sklearn: 1.4.2
2025-03-20 08:57:19,891:INFO:                pyod: 2.0.3
2025-03-20 08:57:19,891:INFO:            imblearn: 0.13.0
2025-03-20 08:57:19,891:INFO:   category_encoders: 2.7.0
2025-03-20 08:57:19,891:INFO:            lightgbm: 4.6.0
2025-03-20 08:57:19,891:INFO:               numba: 0.61.0
2025-03-20 08:57:19,891:INFO:            requests: 2.32.3
2025-03-20 08:57:19,891:INFO:          matplotlib: 3.7.5
2025-03-20 08:57:19,891:INFO:          scikitplot: 0.3.7
2025-03-20 08:57:19,891:INFO:         yellowbrick: 1.5
2025-03-20 08:57:19,892:INFO:              plotly: 5.24.1
2025-03-20 08:57:19,892:INFO:    plotly-resampler: Not installed
2025-03-20 08:57:19,892:INFO:             kaleido: 0.2.1
2025-03-20 08:57:19,892:INFO:           schemdraw: 0.15
2025-03-20 08:57:19,892:INFO:         statsmodels: 0.14.4
2025-03-20 08:57:19,892:INFO:              sktime: 0.26.0
2025-03-20 08:57:19,892:INFO:               tbats: 1.1.3
2025-03-20 08:57:19,892:INFO:            pmdarima: 2.0.4
2025-03-20 08:57:19,892:INFO:              psutil: 7.0.0
2025-03-20 08:57:19,892:INFO:          markupsafe: 3.0.2
2025-03-20 08:57:19,892:INFO:             pickle5: Not installed
2025-03-20 08:57:19,892:INFO:         cloudpickle: 3.1.1
2025-03-20 08:57:19,892:INFO:         deprecation: 2.1.0
2025-03-20 08:57:19,892:INFO:              xxhash: 3.5.0
2025-03-20 08:57:19,892:INFO:           wurlitzer: 3.1.1
2025-03-20 08:57:19,892:INFO:PyCaret optional dependencies:
2025-03-20 08:57:19,892:INFO:                shap: Not installed
2025-03-20 08:57:19,892:INFO:           interpret: Not installed
2025-03-20 08:57:19,892:INFO:                umap: Not installed
2025-03-20 08:57:19,892:INFO:     ydata_profiling: Not installed
2025-03-20 08:57:19,892:INFO:  explainerdashboard: Not installed
2025-03-20 08:57:19,892:INFO:             autoviz: Not installed
2025-03-20 08:57:19,892:INFO:           fairlearn: Not installed
2025-03-20 08:57:19,892:INFO:          deepchecks: Not installed
2025-03-20 08:57:19,892:INFO:             xgboost: Not installed
2025-03-20 08:57:19,892:INFO:            catboost: Not installed
2025-03-20 08:57:19,892:INFO:              kmodes: Not installed
2025-03-20 08:57:19,892:INFO:             mlxtend: Not installed
2025-03-20 08:57:19,892:INFO:       statsforecast: Not installed
2025-03-20 08:57:19,892:INFO:        tune_sklearn: Not installed
2025-03-20 08:57:19,892:INFO:                 ray: Not installed
2025-03-20 08:57:19,892:INFO:            hyperopt: Not installed
2025-03-20 08:57:19,892:INFO:              optuna: Not installed
2025-03-20 08:57:19,892:INFO:               skopt: Not installed
2025-03-20 08:57:19,892:INFO:              mlflow: Not installed
2025-03-20 08:57:19,892:INFO:              gradio: Not installed
2025-03-20 08:57:19,892:INFO:             fastapi: Not installed
2025-03-20 08:57:19,892:INFO:             uvicorn: Not installed
2025-03-20 08:57:19,892:INFO:              m2cgen: Not installed
2025-03-20 08:57:19,892:INFO:           evidently: Not installed
2025-03-20 08:57:19,892:INFO:               fugue: Not installed
2025-03-20 08:57:19,892:INFO:           streamlit: 1.43.2
2025-03-20 08:57:19,892:INFO:             prophet: Not installed
2025-03-20 08:57:19,892:INFO:None
2025-03-20 08:57:19,892:INFO:Set up data.
2025-03-20 08:57:19,897:INFO:Set up folding strategy.
2025-03-20 08:57:19,897:INFO:Set up train/test split.
2025-03-20 08:57:19,902:INFO:Set up index.
2025-03-20 08:57:19,902:INFO:Assigning column types.
2025-03-20 08:57:19,907:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 08:57:19,907:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,912:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,945:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:19,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:19,968:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,970:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:57:19,972:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,027:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 08:57:20,029:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,032:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,086:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,089:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,123:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,146:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 08:57:20,150:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,182:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,209:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,262:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 08:57:20,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,355:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,378:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,379:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 08:57:20,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:57:20,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,498:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 08:57:20,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,619:INFO:Preparing preprocessing pipeline...
2025-03-20 08:57:20,619:INFO:Set up simple imputation.
2025-03-20 08:57:20,619:INFO:Set up removing outliers.
2025-03-20 08:57:20,619:INFO:Set up feature normalization.
2025-03-20 08:57:20,619:INFO:Set up feature selection.
2025-03-20 08:57:20,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:20,680:INFO:Set up column name cleaning.
2025-03-20 08:57:21,458:INFO:Finished creating preprocessing pipeline.
2025-03-20 08:57:21,465:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 08:57:21,465:INFO:Creating final display dataframe.
2025-03-20 08:57:21,931:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              387c
2025-03-20 08:57:21,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:21,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:22,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:22,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:57:22,055:INFO:setup() successfully completed in 2.17s...............
2025-03-20 08:59:28,081:INFO:PyCaret RegressionExperiment
2025-03-20 08:59:28,081:INFO:Logging name: reg-default-name
2025-03-20 08:59:28,081:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 08:59:28,081:INFO:version 3.3.2
2025-03-20 08:59:28,081:INFO:Initializing setup()
2025-03-20 08:59:28,081:INFO:self.USI: 3e8a
2025-03-20 08:59:28,082:INFO:self._variable_keys: {'pipeline', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'memory', 'y_train', 'idx', 'data', 'transform_target_param', 'X_test', '_ml_usecase', 'html_param', 'gpu_param', 'y', 'fold_groups_param', 'X', 'exp_name_log', 'exp_id', 'seed', '_available_plots', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'USI'}
2025-03-20 08:59:28,082:INFO:Checking environment
2025-03-20 08:59:28,082:INFO:python_version: 3.10.16
2025-03-20 08:59:28,082:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 08:59:28,082:INFO:machine: arm64
2025-03-20 08:59:28,082:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 08:59:28,082:INFO:Memory: svmem(total=38654705664, available=12994445312, percent=66.4, used=16357539840, free=281165824, active=12484231168, inactive=12394201088, wired=3873308672)
2025-03-20 08:59:28,082:INFO:Physical Core: 11
2025-03-20 08:59:28,082:INFO:Logical Core: 11
2025-03-20 08:59:28,082:INFO:Checking libraries
2025-03-20 08:59:28,082:INFO:System:
2025-03-20 08:59:28,082:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 08:59:28,082:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 08:59:28,082:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 08:59:28,082:INFO:PyCaret required dependencies:
2025-03-20 08:59:28,082:INFO:                 pip: 25.0
2025-03-20 08:59:28,082:INFO:          setuptools: 75.8.0
2025-03-20 08:59:28,082:INFO:             pycaret: 3.3.2
2025-03-20 08:59:28,082:INFO:             IPython: 8.34.0
2025-03-20 08:59:28,082:INFO:          ipywidgets: 8.1.5
2025-03-20 08:59:28,082:INFO:                tqdm: 4.67.1
2025-03-20 08:59:28,082:INFO:               numpy: 1.26.4
2025-03-20 08:59:28,082:INFO:              pandas: 2.1.4
2025-03-20 08:59:28,082:INFO:              jinja2: 3.1.6
2025-03-20 08:59:28,082:INFO:               scipy: 1.11.4
2025-03-20 08:59:28,082:INFO:              joblib: 1.3.2
2025-03-20 08:59:28,082:INFO:             sklearn: 1.4.2
2025-03-20 08:59:28,082:INFO:                pyod: 2.0.3
2025-03-20 08:59:28,083:INFO:            imblearn: 0.13.0
2025-03-20 08:59:28,083:INFO:   category_encoders: 2.7.0
2025-03-20 08:59:28,083:INFO:            lightgbm: 4.6.0
2025-03-20 08:59:28,083:INFO:               numba: 0.61.0
2025-03-20 08:59:28,083:INFO:            requests: 2.32.3
2025-03-20 08:59:28,083:INFO:          matplotlib: 3.7.5
2025-03-20 08:59:28,083:INFO:          scikitplot: 0.3.7
2025-03-20 08:59:28,083:INFO:         yellowbrick: 1.5
2025-03-20 08:59:28,083:INFO:              plotly: 5.24.1
2025-03-20 08:59:28,083:INFO:    plotly-resampler: Not installed
2025-03-20 08:59:28,083:INFO:             kaleido: 0.2.1
2025-03-20 08:59:28,083:INFO:           schemdraw: 0.15
2025-03-20 08:59:28,083:INFO:         statsmodels: 0.14.4
2025-03-20 08:59:28,083:INFO:              sktime: 0.26.0
2025-03-20 08:59:28,083:INFO:               tbats: 1.1.3
2025-03-20 08:59:28,083:INFO:            pmdarima: 2.0.4
2025-03-20 08:59:28,083:INFO:              psutil: 7.0.0
2025-03-20 08:59:28,083:INFO:          markupsafe: 3.0.2
2025-03-20 08:59:28,083:INFO:             pickle5: Not installed
2025-03-20 08:59:28,083:INFO:         cloudpickle: 3.1.1
2025-03-20 08:59:28,083:INFO:         deprecation: 2.1.0
2025-03-20 08:59:28,083:INFO:              xxhash: 3.5.0
2025-03-20 08:59:28,083:INFO:           wurlitzer: 3.1.1
2025-03-20 08:59:28,083:INFO:PyCaret optional dependencies:
2025-03-20 08:59:28,083:INFO:                shap: Not installed
2025-03-20 08:59:28,083:INFO:           interpret: Not installed
2025-03-20 08:59:28,083:INFO:                umap: Not installed
2025-03-20 08:59:28,083:INFO:     ydata_profiling: Not installed
2025-03-20 08:59:28,083:INFO:  explainerdashboard: Not installed
2025-03-20 08:59:28,083:INFO:             autoviz: Not installed
2025-03-20 08:59:28,083:INFO:           fairlearn: Not installed
2025-03-20 08:59:28,083:INFO:          deepchecks: Not installed
2025-03-20 08:59:28,083:INFO:             xgboost: Not installed
2025-03-20 08:59:28,083:INFO:            catboost: Not installed
2025-03-20 08:59:28,083:INFO:              kmodes: Not installed
2025-03-20 08:59:28,083:INFO:             mlxtend: Not installed
2025-03-20 08:59:28,084:INFO:       statsforecast: Not installed
2025-03-20 08:59:28,084:INFO:        tune_sklearn: Not installed
2025-03-20 08:59:28,084:INFO:                 ray: Not installed
2025-03-20 08:59:28,084:INFO:            hyperopt: Not installed
2025-03-20 08:59:28,084:INFO:              optuna: Not installed
2025-03-20 08:59:28,084:INFO:               skopt: Not installed
2025-03-20 08:59:28,084:INFO:              mlflow: Not installed
2025-03-20 08:59:28,084:INFO:              gradio: Not installed
2025-03-20 08:59:28,084:INFO:             fastapi: Not installed
2025-03-20 08:59:28,084:INFO:             uvicorn: Not installed
2025-03-20 08:59:28,084:INFO:              m2cgen: Not installed
2025-03-20 08:59:28,084:INFO:           evidently: Not installed
2025-03-20 08:59:28,084:INFO:               fugue: Not installed
2025-03-20 08:59:28,084:INFO:           streamlit: 1.43.2
2025-03-20 08:59:28,084:INFO:             prophet: Not installed
2025-03-20 08:59:28,084:INFO:None
2025-03-20 08:59:28,084:INFO:Set up data.
2025-03-20 08:59:28,089:INFO:Set up folding strategy.
2025-03-20 08:59:28,090:INFO:Set up train/test split.
2025-03-20 08:59:28,096:INFO:Set up index.
2025-03-20 08:59:28,096:INFO:Assigning column types.
2025-03-20 08:59:28,101:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 08:59:28,101:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,104:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,107:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,163:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,165:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,168:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,200:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,223:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 08:59:28,226:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,261:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,283:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,286:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,289:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,321:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,345:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 08:59:28,349:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,410:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,465:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 08:59:28,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,564:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,587:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 08:59:28,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,685:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 08:59:28,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,708:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 08:59:28,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,825:INFO:Preparing preprocessing pipeline...
2025-03-20 08:59:28,825:INFO:Set up simple imputation.
2025-03-20 08:59:28,825:INFO:Set up removing outliers.
2025-03-20 08:59:28,825:INFO:Set up feature normalization.
2025-03-20 08:59:28,825:INFO:Set up feature selection.
2025-03-20 08:59:28,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:28,885:INFO:Set up column name cleaning.
2025-03-20 08:59:28,915:INFO:Finished creating preprocessing pipeline.
2025-03-20 08:59:28,922:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 08:59:28,922:INFO:Creating final display dataframe.
2025-03-20 08:59:29,012:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              3e8a
2025-03-20 08:59:29,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:29,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:29,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:29,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 08:59:29,131:INFO:setup() successfully completed in 1.05s...............
2025-03-20 09:00:57,759:INFO:PyCaret RegressionExperiment
2025-03-20 09:00:57,759:INFO:Logging name: reg-default-name
2025-03-20 09:00:57,759:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 09:00:57,759:INFO:version 3.3.2
2025-03-20 09:00:57,759:INFO:Initializing setup()
2025-03-20 09:00:57,759:INFO:self.USI: db5c
2025-03-20 09:00:57,759:INFO:self._variable_keys: {'pipeline', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'memory', 'y_train', 'idx', 'data', 'transform_target_param', 'X_test', '_ml_usecase', 'html_param', 'gpu_param', 'y', 'fold_groups_param', 'X', 'exp_name_log', 'exp_id', 'seed', '_available_plots', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'USI'}
2025-03-20 09:00:57,759:INFO:Checking environment
2025-03-20 09:00:57,759:INFO:python_version: 3.10.16
2025-03-20 09:00:57,759:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 09:00:57,760:INFO:machine: arm64
2025-03-20 09:00:57,760:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 09:00:57,760:INFO:Memory: svmem(total=38654705664, available=12991348736, percent=66.4, used=16368517120, free=279445504, active=12484493312, inactive=12388188160, wired=3884023808)
2025-03-20 09:00:57,760:INFO:Physical Core: 11
2025-03-20 09:00:57,760:INFO:Logical Core: 11
2025-03-20 09:00:57,760:INFO:Checking libraries
2025-03-20 09:00:57,760:INFO:System:
2025-03-20 09:00:57,760:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 09:00:57,760:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 09:00:57,760:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 09:00:57,760:INFO:PyCaret required dependencies:
2025-03-20 09:00:57,760:INFO:                 pip: 25.0
2025-03-20 09:00:57,760:INFO:          setuptools: 75.8.0
2025-03-20 09:00:57,760:INFO:             pycaret: 3.3.2
2025-03-20 09:00:57,760:INFO:             IPython: 8.34.0
2025-03-20 09:00:57,760:INFO:          ipywidgets: 8.1.5
2025-03-20 09:00:57,760:INFO:                tqdm: 4.67.1
2025-03-20 09:00:57,760:INFO:               numpy: 1.26.4
2025-03-20 09:00:57,760:INFO:              pandas: 2.1.4
2025-03-20 09:00:57,761:INFO:              jinja2: 3.1.6
2025-03-20 09:00:57,761:INFO:               scipy: 1.11.4
2025-03-20 09:00:57,761:INFO:              joblib: 1.3.2
2025-03-20 09:00:57,761:INFO:             sklearn: 1.4.2
2025-03-20 09:00:57,761:INFO:                pyod: 2.0.3
2025-03-20 09:00:57,761:INFO:            imblearn: 0.13.0
2025-03-20 09:00:57,761:INFO:   category_encoders: 2.7.0
2025-03-20 09:00:57,761:INFO:            lightgbm: 4.6.0
2025-03-20 09:00:57,761:INFO:               numba: 0.61.0
2025-03-20 09:00:57,761:INFO:            requests: 2.32.3
2025-03-20 09:00:57,761:INFO:          matplotlib: 3.7.5
2025-03-20 09:00:57,761:INFO:          scikitplot: 0.3.7
2025-03-20 09:00:57,761:INFO:         yellowbrick: 1.5
2025-03-20 09:00:57,761:INFO:              plotly: 5.24.1
2025-03-20 09:00:57,761:INFO:    plotly-resampler: Not installed
2025-03-20 09:00:57,761:INFO:             kaleido: 0.2.1
2025-03-20 09:00:57,761:INFO:           schemdraw: 0.15
2025-03-20 09:00:57,761:INFO:         statsmodels: 0.14.4
2025-03-20 09:00:57,761:INFO:              sktime: 0.26.0
2025-03-20 09:00:57,761:INFO:               tbats: 1.1.3
2025-03-20 09:00:57,761:INFO:            pmdarima: 2.0.4
2025-03-20 09:00:57,761:INFO:              psutil: 7.0.0
2025-03-20 09:00:57,761:INFO:          markupsafe: 3.0.2
2025-03-20 09:00:57,761:INFO:             pickle5: Not installed
2025-03-20 09:00:57,761:INFO:         cloudpickle: 3.1.1
2025-03-20 09:00:57,761:INFO:         deprecation: 2.1.0
2025-03-20 09:00:57,761:INFO:              xxhash: 3.5.0
2025-03-20 09:00:57,761:INFO:           wurlitzer: 3.1.1
2025-03-20 09:00:57,761:INFO:PyCaret optional dependencies:
2025-03-20 09:00:57,761:INFO:                shap: Not installed
2025-03-20 09:00:57,761:INFO:           interpret: Not installed
2025-03-20 09:00:57,761:INFO:                umap: Not installed
2025-03-20 09:00:57,761:INFO:     ydata_profiling: Not installed
2025-03-20 09:00:57,761:INFO:  explainerdashboard: Not installed
2025-03-20 09:00:57,762:INFO:             autoviz: Not installed
2025-03-20 09:00:57,762:INFO:           fairlearn: Not installed
2025-03-20 09:00:57,762:INFO:          deepchecks: Not installed
2025-03-20 09:00:57,762:INFO:             xgboost: Not installed
2025-03-20 09:00:57,762:INFO:            catboost: Not installed
2025-03-20 09:00:57,762:INFO:              kmodes: Not installed
2025-03-20 09:00:57,762:INFO:             mlxtend: Not installed
2025-03-20 09:00:57,762:INFO:       statsforecast: Not installed
2025-03-20 09:00:57,762:INFO:        tune_sklearn: Not installed
2025-03-20 09:00:57,762:INFO:                 ray: Not installed
2025-03-20 09:00:57,762:INFO:            hyperopt: Not installed
2025-03-20 09:00:57,762:INFO:              optuna: Not installed
2025-03-20 09:00:57,762:INFO:               skopt: Not installed
2025-03-20 09:00:57,762:INFO:              mlflow: Not installed
2025-03-20 09:00:57,762:INFO:              gradio: Not installed
2025-03-20 09:00:57,762:INFO:             fastapi: Not installed
2025-03-20 09:00:57,762:INFO:             uvicorn: Not installed
2025-03-20 09:00:57,762:INFO:              m2cgen: Not installed
2025-03-20 09:00:57,762:INFO:           evidently: Not installed
2025-03-20 09:00:57,762:INFO:               fugue: Not installed
2025-03-20 09:00:57,762:INFO:           streamlit: 1.43.2
2025-03-20 09:00:57,762:INFO:             prophet: Not installed
2025-03-20 09:00:57,762:INFO:None
2025-03-20 09:00:57,762:INFO:Set up data.
2025-03-20 09:00:57,767:INFO:Set up folding strategy.
2025-03-20 09:00:57,767:INFO:Set up train/test split.
2025-03-20 09:00:57,773:INFO:Set up index.
2025-03-20 09:00:57,773:INFO:Assigning column types.
2025-03-20 09:00:57,778:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 09:00:57,778:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,781:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,816:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,839:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:57,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:57,839:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,841:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,844:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,875:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:57,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:57,898:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 09:00:57,900:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,902:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,956:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:57,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:57,959:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,961:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 09:00:57,993:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,015:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 09:00:58,020:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,051:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,134:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 09:00:58,170:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,191:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,250:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 09:00:58,286:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,344:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 09:00:58,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,366:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 09:00:58,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,480:INFO:Preparing preprocessing pipeline...
2025-03-20 09:00:58,480:INFO:Set up simple imputation.
2025-03-20 09:00:58,480:INFO:Set up removing outliers.
2025-03-20 09:00:58,480:INFO:Set up feature normalization.
2025-03-20 09:00:58,480:INFO:Set up feature selection.
2025-03-20 09:00:58,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,564:INFO:Set up column name cleaning.
2025-03-20 09:00:58,596:INFO:Finished creating preprocessing pipeline.
2025-03-20 09:00:58,603:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 09:00:58,603:INFO:Creating final display dataframe.
2025-03-20 09:00:58,696:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              db5c
2025-03-20 09:00:58,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,817:INFO:setup() successfully completed in 1.06s...............
2025-03-20 09:00:58,823:INFO:gpu_param set to False
2025-03-20 09:00:58,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:00:58,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 09:01:17,365:INFO:Initializing compare_models()
2025-03-20 09:01:17,365:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-20 09:01:17,365:INFO:Checking exceptions
2025-03-20 09:01:17,369:INFO:Preparing display monitor
2025-03-20 09:01:17,398:INFO:Initializing Linear Regression
2025-03-20 09:01:17,398:INFO:Total runtime is 2.948443094889323e-06 minutes
2025-03-20 09:01:17,399:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:17,400:INFO:Initializing create_model()
2025-03-20 09:01:17,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:17,400:INFO:Checking exceptions
2025-03-20 09:01:17,400:INFO:Importing libraries
2025-03-20 09:01:17,400:INFO:Copying training dataset
2025-03-20 09:01:17,412:INFO:Defining folds
2025-03-20 09:01:17,412:INFO:Declaring metric variables
2025-03-20 09:01:17,415:INFO:Importing untrained model
2025-03-20 09:01:17,417:INFO:Linear Regression Imported successfully
2025-03-20 09:01:17,422:INFO:Starting cross validation
2025-03-20 09:01:17,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:20,597:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002349 seconds.
2025-03-20 09:01:20,598:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 09:01:20,598:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 09:01:20,598:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002496 seconds.
2025-03-20 09:01:20,598:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,598:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 09:01:20,598:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 09:01:20,600:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,600:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,602:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.004522 seconds.
2025-03-20 09:01:20,602:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,602:INFO:[LightGBM] [Info] Start training from score 7337.208662
2025-03-20 09:01:20,602:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 09:01:20,603:INFO:[LightGBM] [Info] Start training from score 7335.329512
2025-03-20 09:01:20,603:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,603:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002738 seconds.
2025-03-20 09:01:20,603:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,603:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 09:01:20,604:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,605:INFO:[LightGBM] [Info] Start training from score 7348.947934
2025-03-20 09:01:20,605:INFO:[LightGBM] [Info] Start training from score 7341.151421
2025-03-20 09:01:20,606:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002659 seconds.
2025-03-20 09:01:20,606:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,606:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 09:01:20,609:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,610:INFO:[LightGBM] [Info] Start training from score 7351.855824[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002441 seconds.
2025-03-20 09:01:20,610:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 09:01:20,610:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 09:01:20,610:INFO:
2025-03-20 09:01:20,610:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 09:01:20,612:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 09:01:20,613:INFO:[LightGBM] [Info] Start training from score 7341.090685
2025-03-20 09:01:20,613:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002960 seconds.
2025-03-20 09:01:20,613:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,613:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 09:01:20,614:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001898 seconds.
2025-03-20 09:01:20,615:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002116 seconds.
2025-03-20 09:01:20,615:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Start training from score 7347.301409
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 09:01:20,615:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,616:INFO:[LightGBM] [Info] Start training from score 7343.422373
2025-03-20 09:01:20,616:INFO:[LightGBM] [Info] Start training from score 7346.140116
2025-03-20 09:01:20,660:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001618 seconds.
2025-03-20 09:01:20,660:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:01:20,660:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 09:01:20,661:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 09:01:20,662:INFO:[LightGBM] [Info] Start training from score 7334.950880
2025-03-20 09:01:24,370:INFO:Calculating mean and std
2025-03-20 09:01:24,372:INFO:Creating metrics dataframe
2025-03-20 09:01:24,376:INFO:Uploading results into container
2025-03-20 09:01:24,376:INFO:Uploading model into container now
2025-03-20 09:01:24,376:INFO:_master_model_container: 1
2025-03-20 09:01:24,376:INFO:_display_container: 2
2025-03-20 09:01:24,377:INFO:LinearRegression(n_jobs=-1)
2025-03-20 09:01:24,377:INFO:create_model() successfully completed......................................
2025-03-20 09:01:24,506:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:24,506:INFO:Creating metrics dataframe
2025-03-20 09:01:24,510:INFO:Initializing Lasso Regression
2025-03-20 09:01:24,510:INFO:Total runtime is 0.11853488286336263 minutes
2025-03-20 09:01:24,512:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:24,512:INFO:Initializing create_model()
2025-03-20 09:01:24,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:24,512:INFO:Checking exceptions
2025-03-20 09:01:24,512:INFO:Importing libraries
2025-03-20 09:01:24,512:INFO:Copying training dataset
2025-03-20 09:01:24,520:INFO:Defining folds
2025-03-20 09:01:24,520:INFO:Declaring metric variables
2025-03-20 09:01:24,521:INFO:Importing untrained model
2025-03-20 09:01:24,523:INFO:Lasso Regression Imported successfully
2025-03-20 09:01:24,526:INFO:Starting cross validation
2025-03-20 09:01:24,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:28,878:INFO:Calculating mean and std
2025-03-20 09:01:28,879:INFO:Creating metrics dataframe
2025-03-20 09:01:28,880:INFO:Uploading results into container
2025-03-20 09:01:28,880:INFO:Uploading model into container now
2025-03-20 09:01:28,881:INFO:_master_model_container: 2
2025-03-20 09:01:28,881:INFO:_display_container: 2
2025-03-20 09:01:28,881:INFO:Lasso(random_state=42)
2025-03-20 09:01:28,881:INFO:create_model() successfully completed......................................
2025-03-20 09:01:28,963:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:28,964:INFO:Creating metrics dataframe
2025-03-20 09:01:28,968:INFO:Initializing Ridge Regression
2025-03-20 09:01:28,968:INFO:Total runtime is 0.1928351839383443 minutes
2025-03-20 09:01:28,969:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:28,970:INFO:Initializing create_model()
2025-03-20 09:01:28,970:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:28,970:INFO:Checking exceptions
2025-03-20 09:01:28,970:INFO:Importing libraries
2025-03-20 09:01:28,970:INFO:Copying training dataset
2025-03-20 09:01:28,976:INFO:Defining folds
2025-03-20 09:01:28,976:INFO:Declaring metric variables
2025-03-20 09:01:28,978:INFO:Importing untrained model
2025-03-20 09:01:28,979:INFO:Ridge Regression Imported successfully
2025-03-20 09:01:28,983:INFO:Starting cross validation
2025-03-20 09:01:28,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:33,267:INFO:Calculating mean and std
2025-03-20 09:01:33,267:INFO:Creating metrics dataframe
2025-03-20 09:01:33,269:INFO:Uploading results into container
2025-03-20 09:01:33,269:INFO:Uploading model into container now
2025-03-20 09:01:33,270:INFO:_master_model_container: 3
2025-03-20 09:01:33,270:INFO:_display_container: 2
2025-03-20 09:01:33,270:INFO:Ridge(random_state=42)
2025-03-20 09:01:33,270:INFO:create_model() successfully completed......................................
2025-03-20 09:01:33,355:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:33,355:INFO:Creating metrics dataframe
2025-03-20 09:01:33,359:INFO:Initializing Elastic Net
2025-03-20 09:01:33,360:INFO:Total runtime is 0.26603314876556394 minutes
2025-03-20 09:01:33,361:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:33,362:INFO:Initializing create_model()
2025-03-20 09:01:33,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:33,362:INFO:Checking exceptions
2025-03-20 09:01:33,362:INFO:Importing libraries
2025-03-20 09:01:33,362:INFO:Copying training dataset
2025-03-20 09:01:33,369:INFO:Defining folds
2025-03-20 09:01:33,369:INFO:Declaring metric variables
2025-03-20 09:01:33,371:INFO:Importing untrained model
2025-03-20 09:01:33,373:INFO:Elastic Net Imported successfully
2025-03-20 09:01:33,376:INFO:Starting cross validation
2025-03-20 09:01:33,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:38,092:INFO:Calculating mean and std
2025-03-20 09:01:38,092:INFO:Creating metrics dataframe
2025-03-20 09:01:38,094:INFO:Uploading results into container
2025-03-20 09:01:38,094:INFO:Uploading model into container now
2025-03-20 09:01:38,094:INFO:_master_model_container: 4
2025-03-20 09:01:38,094:INFO:_display_container: 2
2025-03-20 09:01:38,095:INFO:ElasticNet(random_state=42)
2025-03-20 09:01:38,095:INFO:create_model() successfully completed......................................
2025-03-20 09:01:38,180:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:38,181:INFO:Creating metrics dataframe
2025-03-20 09:01:38,185:INFO:Initializing Least Angle Regression
2025-03-20 09:01:38,185:INFO:Total runtime is 0.34645431439081825 minutes
2025-03-20 09:01:38,187:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:38,187:INFO:Initializing create_model()
2025-03-20 09:01:38,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:38,187:INFO:Checking exceptions
2025-03-20 09:01:38,187:INFO:Importing libraries
2025-03-20 09:01:38,187:INFO:Copying training dataset
2025-03-20 09:01:38,194:INFO:Defining folds
2025-03-20 09:01:38,194:INFO:Declaring metric variables
2025-03-20 09:01:38,196:INFO:Importing untrained model
2025-03-20 09:01:38,198:INFO:Least Angle Regression Imported successfully
2025-03-20 09:01:38,200:INFO:Starting cross validation
2025-03-20 09:01:38,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:42,634:INFO:Calculating mean and std
2025-03-20 09:01:42,635:INFO:Creating metrics dataframe
2025-03-20 09:01:42,636:INFO:Uploading results into container
2025-03-20 09:01:42,636:INFO:Uploading model into container now
2025-03-20 09:01:42,637:INFO:_master_model_container: 5
2025-03-20 09:01:42,637:INFO:_display_container: 2
2025-03-20 09:01:42,637:INFO:Lars(random_state=42)
2025-03-20 09:01:42,637:INFO:create_model() successfully completed......................................
2025-03-20 09:01:42,721:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:42,722:INFO:Creating metrics dataframe
2025-03-20 09:01:42,726:INFO:Initializing Lasso Least Angle Regression
2025-03-20 09:01:42,726:INFO:Total runtime is 0.42214033206303914 minutes
2025-03-20 09:01:42,728:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:42,728:INFO:Initializing create_model()
2025-03-20 09:01:42,728:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:42,728:INFO:Checking exceptions
2025-03-20 09:01:42,728:INFO:Importing libraries
2025-03-20 09:01:42,728:INFO:Copying training dataset
2025-03-20 09:01:42,735:INFO:Defining folds
2025-03-20 09:01:42,735:INFO:Declaring metric variables
2025-03-20 09:01:42,737:INFO:Importing untrained model
2025-03-20 09:01:42,739:INFO:Lasso Least Angle Regression Imported successfully
2025-03-20 09:01:42,742:INFO:Starting cross validation
2025-03-20 09:01:42,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:47,167:INFO:Calculating mean and std
2025-03-20 09:01:47,168:INFO:Creating metrics dataframe
2025-03-20 09:01:47,169:INFO:Uploading results into container
2025-03-20 09:01:47,169:INFO:Uploading model into container now
2025-03-20 09:01:47,170:INFO:_master_model_container: 6
2025-03-20 09:01:47,170:INFO:_display_container: 2
2025-03-20 09:01:47,170:INFO:LassoLars(random_state=42)
2025-03-20 09:01:47,170:INFO:create_model() successfully completed......................................
2025-03-20 09:01:47,247:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:47,247:INFO:Creating metrics dataframe
2025-03-20 09:01:47,251:INFO:Initializing Orthogonal Matching Pursuit
2025-03-20 09:01:47,251:INFO:Total runtime is 0.49755373001098635 minutes
2025-03-20 09:01:47,252:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:47,253:INFO:Initializing create_model()
2025-03-20 09:01:47,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:47,253:INFO:Checking exceptions
2025-03-20 09:01:47,253:INFO:Importing libraries
2025-03-20 09:01:47,253:INFO:Copying training dataset
2025-03-20 09:01:47,259:INFO:Defining folds
2025-03-20 09:01:47,259:INFO:Declaring metric variables
2025-03-20 09:01:47,261:INFO:Importing untrained model
2025-03-20 09:01:47,263:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 09:01:47,266:INFO:Starting cross validation
2025-03-20 09:01:47,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:51,519:INFO:Calculating mean and std
2025-03-20 09:01:51,520:INFO:Creating metrics dataframe
2025-03-20 09:01:51,521:INFO:Uploading results into container
2025-03-20 09:01:51,521:INFO:Uploading model into container now
2025-03-20 09:01:51,521:INFO:_master_model_container: 7
2025-03-20 09:01:51,521:INFO:_display_container: 2
2025-03-20 09:01:51,522:INFO:OrthogonalMatchingPursuit()
2025-03-20 09:01:51,522:INFO:create_model() successfully completed......................................
2025-03-20 09:01:51,602:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:51,602:INFO:Creating metrics dataframe
2025-03-20 09:01:51,607:INFO:Initializing Bayesian Ridge
2025-03-20 09:01:51,607:INFO:Total runtime is 0.5701554179191589 minutes
2025-03-20 09:01:51,608:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:51,609:INFO:Initializing create_model()
2025-03-20 09:01:51,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:51,609:INFO:Checking exceptions
2025-03-20 09:01:51,609:INFO:Importing libraries
2025-03-20 09:01:51,609:INFO:Copying training dataset
2025-03-20 09:01:51,615:INFO:Defining folds
2025-03-20 09:01:51,615:INFO:Declaring metric variables
2025-03-20 09:01:51,617:INFO:Importing untrained model
2025-03-20 09:01:51,618:INFO:Bayesian Ridge Imported successfully
2025-03-20 09:01:51,622:INFO:Starting cross validation
2025-03-20 09:01:51,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:55,816:INFO:Calculating mean and std
2025-03-20 09:01:55,817:INFO:Creating metrics dataframe
2025-03-20 09:01:55,818:INFO:Uploading results into container
2025-03-20 09:01:55,818:INFO:Uploading model into container now
2025-03-20 09:01:55,819:INFO:_master_model_container: 8
2025-03-20 09:01:55,819:INFO:_display_container: 2
2025-03-20 09:01:55,819:INFO:BayesianRidge()
2025-03-20 09:01:55,819:INFO:create_model() successfully completed......................................
2025-03-20 09:01:55,907:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:55,907:INFO:Creating metrics dataframe
2025-03-20 09:01:55,912:INFO:Initializing Passive Aggressive Regressor
2025-03-20 09:01:55,912:INFO:Total runtime is 0.6419045845667521 minutes
2025-03-20 09:01:55,914:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:55,914:INFO:Initializing create_model()
2025-03-20 09:01:55,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:55,914:INFO:Checking exceptions
2025-03-20 09:01:55,914:INFO:Importing libraries
2025-03-20 09:01:55,914:INFO:Copying training dataset
2025-03-20 09:01:55,922:INFO:Defining folds
2025-03-20 09:01:55,922:INFO:Declaring metric variables
2025-03-20 09:01:55,924:INFO:Importing untrained model
2025-03-20 09:01:55,926:INFO:Passive Aggressive Regressor Imported successfully
2025-03-20 09:01:55,929:INFO:Starting cross validation
2025-03-20 09:01:55,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:01:59,887:INFO:Calculating mean and std
2025-03-20 09:01:59,887:INFO:Creating metrics dataframe
2025-03-20 09:01:59,888:INFO:Uploading results into container
2025-03-20 09:01:59,889:INFO:Uploading model into container now
2025-03-20 09:01:59,889:INFO:_master_model_container: 9
2025-03-20 09:01:59,889:INFO:_display_container: 2
2025-03-20 09:01:59,889:INFO:PassiveAggressiveRegressor(random_state=42)
2025-03-20 09:01:59,889:INFO:create_model() successfully completed......................................
2025-03-20 09:01:59,974:INFO:SubProcess create_model() end ==================================
2025-03-20 09:01:59,974:INFO:Creating metrics dataframe
2025-03-20 09:01:59,979:INFO:Initializing Huber Regressor
2025-03-20 09:01:59,979:INFO:Total runtime is 0.7096915165583293 minutes
2025-03-20 09:01:59,981:INFO:SubProcess create_model() called ==================================
2025-03-20 09:01:59,981:INFO:Initializing create_model()
2025-03-20 09:01:59,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:01:59,981:INFO:Checking exceptions
2025-03-20 09:01:59,981:INFO:Importing libraries
2025-03-20 09:01:59,981:INFO:Copying training dataset
2025-03-20 09:01:59,988:INFO:Defining folds
2025-03-20 09:01:59,988:INFO:Declaring metric variables
2025-03-20 09:01:59,990:INFO:Importing untrained model
2025-03-20 09:01:59,991:INFO:Huber Regressor Imported successfully
2025-03-20 09:01:59,995:INFO:Starting cross validation
2025-03-20 09:01:59,999:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:02:04,324:INFO:Calculating mean and std
2025-03-20 09:02:04,326:INFO:Creating metrics dataframe
2025-03-20 09:02:04,328:INFO:Uploading results into container
2025-03-20 09:02:04,328:INFO:Uploading model into container now
2025-03-20 09:02:04,328:INFO:_master_model_container: 10
2025-03-20 09:02:04,328:INFO:_display_container: 2
2025-03-20 09:02:04,329:INFO:HuberRegressor()
2025-03-20 09:02:04,329:INFO:create_model() successfully completed......................................
2025-03-20 09:02:04,429:INFO:SubProcess create_model() end ==================================
2025-03-20 09:02:04,429:INFO:Creating metrics dataframe
2025-03-20 09:02:04,434:INFO:Initializing K Neighbors Regressor
2025-03-20 09:02:04,434:INFO:Total runtime is 0.7839437643686931 minutes
2025-03-20 09:02:04,436:INFO:SubProcess create_model() called ==================================
2025-03-20 09:02:04,436:INFO:Initializing create_model()
2025-03-20 09:02:04,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:02:04,436:INFO:Checking exceptions
2025-03-20 09:02:04,437:INFO:Importing libraries
2025-03-20 09:02:04,437:INFO:Copying training dataset
2025-03-20 09:02:04,443:INFO:Defining folds
2025-03-20 09:02:04,444:INFO:Declaring metric variables
2025-03-20 09:02:04,445:INFO:Importing untrained model
2025-03-20 09:02:04,447:INFO:K Neighbors Regressor Imported successfully
2025-03-20 09:02:04,450:INFO:Starting cross validation
2025-03-20 09:02:04,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:02:08,742:INFO:Calculating mean and std
2025-03-20 09:02:08,743:INFO:Creating metrics dataframe
2025-03-20 09:02:08,744:INFO:Uploading results into container
2025-03-20 09:02:08,744:INFO:Uploading model into container now
2025-03-20 09:02:08,745:INFO:_master_model_container: 11
2025-03-20 09:02:08,745:INFO:_display_container: 2
2025-03-20 09:02:08,745:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-20 09:02:08,745:INFO:create_model() successfully completed......................................
2025-03-20 09:02:08,830:INFO:SubProcess create_model() end ==================================
2025-03-20 09:02:08,830:INFO:Creating metrics dataframe
2025-03-20 09:02:08,836:INFO:Initializing Decision Tree Regressor
2025-03-20 09:02:08,836:INFO:Total runtime is 0.8573019981384278 minutes
2025-03-20 09:02:08,837:INFO:SubProcess create_model() called ==================================
2025-03-20 09:02:08,838:INFO:Initializing create_model()
2025-03-20 09:02:08,838:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:02:08,838:INFO:Checking exceptions
2025-03-20 09:02:08,838:INFO:Importing libraries
2025-03-20 09:02:08,838:INFO:Copying training dataset
2025-03-20 09:02:08,845:INFO:Defining folds
2025-03-20 09:02:08,845:INFO:Declaring metric variables
2025-03-20 09:02:08,846:INFO:Importing untrained model
2025-03-20 09:02:08,848:INFO:Decision Tree Regressor Imported successfully
2025-03-20 09:02:08,851:INFO:Starting cross validation
2025-03-20 09:02:08,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:02:12,963:INFO:Calculating mean and std
2025-03-20 09:02:12,964:INFO:Creating metrics dataframe
2025-03-20 09:02:12,965:INFO:Uploading results into container
2025-03-20 09:02:12,966:INFO:Uploading model into container now
2025-03-20 09:02:12,966:INFO:_master_model_container: 12
2025-03-20 09:02:12,966:INFO:_display_container: 2
2025-03-20 09:02:12,966:INFO:DecisionTreeRegressor(random_state=42)
2025-03-20 09:02:12,966:INFO:create_model() successfully completed......................................
2025-03-20 09:02:13,051:INFO:SubProcess create_model() end ==================================
2025-03-20 09:02:13,051:INFO:Creating metrics dataframe
2025-03-20 09:02:13,056:INFO:Initializing Random Forest Regressor
2025-03-20 09:02:13,056:INFO:Total runtime is 0.9276406327883403 minutes
2025-03-20 09:02:13,058:INFO:SubProcess create_model() called ==================================
2025-03-20 09:02:13,058:INFO:Initializing create_model()
2025-03-20 09:02:13,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:02:13,058:INFO:Checking exceptions
2025-03-20 09:02:13,058:INFO:Importing libraries
2025-03-20 09:02:13,058:INFO:Copying training dataset
2025-03-20 09:02:13,065:INFO:Defining folds
2025-03-20 09:02:13,065:INFO:Declaring metric variables
2025-03-20 09:02:13,067:INFO:Importing untrained model
2025-03-20 09:02:13,068:INFO:Random Forest Regressor Imported successfully
2025-03-20 09:02:13,072:INFO:Starting cross validation
2025-03-20 09:02:13,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:02:18,362:INFO:Calculating mean and std
2025-03-20 09:02:18,363:INFO:Creating metrics dataframe
2025-03-20 09:02:18,364:INFO:Uploading results into container
2025-03-20 09:02:18,365:INFO:Uploading model into container now
2025-03-20 09:02:18,365:INFO:_master_model_container: 13
2025-03-20 09:02:18,365:INFO:_display_container: 2
2025-03-20 09:02:18,365:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-03-20 09:02:18,365:INFO:create_model() successfully completed......................................
2025-03-20 09:02:18,447:INFO:SubProcess create_model() end ==================================
2025-03-20 09:02:18,447:INFO:Creating metrics dataframe
2025-03-20 09:02:18,453:INFO:Initializing Extra Trees Regressor
2025-03-20 09:02:18,453:INFO:Total runtime is 1.017587415377299 minutes
2025-03-20 09:02:18,454:INFO:SubProcess create_model() called ==================================
2025-03-20 09:02:18,455:INFO:Initializing create_model()
2025-03-20 09:02:18,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:02:18,455:INFO:Checking exceptions
2025-03-20 09:02:18,455:INFO:Importing libraries
2025-03-20 09:02:18,455:INFO:Copying training dataset
2025-03-20 09:02:18,461:INFO:Defining folds
2025-03-20 09:02:18,462:INFO:Declaring metric variables
2025-03-20 09:02:18,463:INFO:Importing untrained model
2025-03-20 09:02:18,465:INFO:Extra Trees Regressor Imported successfully
2025-03-20 09:02:18,468:INFO:Starting cross validation
2025-03-20 09:02:18,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:19:39,690:INFO:Calculating mean and std
2025-03-20 09:19:39,690:INFO:Creating metrics dataframe
2025-03-20 09:19:39,692:INFO:Uploading results into container
2025-03-20 09:19:39,692:INFO:Uploading model into container now
2025-03-20 09:19:39,693:INFO:_master_model_container: 14
2025-03-20 09:19:39,693:INFO:_display_container: 2
2025-03-20 09:19:39,693:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-03-20 09:19:39,693:INFO:create_model() successfully completed......................................
2025-03-20 09:19:39,769:INFO:SubProcess create_model() end ==================================
2025-03-20 09:19:39,769:INFO:Creating metrics dataframe
2025-03-20 09:19:39,774:INFO:Initializing AdaBoost Regressor
2025-03-20 09:19:39,775:INFO:Total runtime is 18.372949000199636 minutes
2025-03-20 09:19:39,776:INFO:SubProcess create_model() called ==================================
2025-03-20 09:19:39,776:INFO:Initializing create_model()
2025-03-20 09:19:39,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:19:39,777:INFO:Checking exceptions
2025-03-20 09:19:39,777:INFO:Importing libraries
2025-03-20 09:19:39,777:INFO:Copying training dataset
2025-03-20 09:19:39,783:INFO:Defining folds
2025-03-20 09:19:39,783:INFO:Declaring metric variables
2025-03-20 09:19:39,784:INFO:Importing untrained model
2025-03-20 09:19:39,786:INFO:AdaBoost Regressor Imported successfully
2025-03-20 09:19:39,789:INFO:Starting cross validation
2025-03-20 09:19:39,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:19:44,148:INFO:Calculating mean and std
2025-03-20 09:19:44,149:INFO:Creating metrics dataframe
2025-03-20 09:19:44,150:INFO:Uploading results into container
2025-03-20 09:19:44,150:INFO:Uploading model into container now
2025-03-20 09:19:44,151:INFO:_master_model_container: 15
2025-03-20 09:19:44,151:INFO:_display_container: 2
2025-03-20 09:19:44,151:INFO:AdaBoostRegressor(random_state=42)
2025-03-20 09:19:44,151:INFO:create_model() successfully completed......................................
2025-03-20 09:19:44,237:INFO:SubProcess create_model() end ==================================
2025-03-20 09:19:44,238:INFO:Creating metrics dataframe
2025-03-20 09:19:44,243:INFO:Initializing Gradient Boosting Regressor
2025-03-20 09:19:44,243:INFO:Total runtime is 18.44742658138275 minutes
2025-03-20 09:19:44,245:INFO:SubProcess create_model() called ==================================
2025-03-20 09:19:44,245:INFO:Initializing create_model()
2025-03-20 09:19:44,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:19:44,245:INFO:Checking exceptions
2025-03-20 09:19:44,245:INFO:Importing libraries
2025-03-20 09:19:44,245:INFO:Copying training dataset
2025-03-20 09:19:44,252:INFO:Defining folds
2025-03-20 09:19:44,252:INFO:Declaring metric variables
2025-03-20 09:19:44,254:INFO:Importing untrained model
2025-03-20 09:19:44,255:INFO:Gradient Boosting Regressor Imported successfully
2025-03-20 09:19:44,259:INFO:Starting cross validation
2025-03-20 09:19:44,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:19:49,115:INFO:Calculating mean and std
2025-03-20 09:19:49,115:INFO:Creating metrics dataframe
2025-03-20 09:19:49,116:INFO:Uploading results into container
2025-03-20 09:19:49,117:INFO:Uploading model into container now
2025-03-20 09:19:49,117:INFO:_master_model_container: 16
2025-03-20 09:19:49,117:INFO:_display_container: 2
2025-03-20 09:19:49,117:INFO:GradientBoostingRegressor(random_state=42)
2025-03-20 09:19:49,117:INFO:create_model() successfully completed......................................
2025-03-20 09:19:49,196:INFO:SubProcess create_model() end ==================================
2025-03-20 09:19:49,196:INFO:Creating metrics dataframe
2025-03-20 09:19:49,202:INFO:Initializing Light Gradient Boosting Machine
2025-03-20 09:19:49,202:INFO:Total runtime is 18.53007527987162 minutes
2025-03-20 09:19:49,204:INFO:SubProcess create_model() called ==================================
2025-03-20 09:19:49,204:INFO:Initializing create_model()
2025-03-20 09:19:49,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:19:49,204:INFO:Checking exceptions
2025-03-20 09:19:49,204:INFO:Importing libraries
2025-03-20 09:19:49,204:INFO:Copying training dataset
2025-03-20 09:19:49,211:INFO:Defining folds
2025-03-20 09:19:49,211:INFO:Declaring metric variables
2025-03-20 09:19:49,212:INFO:Importing untrained model
2025-03-20 09:19:49,214:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-20 09:19:49,217:INFO:Starting cross validation
2025-03-20 09:19:49,221:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:19:56,956:INFO:Calculating mean and std
2025-03-20 09:19:56,957:INFO:Creating metrics dataframe
2025-03-20 09:19:56,958:INFO:Uploading results into container
2025-03-20 09:19:56,958:INFO:Uploading model into container now
2025-03-20 09:19:56,959:INFO:_master_model_container: 17
2025-03-20 09:19:56,959:INFO:_display_container: 2
2025-03-20 09:19:56,959:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-03-20 09:19:56,959:INFO:create_model() successfully completed......................................
2025-03-20 09:19:57,030:INFO:SubProcess create_model() end ==================================
2025-03-20 09:19:57,030:INFO:Creating metrics dataframe
2025-03-20 09:19:57,036:INFO:Initializing Dummy Regressor
2025-03-20 09:19:57,036:INFO:Total runtime is 18.66064036687215 minutes
2025-03-20 09:19:57,038:INFO:SubProcess create_model() called ==================================
2025-03-20 09:19:57,038:INFO:Initializing create_model()
2025-03-20 09:19:57,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x335f86410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:19:57,038:INFO:Checking exceptions
2025-03-20 09:19:57,038:INFO:Importing libraries
2025-03-20 09:19:57,038:INFO:Copying training dataset
2025-03-20 09:19:57,045:INFO:Defining folds
2025-03-20 09:19:57,045:INFO:Declaring metric variables
2025-03-20 09:19:57,046:INFO:Importing untrained model
2025-03-20 09:19:57,047:INFO:Dummy Regressor Imported successfully
2025-03-20 09:19:57,050:INFO:Starting cross validation
2025-03-20 09:19:57,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 09:20:01,046:INFO:Calculating mean and std
2025-03-20 09:20:01,047:INFO:Creating metrics dataframe
2025-03-20 09:20:01,048:INFO:Uploading results into container
2025-03-20 09:20:01,048:INFO:Uploading model into container now
2025-03-20 09:20:01,049:INFO:_master_model_container: 18
2025-03-20 09:20:01,049:INFO:_display_container: 2
2025-03-20 09:20:01,049:INFO:DummyRegressor()
2025-03-20 09:20:01,049:INFO:create_model() successfully completed......................................
2025-03-20 09:20:01,123:INFO:SubProcess create_model() end ==================================
2025-03-20 09:20:01,123:INFO:Creating metrics dataframe
2025-03-20 09:20:01,131:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-20 09:20:01,135:INFO:Initializing create_model()
2025-03-20 09:20:01,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x313b513c0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 09:20:01,135:INFO:Checking exceptions
2025-03-20 09:20:01,136:INFO:Importing libraries
2025-03-20 09:20:01,136:INFO:Copying training dataset
2025-03-20 09:20:01,142:INFO:Defining folds
2025-03-20 09:20:01,142:INFO:Declaring metric variables
2025-03-20 09:20:01,142:INFO:Importing untrained model
2025-03-20 09:20:01,142:INFO:Declaring custom model
2025-03-20 09:20:01,142:INFO:Linear Regression Imported successfully
2025-03-20 09:20:01,146:INFO:Cross validation set to False
2025-03-20 09:20:01,146:INFO:Fitting Model
2025-03-20 09:20:01,356:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000474 seconds.
2025-03-20 09:20:01,356:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 09:20:01,356:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 09:20:01,356:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 09:20:01,356:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 09:20:01,829:INFO:LinearRegression(n_jobs=-1)
2025-03-20 09:20:01,829:INFO:create_model() successfully completed......................................
2025-03-20 09:20:01,951:INFO:_master_model_container: 18
2025-03-20 09:20:01,951:INFO:_display_container: 2
2025-03-20 09:20:01,951:INFO:LinearRegression(n_jobs=-1)
2025-03-20 09:20:01,951:INFO:compare_models() successfully completed......................................
2025-03-20 10:34:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 10:34:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 10:34:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 10:34:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 10:34:43,246:INFO:PyCaret RegressionExperiment
2025-03-20 10:34:43,246:INFO:Logging name: reg-default-name
2025-03-20 10:34:43,246:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 10:34:43,246:INFO:version 3.3.2
2025-03-20 10:34:43,246:INFO:Initializing setup()
2025-03-20 10:34:43,246:INFO:self.USI: 69b4
2025-03-20 10:34:43,246:INFO:self._variable_keys: {'_available_plots', '_ml_usecase', 'gpu_param', 'idx', 'exp_id', 'fold_generator', 'html_param', 'fold_shuffle_param', 'pipeline', 'y', 'X_train', 'y_test', 'memory', 'X_test', 'seed', 'logging_param', 'data', 'fold_groups_param', 'log_plots_param', 'y_train', 'gpu_n_jobs_param', 'X', 'target_param', 'USI', 'n_jobs_param', 'exp_name_log', 'transform_target_param'}
2025-03-20 10:34:43,246:INFO:Checking environment
2025-03-20 10:34:43,246:INFO:python_version: 3.10.16
2025-03-20 10:34:43,246:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 10:34:43,246:INFO:machine: arm64
2025-03-20 10:34:43,247:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 10:34:43,247:INFO:Memory: svmem(total=38654705664, available=14455898112, percent=62.6, used=15652978688, free=2668150784, active=11857559552, inactive=11354177536, wired=3795419136)
2025-03-20 10:34:43,247:INFO:Physical Core: 11
2025-03-20 10:34:43,247:INFO:Logical Core: 11
2025-03-20 10:34:43,247:INFO:Checking libraries
2025-03-20 10:34:43,247:INFO:System:
2025-03-20 10:34:43,247:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 10:34:43,247:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 10:34:43,247:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 10:34:43,247:INFO:PyCaret required dependencies:
2025-03-20 10:34:43,294:INFO:                 pip: 25.0
2025-03-20 10:34:43,294:INFO:          setuptools: 75.8.0
2025-03-20 10:34:43,294:INFO:             pycaret: 3.3.2
2025-03-20 10:34:43,294:INFO:             IPython: 8.34.0
2025-03-20 10:34:43,294:INFO:          ipywidgets: 8.1.5
2025-03-20 10:34:43,294:INFO:                tqdm: 4.67.1
2025-03-20 10:34:43,294:INFO:               numpy: 1.26.4
2025-03-20 10:34:43,294:INFO:              pandas: 2.1.4
2025-03-20 10:34:43,294:INFO:              jinja2: 3.1.6
2025-03-20 10:34:43,294:INFO:               scipy: 1.11.4
2025-03-20 10:34:43,294:INFO:              joblib: 1.3.2
2025-03-20 10:34:43,294:INFO:             sklearn: 1.4.2
2025-03-20 10:34:43,294:INFO:                pyod: 2.0.3
2025-03-20 10:34:43,294:INFO:            imblearn: 0.13.0
2025-03-20 10:34:43,294:INFO:   category_encoders: 2.7.0
2025-03-20 10:34:43,294:INFO:            lightgbm: 4.6.0
2025-03-20 10:34:43,294:INFO:               numba: 0.61.0
2025-03-20 10:34:43,294:INFO:            requests: 2.32.3
2025-03-20 10:34:43,294:INFO:          matplotlib: 3.7.5
2025-03-20 10:34:43,294:INFO:          scikitplot: 0.3.7
2025-03-20 10:34:43,294:INFO:         yellowbrick: 1.5
2025-03-20 10:34:43,294:INFO:              plotly: 5.24.1
2025-03-20 10:34:43,294:INFO:    plotly-resampler: Not installed
2025-03-20 10:34:43,294:INFO:             kaleido: 0.2.1
2025-03-20 10:34:43,294:INFO:           schemdraw: 0.15
2025-03-20 10:34:43,294:INFO:         statsmodels: 0.14.4
2025-03-20 10:34:43,294:INFO:              sktime: 0.26.0
2025-03-20 10:34:43,294:INFO:               tbats: 1.1.3
2025-03-20 10:34:43,294:INFO:            pmdarima: 2.0.4
2025-03-20 10:34:43,294:INFO:              psutil: 7.0.0
2025-03-20 10:34:43,294:INFO:          markupsafe: 3.0.2
2025-03-20 10:34:43,294:INFO:             pickle5: Not installed
2025-03-20 10:34:43,294:INFO:         cloudpickle: 3.1.1
2025-03-20 10:34:43,294:INFO:         deprecation: 2.1.0
2025-03-20 10:34:43,294:INFO:              xxhash: 3.5.0
2025-03-20 10:34:43,294:INFO:           wurlitzer: 3.1.1
2025-03-20 10:34:43,294:INFO:PyCaret optional dependencies:
2025-03-20 10:34:43,301:INFO:                shap: Not installed
2025-03-20 10:34:43,301:INFO:           interpret: Not installed
2025-03-20 10:34:43,301:INFO:                umap: Not installed
2025-03-20 10:34:43,301:INFO:     ydata_profiling: Not installed
2025-03-20 10:34:43,301:INFO:  explainerdashboard: Not installed
2025-03-20 10:34:43,301:INFO:             autoviz: Not installed
2025-03-20 10:34:43,301:INFO:           fairlearn: Not installed
2025-03-20 10:34:43,301:INFO:          deepchecks: Not installed
2025-03-20 10:34:43,301:INFO:             xgboost: Not installed
2025-03-20 10:34:43,301:INFO:            catboost: Not installed
2025-03-20 10:34:43,301:INFO:              kmodes: Not installed
2025-03-20 10:34:43,301:INFO:             mlxtend: Not installed
2025-03-20 10:34:43,301:INFO:       statsforecast: Not installed
2025-03-20 10:34:43,301:INFO:        tune_sklearn: Not installed
2025-03-20 10:34:43,301:INFO:                 ray: Not installed
2025-03-20 10:34:43,301:INFO:            hyperopt: Not installed
2025-03-20 10:34:43,301:INFO:              optuna: Not installed
2025-03-20 10:34:43,301:INFO:               skopt: Not installed
2025-03-20 10:34:43,301:INFO:              mlflow: Not installed
2025-03-20 10:34:43,301:INFO:              gradio: Not installed
2025-03-20 10:34:43,301:INFO:             fastapi: Not installed
2025-03-20 10:34:43,301:INFO:             uvicorn: Not installed
2025-03-20 10:34:43,301:INFO:              m2cgen: Not installed
2025-03-20 10:34:43,302:INFO:           evidently: Not installed
2025-03-20 10:34:43,302:INFO:               fugue: Not installed
2025-03-20 10:34:43,302:INFO:           streamlit: 1.43.2
2025-03-20 10:34:43,302:INFO:             prophet: Not installed
2025-03-20 10:34:43,302:INFO:None
2025-03-20 10:34:43,302:INFO:Set up data.
2025-03-20 10:34:43,306:INFO:Set up folding strategy.
2025-03-20 10:34:43,306:INFO:Set up train/test split.
2025-03-20 10:34:43,310:INFO:Set up index.
2025-03-20 10:34:43,310:INFO:Assigning column types.
2025-03-20 10:34:43,313:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 10:34:43,313:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,316:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,318:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,351:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,374:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,376:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,378:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,410:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,432:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 10:34:43,434:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,437:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,490:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,493:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,496:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,527:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,549:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 10:34:43,554:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,586:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,612:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,644:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,667:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 10:34:43,703:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 10:34:43,822:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,881:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:34:43,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,903:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 10:34:43,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:43,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,019:INFO:Preparing preprocessing pipeline...
2025-03-20 10:34:44,019:INFO:Set up simple imputation.
2025-03-20 10:34:44,019:INFO:Set up removing outliers.
2025-03-20 10:34:44,019:INFO:Set up feature normalization.
2025-03-20 10:34:44,019:INFO:Set up feature selection.
2025-03-20 10:34:44,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,079:INFO:Set up column name cleaning.
2025-03-20 10:34:44,117:INFO:Finished creating preprocessing pipeline.
2025-03-20 10:34:44,125:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 10:34:44,125:INFO:Creating final display dataframe.
2025-03-20 10:34:44,217:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              69b4
2025-03-20 10:34:44,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:44,340:INFO:setup() successfully completed in 1.1s...............
2025-03-20 10:34:45,321:INFO:gpu_param set to False
2025-03-20 10:34:45,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:45,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:45,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:45,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:34:46,924:INFO:Initializing compare_models()
2025-03-20 10:34:46,925:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-20 10:34:46,925:INFO:Checking exceptions
2025-03-20 10:34:46,931:INFO:Preparing display monitor
2025-03-20 10:34:46,960:INFO:Initializing Linear Regression
2025-03-20 10:34:46,961:INFO:Total runtime is 5.1657358805338544e-06 minutes
2025-03-20 10:34:46,963:INFO:SubProcess create_model() called ==================================
2025-03-20 10:34:46,964:INFO:Initializing create_model()
2025-03-20 10:34:46,964:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:34:46,964:INFO:Checking exceptions
2025-03-20 10:34:46,964:INFO:Importing libraries
2025-03-20 10:34:46,964:INFO:Copying training dataset
2025-03-20 10:34:46,980:INFO:Defining folds
2025-03-20 10:34:46,980:INFO:Declaring metric variables
2025-03-20 10:34:46,982:INFO:Importing untrained model
2025-03-20 10:34:46,984:INFO:Linear Regression Imported successfully
2025-03-20 10:34:46,988:INFO:Starting cross validation
2025-03-20 10:34:46,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:34:49,639:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002124 seconds.
2025-03-20 10:34:49,639:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,639:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:34:49,639:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 10:34:49,640:INFO:[LightGBM] [Info] Start training from score 7341.090685
2025-03-20 10:34:49,822:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000731 seconds.
2025-03-20 10:34:49,823:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,823:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:34:49,823:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:49,823:INFO:[LightGBM] [Info] Start training from score 7341.151421
2025-03-20 10:34:49,870:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003277 seconds.
2025-03-20 10:34:49,872:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,872:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:34:49,872:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:49,872:INFO:[LightGBM] [Info] Start training from score 7351.855824
2025-03-20 10:34:49,892:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001227 seconds.
2025-03-20 10:34:49,892:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,892:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:34:49,893:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001009 seconds.
2025-03-20 10:34:49,893:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,893:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 10:34:49,893:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:34:49,894:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:49,897:INFO:[LightGBM] [Info] Start training from score 7348.947934
2025-03-20 10:34:49,899:INFO:[LightGBM] [Info] Start training from score 7343.422373
2025-03-20 10:34:49,924:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000559 seconds.
2025-03-20 10:34:49,924:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 10:34:49,924:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 10:34:49,924:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:34:49,924:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:49,926:INFO:[LightGBM] [Info] Start training from score 7335.329512
2025-03-20 10:34:49,976:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000688 seconds.
2025-03-20 10:34:49,976:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,976:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:34:49,976:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:49,976:INFO:[LightGBM] [Info] Start training from score 7337.208662
2025-03-20 10:34:49,980:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002562 seconds.
2025-03-20 10:34:49,980:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:49,981:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:34:49,982:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:49,983:INFO:[LightGBM] [Info] Start training from score 7347.301409
2025-03-20 10:34:50,041:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000575 seconds.
2025-03-20 10:34:50,041:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:50,041:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:34:50,041:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:50,041:INFO:[LightGBM] [Info] Start training from score 7334.950880
2025-03-20 10:34:50,082:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000730 seconds.
2025-03-20 10:34:50,082:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:34:50,082:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:34:50,082:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:34:50,083:INFO:[LightGBM] [Info] Start training from score 7346.140116
2025-03-20 10:34:53,631:INFO:Calculating mean and std
2025-03-20 10:34:53,632:INFO:Creating metrics dataframe
2025-03-20 10:34:53,635:INFO:Uploading results into container
2025-03-20 10:34:53,636:INFO:Uploading model into container now
2025-03-20 10:34:53,636:INFO:_master_model_container: 1
2025-03-20 10:34:53,636:INFO:_display_container: 2
2025-03-20 10:34:53,637:INFO:LinearRegression(n_jobs=-1)
2025-03-20 10:34:53,637:INFO:create_model() successfully completed......................................
2025-03-20 10:34:53,712:INFO:SubProcess create_model() end ==================================
2025-03-20 10:34:53,713:INFO:Creating metrics dataframe
2025-03-20 10:34:53,717:INFO:Initializing Lasso Regression
2025-03-20 10:34:53,717:INFO:Total runtime is 0.1126094659169515 minutes
2025-03-20 10:34:53,719:INFO:SubProcess create_model() called ==================================
2025-03-20 10:34:53,719:INFO:Initializing create_model()
2025-03-20 10:34:53,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:34:53,719:INFO:Checking exceptions
2025-03-20 10:34:53,719:INFO:Importing libraries
2025-03-20 10:34:53,720:INFO:Copying training dataset
2025-03-20 10:34:53,727:INFO:Defining folds
2025-03-20 10:34:53,727:INFO:Declaring metric variables
2025-03-20 10:34:53,728:INFO:Importing untrained model
2025-03-20 10:34:53,730:INFO:Lasso Regression Imported successfully
2025-03-20 10:34:53,733:INFO:Starting cross validation
2025-03-20 10:34:53,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:34:58,307:INFO:Calculating mean and std
2025-03-20 10:34:58,307:INFO:Creating metrics dataframe
2025-03-20 10:34:58,309:INFO:Uploading results into container
2025-03-20 10:34:58,309:INFO:Uploading model into container now
2025-03-20 10:34:58,310:INFO:_master_model_container: 2
2025-03-20 10:34:58,310:INFO:_display_container: 2
2025-03-20 10:34:58,310:INFO:Lasso(random_state=42)
2025-03-20 10:34:58,310:INFO:create_model() successfully completed......................................
2025-03-20 10:34:58,369:INFO:SubProcess create_model() end ==================================
2025-03-20 10:34:58,369:INFO:Creating metrics dataframe
2025-03-20 10:34:58,372:INFO:Initializing Ridge Regression
2025-03-20 10:34:58,373:INFO:Total runtime is 0.19020429849624634 minutes
2025-03-20 10:34:58,375:INFO:SubProcess create_model() called ==================================
2025-03-20 10:34:58,375:INFO:Initializing create_model()
2025-03-20 10:34:58,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:34:58,375:INFO:Checking exceptions
2025-03-20 10:34:58,375:INFO:Importing libraries
2025-03-20 10:34:58,375:INFO:Copying training dataset
2025-03-20 10:34:58,382:INFO:Defining folds
2025-03-20 10:34:58,382:INFO:Declaring metric variables
2025-03-20 10:34:58,383:INFO:Importing untrained model
2025-03-20 10:34:58,384:INFO:Ridge Regression Imported successfully
2025-03-20 10:34:58,388:INFO:Starting cross validation
2025-03-20 10:34:58,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:02,373:INFO:Calculating mean and std
2025-03-20 10:35:02,374:INFO:Creating metrics dataframe
2025-03-20 10:35:02,375:INFO:Uploading results into container
2025-03-20 10:35:02,376:INFO:Uploading model into container now
2025-03-20 10:35:02,376:INFO:_master_model_container: 3
2025-03-20 10:35:02,376:INFO:_display_container: 2
2025-03-20 10:35:02,377:INFO:Ridge(random_state=42)
2025-03-20 10:35:02,377:INFO:create_model() successfully completed......................................
2025-03-20 10:35:02,429:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:02,429:INFO:Creating metrics dataframe
2025-03-20 10:35:02,433:INFO:Initializing Elastic Net
2025-03-20 10:35:02,433:INFO:Total runtime is 0.2578830679257711 minutes
2025-03-20 10:35:02,435:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:02,435:INFO:Initializing create_model()
2025-03-20 10:35:02,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:02,435:INFO:Checking exceptions
2025-03-20 10:35:02,436:INFO:Importing libraries
2025-03-20 10:35:02,436:INFO:Copying training dataset
2025-03-20 10:35:02,442:INFO:Defining folds
2025-03-20 10:35:02,442:INFO:Declaring metric variables
2025-03-20 10:35:02,443:INFO:Importing untrained model
2025-03-20 10:35:02,445:INFO:Elastic Net Imported successfully
2025-03-20 10:35:02,448:INFO:Starting cross validation
2025-03-20 10:35:02,453:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:06,371:INFO:Calculating mean and std
2025-03-20 10:35:06,372:INFO:Creating metrics dataframe
2025-03-20 10:35:06,373:INFO:Uploading results into container
2025-03-20 10:35:06,373:INFO:Uploading model into container now
2025-03-20 10:35:06,374:INFO:_master_model_container: 4
2025-03-20 10:35:06,374:INFO:_display_container: 2
2025-03-20 10:35:06,374:INFO:ElasticNet(random_state=42)
2025-03-20 10:35:06,374:INFO:create_model() successfully completed......................................
2025-03-20 10:35:06,430:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:06,430:INFO:Creating metrics dataframe
2025-03-20 10:35:06,434:INFO:Initializing Least Angle Regression
2025-03-20 10:35:06,434:INFO:Total runtime is 0.32455923557281496 minutes
2025-03-20 10:35:06,436:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:06,436:INFO:Initializing create_model()
2025-03-20 10:35:06,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:06,436:INFO:Checking exceptions
2025-03-20 10:35:06,436:INFO:Importing libraries
2025-03-20 10:35:06,436:INFO:Copying training dataset
2025-03-20 10:35:06,443:INFO:Defining folds
2025-03-20 10:35:06,443:INFO:Declaring metric variables
2025-03-20 10:35:06,445:INFO:Importing untrained model
2025-03-20 10:35:06,446:INFO:Least Angle Regression Imported successfully
2025-03-20 10:35:06,450:INFO:Starting cross validation
2025-03-20 10:35:06,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:10,430:INFO:Calculating mean and std
2025-03-20 10:35:10,431:INFO:Creating metrics dataframe
2025-03-20 10:35:10,432:INFO:Uploading results into container
2025-03-20 10:35:10,433:INFO:Uploading model into container now
2025-03-20 10:35:10,433:INFO:_master_model_container: 5
2025-03-20 10:35:10,433:INFO:_display_container: 2
2025-03-20 10:35:10,433:INFO:Lars(random_state=42)
2025-03-20 10:35:10,433:INFO:create_model() successfully completed......................................
2025-03-20 10:35:10,486:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:10,486:INFO:Creating metrics dataframe
2025-03-20 10:35:10,490:INFO:Initializing Lasso Least Angle Regression
2025-03-20 10:35:10,490:INFO:Total runtime is 0.3921605348587036 minutes
2025-03-20 10:35:10,492:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:10,492:INFO:Initializing create_model()
2025-03-20 10:35:10,492:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:10,492:INFO:Checking exceptions
2025-03-20 10:35:10,492:INFO:Importing libraries
2025-03-20 10:35:10,492:INFO:Copying training dataset
2025-03-20 10:35:10,499:INFO:Defining folds
2025-03-20 10:35:10,499:INFO:Declaring metric variables
2025-03-20 10:35:10,500:INFO:Importing untrained model
2025-03-20 10:35:10,502:INFO:Lasso Least Angle Regression Imported successfully
2025-03-20 10:35:10,505:INFO:Starting cross validation
2025-03-20 10:35:10,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:14,535:INFO:Calculating mean and std
2025-03-20 10:35:14,536:INFO:Creating metrics dataframe
2025-03-20 10:35:14,537:INFO:Uploading results into container
2025-03-20 10:35:14,537:INFO:Uploading model into container now
2025-03-20 10:35:14,537:INFO:_master_model_container: 6
2025-03-20 10:35:14,537:INFO:_display_container: 2
2025-03-20 10:35:14,538:INFO:LassoLars(random_state=42)
2025-03-20 10:35:14,538:INFO:create_model() successfully completed......................................
2025-03-20 10:35:14,591:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:14,591:INFO:Creating metrics dataframe
2025-03-20 10:35:14,595:INFO:Initializing Orthogonal Matching Pursuit
2025-03-20 10:35:14,595:INFO:Total runtime is 0.46057757139205935 minutes
2025-03-20 10:35:14,597:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:14,597:INFO:Initializing create_model()
2025-03-20 10:35:14,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:14,597:INFO:Checking exceptions
2025-03-20 10:35:14,597:INFO:Importing libraries
2025-03-20 10:35:14,598:INFO:Copying training dataset
2025-03-20 10:35:14,604:INFO:Defining folds
2025-03-20 10:35:14,604:INFO:Declaring metric variables
2025-03-20 10:35:14,605:INFO:Importing untrained model
2025-03-20 10:35:14,607:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 10:35:14,610:INFO:Starting cross validation
2025-03-20 10:35:14,614:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:18,728:INFO:Calculating mean and std
2025-03-20 10:35:18,729:INFO:Creating metrics dataframe
2025-03-20 10:35:18,730:INFO:Uploading results into container
2025-03-20 10:35:18,730:INFO:Uploading model into container now
2025-03-20 10:35:18,731:INFO:_master_model_container: 7
2025-03-20 10:35:18,731:INFO:_display_container: 2
2025-03-20 10:35:18,731:INFO:OrthogonalMatchingPursuit()
2025-03-20 10:35:18,731:INFO:create_model() successfully completed......................................
2025-03-20 10:35:18,784:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:18,784:INFO:Creating metrics dataframe
2025-03-20 10:35:18,788:INFO:Initializing Bayesian Ridge
2025-03-20 10:35:18,788:INFO:Total runtime is 0.5304681698481242 minutes
2025-03-20 10:35:18,791:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:18,791:INFO:Initializing create_model()
2025-03-20 10:35:18,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:18,791:INFO:Checking exceptions
2025-03-20 10:35:18,791:INFO:Importing libraries
2025-03-20 10:35:18,791:INFO:Copying training dataset
2025-03-20 10:35:18,797:INFO:Defining folds
2025-03-20 10:35:18,798:INFO:Declaring metric variables
2025-03-20 10:35:18,799:INFO:Importing untrained model
2025-03-20 10:35:18,801:INFO:Bayesian Ridge Imported successfully
2025-03-20 10:35:18,804:INFO:Starting cross validation
2025-03-20 10:35:18,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:22,818:INFO:Calculating mean and std
2025-03-20 10:35:22,819:INFO:Creating metrics dataframe
2025-03-20 10:35:22,820:INFO:Uploading results into container
2025-03-20 10:35:22,821:INFO:Uploading model into container now
2025-03-20 10:35:22,821:INFO:_master_model_container: 8
2025-03-20 10:35:22,821:INFO:_display_container: 2
2025-03-20 10:35:22,821:INFO:BayesianRidge()
2025-03-20 10:35:22,821:INFO:create_model() successfully completed......................................
2025-03-20 10:35:22,878:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:22,878:INFO:Creating metrics dataframe
2025-03-20 10:35:22,882:INFO:Initializing Passive Aggressive Regressor
2025-03-20 10:35:22,882:INFO:Total runtime is 0.5986984531084696 minutes
2025-03-20 10:35:22,884:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:22,884:INFO:Initializing create_model()
2025-03-20 10:35:22,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:22,884:INFO:Checking exceptions
2025-03-20 10:35:22,884:INFO:Importing libraries
2025-03-20 10:35:22,885:INFO:Copying training dataset
2025-03-20 10:35:22,891:INFO:Defining folds
2025-03-20 10:35:22,891:INFO:Declaring metric variables
2025-03-20 10:35:22,893:INFO:Importing untrained model
2025-03-20 10:35:22,894:INFO:Passive Aggressive Regressor Imported successfully
2025-03-20 10:35:22,898:INFO:Starting cross validation
2025-03-20 10:35:22,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:27,094:INFO:Calculating mean and std
2025-03-20 10:35:27,095:INFO:Creating metrics dataframe
2025-03-20 10:35:27,096:INFO:Uploading results into container
2025-03-20 10:35:27,096:INFO:Uploading model into container now
2025-03-20 10:35:27,097:INFO:_master_model_container: 9
2025-03-20 10:35:27,097:INFO:_display_container: 2
2025-03-20 10:35:27,097:INFO:PassiveAggressiveRegressor(random_state=42)
2025-03-20 10:35:27,097:INFO:create_model() successfully completed......................................
2025-03-20 10:35:27,155:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:27,155:INFO:Creating metrics dataframe
2025-03-20 10:35:27,160:INFO:Initializing Huber Regressor
2025-03-20 10:35:27,160:INFO:Total runtime is 0.6699918349583943 minutes
2025-03-20 10:35:27,162:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:27,162:INFO:Initializing create_model()
2025-03-20 10:35:27,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:27,162:INFO:Checking exceptions
2025-03-20 10:35:27,162:INFO:Importing libraries
2025-03-20 10:35:27,162:INFO:Copying training dataset
2025-03-20 10:35:27,170:INFO:Defining folds
2025-03-20 10:35:27,170:INFO:Declaring metric variables
2025-03-20 10:35:27,171:INFO:Importing untrained model
2025-03-20 10:35:27,173:INFO:Huber Regressor Imported successfully
2025-03-20 10:35:27,177:INFO:Starting cross validation
2025-03-20 10:35:27,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:31,147:INFO:Calculating mean and std
2025-03-20 10:35:31,147:INFO:Creating metrics dataframe
2025-03-20 10:35:31,148:INFO:Uploading results into container
2025-03-20 10:35:31,149:INFO:Uploading model into container now
2025-03-20 10:35:31,149:INFO:_master_model_container: 10
2025-03-20 10:35:31,149:INFO:_display_container: 2
2025-03-20 10:35:31,150:INFO:HuberRegressor()
2025-03-20 10:35:31,150:INFO:create_model() successfully completed......................................
2025-03-20 10:35:31,207:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:31,207:INFO:Creating metrics dataframe
2025-03-20 10:35:31,212:INFO:Initializing K Neighbors Regressor
2025-03-20 10:35:31,212:INFO:Total runtime is 0.7375292340914408 minutes
2025-03-20 10:35:31,214:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:31,214:INFO:Initializing create_model()
2025-03-20 10:35:31,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:31,214:INFO:Checking exceptions
2025-03-20 10:35:31,214:INFO:Importing libraries
2025-03-20 10:35:31,215:INFO:Copying training dataset
2025-03-20 10:35:31,221:INFO:Defining folds
2025-03-20 10:35:31,344:INFO:Declaring metric variables
2025-03-20 10:35:31,347:INFO:Importing untrained model
2025-03-20 10:35:31,348:INFO:K Neighbors Regressor Imported successfully
2025-03-20 10:35:31,353:INFO:Starting cross validation
2025-03-20 10:35:31,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:35,655:INFO:Calculating mean and std
2025-03-20 10:35:35,656:INFO:Creating metrics dataframe
2025-03-20 10:35:35,657:INFO:Uploading results into container
2025-03-20 10:35:35,658:INFO:Uploading model into container now
2025-03-20 10:35:35,658:INFO:_master_model_container: 11
2025-03-20 10:35:35,658:INFO:_display_container: 2
2025-03-20 10:35:35,658:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-20 10:35:35,658:INFO:create_model() successfully completed......................................
2025-03-20 10:35:35,714:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:35,714:INFO:Creating metrics dataframe
2025-03-20 10:35:35,719:INFO:Initializing Decision Tree Regressor
2025-03-20 10:35:35,719:INFO:Total runtime is 0.8126441677411397 minutes
2025-03-20 10:35:35,721:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:35,721:INFO:Initializing create_model()
2025-03-20 10:35:35,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:35,721:INFO:Checking exceptions
2025-03-20 10:35:35,721:INFO:Importing libraries
2025-03-20 10:35:35,721:INFO:Copying training dataset
2025-03-20 10:35:35,728:INFO:Defining folds
2025-03-20 10:35:35,728:INFO:Declaring metric variables
2025-03-20 10:35:35,729:INFO:Importing untrained model
2025-03-20 10:35:35,731:INFO:Decision Tree Regressor Imported successfully
2025-03-20 10:35:35,734:INFO:Starting cross validation
2025-03-20 10:35:35,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:39,897:INFO:Calculating mean and std
2025-03-20 10:35:39,897:INFO:Creating metrics dataframe
2025-03-20 10:35:39,898:INFO:Uploading results into container
2025-03-20 10:35:39,899:INFO:Uploading model into container now
2025-03-20 10:35:39,899:INFO:_master_model_container: 12
2025-03-20 10:35:39,899:INFO:_display_container: 2
2025-03-20 10:35:39,900:INFO:DecisionTreeRegressor(random_state=42)
2025-03-20 10:35:39,900:INFO:create_model() successfully completed......................................
2025-03-20 10:35:39,957:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:39,957:INFO:Creating metrics dataframe
2025-03-20 10:35:39,962:INFO:Initializing Random Forest Regressor
2025-03-20 10:35:39,962:INFO:Total runtime is 0.8833616177241007 minutes
2025-03-20 10:35:39,964:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:39,964:INFO:Initializing create_model()
2025-03-20 10:35:39,964:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:39,964:INFO:Checking exceptions
2025-03-20 10:35:39,964:INFO:Importing libraries
2025-03-20 10:35:39,964:INFO:Copying training dataset
2025-03-20 10:35:39,971:INFO:Defining folds
2025-03-20 10:35:39,971:INFO:Declaring metric variables
2025-03-20 10:35:39,973:INFO:Importing untrained model
2025-03-20 10:35:39,975:INFO:Random Forest Regressor Imported successfully
2025-03-20 10:35:39,978:INFO:Starting cross validation
2025-03-20 10:35:39,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:45,481:INFO:Calculating mean and std
2025-03-20 10:35:45,482:INFO:Creating metrics dataframe
2025-03-20 10:35:45,483:INFO:Uploading results into container
2025-03-20 10:35:45,484:INFO:Uploading model into container now
2025-03-20 10:35:45,484:INFO:_master_model_container: 13
2025-03-20 10:35:45,484:INFO:_display_container: 2
2025-03-20 10:35:45,484:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-03-20 10:35:45,484:INFO:create_model() successfully completed......................................
2025-03-20 10:35:45,537:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:45,537:INFO:Creating metrics dataframe
2025-03-20 10:35:45,542:INFO:Initializing Extra Trees Regressor
2025-03-20 10:35:45,542:INFO:Total runtime is 0.9763630509376525 minutes
2025-03-20 10:35:45,544:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:45,544:INFO:Initializing create_model()
2025-03-20 10:35:45,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:45,544:INFO:Checking exceptions
2025-03-20 10:35:45,544:INFO:Importing libraries
2025-03-20 10:35:45,545:INFO:Copying training dataset
2025-03-20 10:35:45,551:INFO:Defining folds
2025-03-20 10:35:45,551:INFO:Declaring metric variables
2025-03-20 10:35:45,553:INFO:Importing untrained model
2025-03-20 10:35:45,554:INFO:Extra Trees Regressor Imported successfully
2025-03-20 10:35:45,558:INFO:Starting cross validation
2025-03-20 10:35:45,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:50,316:INFO:Calculating mean and std
2025-03-20 10:35:50,317:INFO:Creating metrics dataframe
2025-03-20 10:35:50,318:INFO:Uploading results into container
2025-03-20 10:35:50,318:INFO:Uploading model into container now
2025-03-20 10:35:50,319:INFO:_master_model_container: 14
2025-03-20 10:35:50,319:INFO:_display_container: 2
2025-03-20 10:35:50,319:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-03-20 10:35:50,319:INFO:create_model() successfully completed......................................
2025-03-20 10:35:50,374:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:50,374:INFO:Creating metrics dataframe
2025-03-20 10:35:50,379:INFO:Initializing AdaBoost Regressor
2025-03-20 10:35:50,379:INFO:Total runtime is 1.0569742004076639 minutes
2025-03-20 10:35:50,380:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:50,381:INFO:Initializing create_model()
2025-03-20 10:35:50,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:50,381:INFO:Checking exceptions
2025-03-20 10:35:50,381:INFO:Importing libraries
2025-03-20 10:35:50,381:INFO:Copying training dataset
2025-03-20 10:35:50,387:INFO:Defining folds
2025-03-20 10:35:50,387:INFO:Declaring metric variables
2025-03-20 10:35:50,389:INFO:Importing untrained model
2025-03-20 10:35:50,390:INFO:AdaBoost Regressor Imported successfully
2025-03-20 10:35:50,394:INFO:Starting cross validation
2025-03-20 10:35:50,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:35:55,169:INFO:Calculating mean and std
2025-03-20 10:35:55,170:INFO:Creating metrics dataframe
2025-03-20 10:35:55,171:INFO:Uploading results into container
2025-03-20 10:35:55,172:INFO:Uploading model into container now
2025-03-20 10:35:55,172:INFO:_master_model_container: 15
2025-03-20 10:35:55,172:INFO:_display_container: 2
2025-03-20 10:35:55,173:INFO:AdaBoostRegressor(random_state=42)
2025-03-20 10:35:55,173:INFO:create_model() successfully completed......................................
2025-03-20 10:35:55,225:INFO:SubProcess create_model() end ==================================
2025-03-20 10:35:55,225:INFO:Creating metrics dataframe
2025-03-20 10:35:55,230:INFO:Initializing Gradient Boosting Regressor
2025-03-20 10:35:55,230:INFO:Total runtime is 1.1378280520439148 minutes
2025-03-20 10:35:55,232:INFO:SubProcess create_model() called ==================================
2025-03-20 10:35:55,232:INFO:Initializing create_model()
2025-03-20 10:35:55,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:35:55,232:INFO:Checking exceptions
2025-03-20 10:35:55,232:INFO:Importing libraries
2025-03-20 10:35:55,232:INFO:Copying training dataset
2025-03-20 10:35:55,239:INFO:Defining folds
2025-03-20 10:35:55,239:INFO:Declaring metric variables
2025-03-20 10:35:55,240:INFO:Importing untrained model
2025-03-20 10:35:55,242:INFO:Gradient Boosting Regressor Imported successfully
2025-03-20 10:35:55,245:INFO:Starting cross validation
2025-03-20 10:35:55,250:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:36:00,171:INFO:Calculating mean and std
2025-03-20 10:36:00,171:INFO:Creating metrics dataframe
2025-03-20 10:36:00,173:INFO:Uploading results into container
2025-03-20 10:36:00,173:INFO:Uploading model into container now
2025-03-20 10:36:00,174:INFO:_master_model_container: 16
2025-03-20 10:36:00,174:INFO:_display_container: 2
2025-03-20 10:36:00,174:INFO:GradientBoostingRegressor(random_state=42)
2025-03-20 10:36:00,174:INFO:create_model() successfully completed......................................
2025-03-20 10:36:00,230:INFO:SubProcess create_model() end ==================================
2025-03-20 10:36:00,231:INFO:Creating metrics dataframe
2025-03-20 10:36:00,236:INFO:Initializing Light Gradient Boosting Machine
2025-03-20 10:36:00,236:INFO:Total runtime is 1.2212648828824362 minutes
2025-03-20 10:36:00,238:INFO:SubProcess create_model() called ==================================
2025-03-20 10:36:00,238:INFO:Initializing create_model()
2025-03-20 10:36:00,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:36:00,238:INFO:Checking exceptions
2025-03-20 10:36:00,238:INFO:Importing libraries
2025-03-20 10:36:00,238:INFO:Copying training dataset
2025-03-20 10:36:00,245:INFO:Defining folds
2025-03-20 10:36:00,245:INFO:Declaring metric variables
2025-03-20 10:36:00,246:INFO:Importing untrained model
2025-03-20 10:36:00,248:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-20 10:36:00,252:INFO:Starting cross validation
2025-03-20 10:36:00,258:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:36:07,994:INFO:Calculating mean and std
2025-03-20 10:36:07,995:INFO:Creating metrics dataframe
2025-03-20 10:36:07,996:INFO:Uploading results into container
2025-03-20 10:36:07,997:INFO:Uploading model into container now
2025-03-20 10:36:07,997:INFO:_master_model_container: 17
2025-03-20 10:36:07,997:INFO:_display_container: 2
2025-03-20 10:36:07,998:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-03-20 10:36:07,998:INFO:create_model() successfully completed......................................
2025-03-20 10:36:08,048:INFO:SubProcess create_model() end ==================================
2025-03-20 10:36:08,048:INFO:Creating metrics dataframe
2025-03-20 10:36:08,053:INFO:Initializing Dummy Regressor
2025-03-20 10:36:08,053:INFO:Total runtime is 1.3515480637550354 minutes
2025-03-20 10:36:08,055:INFO:SubProcess create_model() called ==================================
2025-03-20 10:36:08,055:INFO:Initializing create_model()
2025-03-20 10:36:08,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317c9a890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:36:08,055:INFO:Checking exceptions
2025-03-20 10:36:08,055:INFO:Importing libraries
2025-03-20 10:36:08,056:INFO:Copying training dataset
2025-03-20 10:36:08,062:INFO:Defining folds
2025-03-20 10:36:08,062:INFO:Declaring metric variables
2025-03-20 10:36:08,063:INFO:Importing untrained model
2025-03-20 10:36:08,065:INFO:Dummy Regressor Imported successfully
2025-03-20 10:36:08,068:INFO:Starting cross validation
2025-03-20 10:36:08,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:36:12,928:INFO:Calculating mean and std
2025-03-20 10:36:12,929:INFO:Creating metrics dataframe
2025-03-20 10:36:12,930:INFO:Uploading results into container
2025-03-20 10:36:12,931:INFO:Uploading model into container now
2025-03-20 10:36:12,931:INFO:_master_model_container: 18
2025-03-20 10:36:12,931:INFO:_display_container: 2
2025-03-20 10:36:12,932:INFO:DummyRegressor()
2025-03-20 10:36:12,932:INFO:create_model() successfully completed......................................
2025-03-20 10:36:12,997:INFO:SubProcess create_model() end ==================================
2025-03-20 10:36:12,997:INFO:Creating metrics dataframe
2025-03-20 10:36:13,005:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-20 10:36:13,010:INFO:Initializing create_model()
2025-03-20 10:36:13,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:36:13,010:INFO:Checking exceptions
2025-03-20 10:36:13,012:INFO:Importing libraries
2025-03-20 10:36:13,012:INFO:Copying training dataset
2025-03-20 10:36:13,020:INFO:Defining folds
2025-03-20 10:36:13,020:INFO:Declaring metric variables
2025-03-20 10:36:13,020:INFO:Importing untrained model
2025-03-20 10:36:13,020:INFO:Declaring custom model
2025-03-20 10:36:13,021:INFO:Linear Regression Imported successfully
2025-03-20 10:36:13,024:INFO:Cross validation set to False
2025-03-20 10:36:13,024:INFO:Fitting Model
2025-03-20 10:36:13,267:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000430 seconds.
2025-03-20 10:36:13,267:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:36:13,267:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:36:13,267:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 10:36:13,267:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 10:36:13,767:INFO:LinearRegression(n_jobs=-1)
2025-03-20 10:36:13,767:INFO:create_model() successfully completed......................................
2025-03-20 10:36:13,902:INFO:_master_model_container: 18
2025-03-20 10:36:13,903:INFO:_display_container: 2
2025-03-20 10:36:13,903:INFO:LinearRegression(n_jobs=-1)
2025-03-20 10:36:13,903:INFO:compare_models() successfully completed......................................
2025-03-20 10:41:55,938:INFO:Initializing finalize_model()
2025-03-20 10:41:55,940:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 10:41:55,941:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 10:41:55,955:INFO:Initializing create_model()
2025-03-20 10:41:55,955:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16c2226e0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:41:55,955:INFO:Checking exceptions
2025-03-20 10:41:55,958:INFO:Importing libraries
2025-03-20 10:41:55,958:INFO:Copying training dataset
2025-03-20 10:41:55,959:INFO:Defining folds
2025-03-20 10:41:55,959:INFO:Declaring metric variables
2025-03-20 10:41:55,959:INFO:Importing untrained model
2025-03-20 10:41:55,959:INFO:Declaring custom model
2025-03-20 10:41:55,960:INFO:Linear Regression Imported successfully
2025-03-20 10:41:55,964:INFO:Cross validation set to False
2025-03-20 10:41:55,965:INFO:Fitting Model
2025-03-20 10:41:56,212:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000518 seconds.
2025-03-20 10:41:56,212:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:41:56,212:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 10:41:56,212:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 10:41:56,213:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 10:41:56,709:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 10:41:56,709:INFO:create_model() successfully completed......................................
2025-03-20 10:41:56,769:INFO:_master_model_container: 18
2025-03-20 10:41:56,769:INFO:_display_container: 2
2025-03-20 10:41:56,776:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 10:41:56,776:INFO:finalize_model() successfully completed......................................
2025-03-20 10:41:56,879:INFO:Initializing save_model()
2025-03-20 10:41:56,879:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 10:41:56,879:INFO:Adding model into prep_pipe
2025-03-20 10:41:56,879:WARNING:Only Model saved as it was a pipeline.
2025-03-20 10:41:56,913:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 10:41:56,920:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 10:41:56,921:INFO:save_model() successfully completed......................................
2025-03-20 10:43:45,458:INFO:PyCaret RegressionExperiment
2025-03-20 10:43:45,459:INFO:Logging name: reg-default-name
2025-03-20 10:43:45,459:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 10:43:45,459:INFO:version 3.3.2
2025-03-20 10:43:45,459:INFO:Initializing setup()
2025-03-20 10:43:45,459:INFO:self.USI: 0a73
2025-03-20 10:43:45,459:INFO:self._variable_keys: {'_available_plots', '_ml_usecase', 'gpu_param', 'idx', 'exp_id', 'fold_generator', 'html_param', 'fold_shuffle_param', 'pipeline', 'y', 'X_train', 'y_test', 'memory', 'X_test', 'seed', 'logging_param', 'data', 'fold_groups_param', 'log_plots_param', 'y_train', 'gpu_n_jobs_param', 'X', 'target_param', 'USI', 'n_jobs_param', 'exp_name_log', 'transform_target_param'}
2025-03-20 10:43:45,459:INFO:Checking environment
2025-03-20 10:43:45,459:INFO:python_version: 3.10.16
2025-03-20 10:43:45,459:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 10:43:45,459:INFO:machine: arm64
2025-03-20 10:43:45,460:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 10:43:45,460:INFO:Memory: svmem(total=38654705664, available=14114979840, percent=63.5, used=15932375040, free=2061172736, active=12069339136, inactive=11986681856, wired=3863035904)
2025-03-20 10:43:45,460:INFO:Physical Core: 11
2025-03-20 10:43:45,460:INFO:Logical Core: 11
2025-03-20 10:43:45,460:INFO:Checking libraries
2025-03-20 10:43:45,460:INFO:System:
2025-03-20 10:43:45,460:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 10:43:45,460:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 10:43:45,460:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 10:43:45,460:INFO:PyCaret required dependencies:
2025-03-20 10:43:45,460:INFO:                 pip: 25.0
2025-03-20 10:43:45,460:INFO:          setuptools: 75.8.0
2025-03-20 10:43:45,460:INFO:             pycaret: 3.3.2
2025-03-20 10:43:45,460:INFO:             IPython: 8.34.0
2025-03-20 10:43:45,460:INFO:          ipywidgets: 8.1.5
2025-03-20 10:43:45,460:INFO:                tqdm: 4.67.1
2025-03-20 10:43:45,460:INFO:               numpy: 1.26.4
2025-03-20 10:43:45,460:INFO:              pandas: 2.1.4
2025-03-20 10:43:45,460:INFO:              jinja2: 3.1.6
2025-03-20 10:43:45,460:INFO:               scipy: 1.11.4
2025-03-20 10:43:45,460:INFO:              joblib: 1.3.2
2025-03-20 10:43:45,460:INFO:             sklearn: 1.4.2
2025-03-20 10:43:45,460:INFO:                pyod: 2.0.3
2025-03-20 10:43:45,460:INFO:            imblearn: 0.13.0
2025-03-20 10:43:45,460:INFO:   category_encoders: 2.7.0
2025-03-20 10:43:45,460:INFO:            lightgbm: 4.6.0
2025-03-20 10:43:45,460:INFO:               numba: 0.61.0
2025-03-20 10:43:45,460:INFO:            requests: 2.32.3
2025-03-20 10:43:45,460:INFO:          matplotlib: 3.7.5
2025-03-20 10:43:45,460:INFO:          scikitplot: 0.3.7
2025-03-20 10:43:45,460:INFO:         yellowbrick: 1.5
2025-03-20 10:43:45,460:INFO:              plotly: 5.24.1
2025-03-20 10:43:45,460:INFO:    plotly-resampler: Not installed
2025-03-20 10:43:45,460:INFO:             kaleido: 0.2.1
2025-03-20 10:43:45,460:INFO:           schemdraw: 0.15
2025-03-20 10:43:45,460:INFO:         statsmodels: 0.14.4
2025-03-20 10:43:45,460:INFO:              sktime: 0.26.0
2025-03-20 10:43:45,460:INFO:               tbats: 1.1.3
2025-03-20 10:43:45,460:INFO:            pmdarima: 2.0.4
2025-03-20 10:43:45,460:INFO:              psutil: 7.0.0
2025-03-20 10:43:45,460:INFO:          markupsafe: 3.0.2
2025-03-20 10:43:45,461:INFO:             pickle5: Not installed
2025-03-20 10:43:45,461:INFO:         cloudpickle: 3.1.1
2025-03-20 10:43:45,461:INFO:         deprecation: 2.1.0
2025-03-20 10:43:45,461:INFO:              xxhash: 3.5.0
2025-03-20 10:43:45,461:INFO:           wurlitzer: 3.1.1
2025-03-20 10:43:45,461:INFO:PyCaret optional dependencies:
2025-03-20 10:43:45,461:INFO:                shap: Not installed
2025-03-20 10:43:45,461:INFO:           interpret: Not installed
2025-03-20 10:43:45,461:INFO:                umap: Not installed
2025-03-20 10:43:45,461:INFO:     ydata_profiling: Not installed
2025-03-20 10:43:45,461:INFO:  explainerdashboard: Not installed
2025-03-20 10:43:45,461:INFO:             autoviz: Not installed
2025-03-20 10:43:45,461:INFO:           fairlearn: Not installed
2025-03-20 10:43:45,461:INFO:          deepchecks: Not installed
2025-03-20 10:43:45,461:INFO:             xgboost: Not installed
2025-03-20 10:43:45,461:INFO:            catboost: Not installed
2025-03-20 10:43:45,461:INFO:              kmodes: Not installed
2025-03-20 10:43:45,461:INFO:             mlxtend: Not installed
2025-03-20 10:43:45,461:INFO:       statsforecast: Not installed
2025-03-20 10:43:45,461:INFO:        tune_sklearn: Not installed
2025-03-20 10:43:45,461:INFO:                 ray: Not installed
2025-03-20 10:43:45,461:INFO:            hyperopt: Not installed
2025-03-20 10:43:45,461:INFO:              optuna: Not installed
2025-03-20 10:43:45,461:INFO:               skopt: Not installed
2025-03-20 10:43:45,461:INFO:              mlflow: Not installed
2025-03-20 10:43:45,461:INFO:              gradio: Not installed
2025-03-20 10:43:45,461:INFO:             fastapi: Not installed
2025-03-20 10:43:45,461:INFO:             uvicorn: Not installed
2025-03-20 10:43:45,461:INFO:              m2cgen: Not installed
2025-03-20 10:43:45,461:INFO:           evidently: Not installed
2025-03-20 10:43:45,461:INFO:               fugue: Not installed
2025-03-20 10:43:45,461:INFO:           streamlit: 1.43.2
2025-03-20 10:43:45,461:INFO:             prophet: Not installed
2025-03-20 10:43:45,461:INFO:None
2025-03-20 10:43:45,461:INFO:Set up data.
2025-03-20 10:43:45,465:INFO:Set up folding strategy.
2025-03-20 10:43:45,465:INFO:Set up train/test split.
2025-03-20 10:43:45,470:INFO:Set up index.
2025-03-20 10:43:45,470:INFO:Assigning column types.
2025-03-20 10:43:45,475:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 10:43:45,475:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,477:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,480:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,511:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,534:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,537:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,539:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,571:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,593:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,594:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 10:43:45,596:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,598:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,630:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,655:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,657:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,690:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,713:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 10:43:45,717:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,772:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,777:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,810:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,832:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 10:43:45,868:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,926:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:43:45,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:45,949:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 10:43:45,986:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:46,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,051:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:43:46,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,083:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 10:43:46,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,203:INFO:Preparing preprocessing pipeline...
2025-03-20 10:43:46,203:INFO:Set up simple imputation.
2025-03-20 10:43:46,203:INFO:Set up removing outliers.
2025-03-20 10:43:46,203:INFO:Set up feature normalization.
2025-03-20 10:43:46,203:INFO:Set up feature selection.
2025-03-20 10:43:46,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,264:INFO:Set up column name cleaning.
2025-03-20 10:43:46,301:INFO:Finished creating preprocessing pipeline.
2025-03-20 10:43:46,308:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 10:43:46,308:INFO:Creating final display dataframe.
2025-03-20 10:43:46,403:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              0a73
2025-03-20 10:43:46,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:43:46,530:INFO:setup() successfully completed in 1.07s...............
2025-03-20 10:43:46,532:INFO:Initializing create_model()
2025-03-20 10:43:46,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x330295720>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:43:46,532:INFO:Checking exceptions
2025-03-20 10:43:46,540:INFO:Importing libraries
2025-03-20 10:43:46,540:INFO:Copying training dataset
2025-03-20 10:43:46,549:INFO:Defining folds
2025-03-20 10:43:46,549:INFO:Declaring metric variables
2025-03-20 10:43:46,552:INFO:Importing untrained model
2025-03-20 10:43:46,554:INFO:Linear Regression Imported successfully
2025-03-20 10:43:46,560:INFO:Starting cross validation
2025-03-20 10:43:46,564:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:43:49,382:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002956 seconds.
2025-03-20 10:43:49,382:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,382:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:43:49,386:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,387:INFO:[LightGBM] [Info] Start training from score 7335.329512
2025-03-20 10:43:49,390:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002415 seconds.
2025-03-20 10:43:49,391:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,391:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:43:49,391:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,392:INFO:[LightGBM] [Info] Start training from score 7334.950880
2025-03-20 10:43:49,393:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001529 seconds.
2025-03-20 10:43:49,393:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,393:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:43:49,393:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001491 seconds.
2025-03-20 10:43:49,393:INFO:You can set `force_col_wise=true` to remove the overhead.[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 10:43:49,394:INFO:
2025-03-20 10:43:49,394:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:43:49,394:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 10:43:49,394:INFO:[LightGBM] [Info] Start training from score 7341.090685
2025-03-20 10:43:49,395:INFO:[LightGBM] [Info] Start training from score 7343.422373
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002653 seconds.
2025-03-20 10:43:49,413:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002801 seconds.
2025-03-20 10:43:49,413:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002683 seconds.
2025-03-20 10:43:49,413:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:43:49,413:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002802 seconds.
2025-03-20 10:43:49,414:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003042 seconds.
2025-03-20 10:43:49,414:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:43:49,414:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,415:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,415:INFO:[LightGBM] [Info] Start training from score 7337.208662
2025-03-20 10:43:49,415:INFO:[LightGBM] [Info] Start training from score 7351.855824
2025-03-20 10:43:49,415:INFO:[LightGBM] [Info] Start training from score 7346.140116
2025-03-20 10:43:49,415:INFO:[LightGBM] [Info] Start training from score 7348.947934
2025-03-20 10:43:49,416:INFO:[LightGBM] [Info] Start training from score 7341.151421
2025-03-20 10:43:49,417:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001516 seconds.
2025-03-20 10:43:49,417:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:49,417:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 10:43:49,418:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 10:43:49,419:INFO:[LightGBM] [Info] Start training from score 7347.301409
2025-03-20 10:43:53,038:INFO:Calculating mean and std
2025-03-20 10:43:53,040:INFO:Creating metrics dataframe
2025-03-20 10:43:53,049:INFO:Finalizing model
2025-03-20 10:43:53,299:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000501 seconds.
2025-03-20 10:43:53,299:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:53,300:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:43:53,300:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 10:43:53,300:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 10:43:53,823:INFO:Uploading results into container
2025-03-20 10:43:53,823:INFO:Uploading model into container now
2025-03-20 10:43:53,831:INFO:_master_model_container: 1
2025-03-20 10:43:53,831:INFO:_display_container: 2
2025-03-20 10:43:53,831:INFO:LinearRegression(n_jobs=-1)
2025-03-20 10:43:53,831:INFO:create_model() successfully completed......................................
2025-03-20 10:43:53,906:INFO:Initializing finalize_model()
2025-03-20 10:43:53,906:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x330295720>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 10:43:53,906:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 10:43:53,911:INFO:Initializing create_model()
2025-03-20 10:43:53,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x330295720>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:43:53,911:INFO:Checking exceptions
2025-03-20 10:43:53,913:INFO:Importing libraries
2025-03-20 10:43:53,913:INFO:Copying training dataset
2025-03-20 10:43:53,914:INFO:Defining folds
2025-03-20 10:43:53,914:INFO:Declaring metric variables
2025-03-20 10:43:53,915:INFO:Importing untrained model
2025-03-20 10:43:53,915:INFO:Declaring custom model
2025-03-20 10:43:53,915:INFO:Linear Regression Imported successfully
2025-03-20 10:43:53,919:INFO:Cross validation set to False
2025-03-20 10:43:53,919:INFO:Fitting Model
2025-03-20 10:43:54,217:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000553 seconds.
2025-03-20 10:43:54,217:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:43:54,217:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 10:43:54,217:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 10:43:54,218:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 10:43:54,715:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 10:43:54,715:INFO:create_model() successfully completed......................................
2025-03-20 10:43:54,769:INFO:_master_model_container: 1
2025-03-20 10:43:54,770:INFO:_display_container: 2
2025-03-20 10:43:54,776:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 10:43:54,776:INFO:finalize_model() successfully completed......................................
2025-03-20 10:43:54,878:INFO:Initializing save_model()
2025-03-20 10:43:54,878:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 10:43:54,878:INFO:Adding model into prep_pipe
2025-03-20 10:43:54,879:WARNING:Only Model saved as it was a pipeline.
2025-03-20 10:43:54,908:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 10:43:54,914:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 10:43:54,914:INFO:save_model() successfully completed......................................
2025-03-20 10:46:38,471:INFO:PyCaret RegressionExperiment
2025-03-20 10:46:38,471:INFO:Logging name: reg-default-name
2025-03-20 10:46:38,471:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 10:46:38,471:INFO:version 3.3.2
2025-03-20 10:46:38,471:INFO:Initializing setup()
2025-03-20 10:46:38,472:INFO:self.USI: 3689
2025-03-20 10:46:38,472:INFO:self._variable_keys: {'_available_plots', '_ml_usecase', 'gpu_param', 'idx', 'exp_id', 'fold_generator', 'html_param', 'fold_shuffle_param', 'pipeline', 'y', 'X_train', 'y_test', 'memory', 'X_test', 'seed', 'logging_param', 'data', 'fold_groups_param', 'log_plots_param', 'y_train', 'gpu_n_jobs_param', 'X', 'target_param', 'USI', 'n_jobs_param', 'exp_name_log', 'transform_target_param'}
2025-03-20 10:46:38,472:INFO:Checking environment
2025-03-20 10:46:38,472:INFO:python_version: 3.10.16
2025-03-20 10:46:38,473:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 10:46:38,473:INFO:machine: arm64
2025-03-20 10:46:38,473:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 10:46:38,473:INFO:Memory: svmem(total=38654705664, available=13170360320, percent=65.9, used=16963534848, free=75956224, active=12986204160, inactive=13018710016, wired=3977330688)
2025-03-20 10:46:38,473:INFO:Physical Core: 11
2025-03-20 10:46:38,473:INFO:Logical Core: 11
2025-03-20 10:46:38,473:INFO:Checking libraries
2025-03-20 10:46:38,474:INFO:System:
2025-03-20 10:46:38,474:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 10:46:38,474:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 10:46:38,474:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 10:46:38,474:INFO:PyCaret required dependencies:
2025-03-20 10:46:38,474:INFO:                 pip: 25.0
2025-03-20 10:46:38,474:INFO:          setuptools: 75.8.0
2025-03-20 10:46:38,474:INFO:             pycaret: 3.3.2
2025-03-20 10:46:38,474:INFO:             IPython: 8.34.0
2025-03-20 10:46:38,474:INFO:          ipywidgets: 8.1.5
2025-03-20 10:46:38,474:INFO:                tqdm: 4.67.1
2025-03-20 10:46:38,474:INFO:               numpy: 1.26.4
2025-03-20 10:46:38,474:INFO:              pandas: 2.1.4
2025-03-20 10:46:38,474:INFO:              jinja2: 3.1.6
2025-03-20 10:46:38,474:INFO:               scipy: 1.11.4
2025-03-20 10:46:38,474:INFO:              joblib: 1.3.2
2025-03-20 10:46:38,474:INFO:             sklearn: 1.4.2
2025-03-20 10:46:38,474:INFO:                pyod: 2.0.3
2025-03-20 10:46:38,474:INFO:            imblearn: 0.13.0
2025-03-20 10:46:38,474:INFO:   category_encoders: 2.7.0
2025-03-20 10:46:38,474:INFO:            lightgbm: 4.6.0
2025-03-20 10:46:38,474:INFO:               numba: 0.61.0
2025-03-20 10:46:38,474:INFO:            requests: 2.32.3
2025-03-20 10:46:38,474:INFO:          matplotlib: 3.7.5
2025-03-20 10:46:38,474:INFO:          scikitplot: 0.3.7
2025-03-20 10:46:38,474:INFO:         yellowbrick: 1.5
2025-03-20 10:46:38,474:INFO:              plotly: 5.24.1
2025-03-20 10:46:38,474:INFO:    plotly-resampler: Not installed
2025-03-20 10:46:38,474:INFO:             kaleido: 0.2.1
2025-03-20 10:46:38,474:INFO:           schemdraw: 0.15
2025-03-20 10:46:38,474:INFO:         statsmodels: 0.14.4
2025-03-20 10:46:38,474:INFO:              sktime: 0.26.0
2025-03-20 10:46:38,474:INFO:               tbats: 1.1.3
2025-03-20 10:46:38,474:INFO:            pmdarima: 2.0.4
2025-03-20 10:46:38,474:INFO:              psutil: 7.0.0
2025-03-20 10:46:38,474:INFO:          markupsafe: 3.0.2
2025-03-20 10:46:38,474:INFO:             pickle5: Not installed
2025-03-20 10:46:38,474:INFO:         cloudpickle: 3.1.1
2025-03-20 10:46:38,474:INFO:         deprecation: 2.1.0
2025-03-20 10:46:38,474:INFO:              xxhash: 3.5.0
2025-03-20 10:46:38,474:INFO:           wurlitzer: 3.1.1
2025-03-20 10:46:38,474:INFO:PyCaret optional dependencies:
2025-03-20 10:46:38,474:INFO:                shap: Not installed
2025-03-20 10:46:38,474:INFO:           interpret: Not installed
2025-03-20 10:46:38,474:INFO:                umap: Not installed
2025-03-20 10:46:38,474:INFO:     ydata_profiling: Not installed
2025-03-20 10:46:38,474:INFO:  explainerdashboard: Not installed
2025-03-20 10:46:38,474:INFO:             autoviz: Not installed
2025-03-20 10:46:38,474:INFO:           fairlearn: Not installed
2025-03-20 10:46:38,474:INFO:          deepchecks: Not installed
2025-03-20 10:46:38,474:INFO:             xgboost: Not installed
2025-03-20 10:46:38,474:INFO:            catboost: Not installed
2025-03-20 10:46:38,474:INFO:              kmodes: Not installed
2025-03-20 10:46:38,474:INFO:             mlxtend: Not installed
2025-03-20 10:46:38,474:INFO:       statsforecast: Not installed
2025-03-20 10:46:38,474:INFO:        tune_sklearn: Not installed
2025-03-20 10:46:38,474:INFO:                 ray: Not installed
2025-03-20 10:46:38,474:INFO:            hyperopt: Not installed
2025-03-20 10:46:38,474:INFO:              optuna: Not installed
2025-03-20 10:46:38,474:INFO:               skopt: Not installed
2025-03-20 10:46:38,474:INFO:              mlflow: Not installed
2025-03-20 10:46:38,474:INFO:              gradio: Not installed
2025-03-20 10:46:38,475:INFO:             fastapi: Not installed
2025-03-20 10:46:38,475:INFO:             uvicorn: Not installed
2025-03-20 10:46:38,475:INFO:              m2cgen: Not installed
2025-03-20 10:46:38,475:INFO:           evidently: Not installed
2025-03-20 10:46:38,475:INFO:               fugue: Not installed
2025-03-20 10:46:38,475:INFO:           streamlit: 1.43.2
2025-03-20 10:46:38,475:INFO:             prophet: Not installed
2025-03-20 10:46:38,475:INFO:None
2025-03-20 10:46:38,475:INFO:Set up data.
2025-03-20 10:46:38,478:INFO:Set up folding strategy.
2025-03-20 10:46:38,479:INFO:Set up train/test split.
2025-03-20 10:46:38,483:INFO:Set up index.
2025-03-20 10:46:38,484:INFO:Assigning column types.
2025-03-20 10:46:38,488:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 10:46:38,488:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,491:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,494:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,527:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,550:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,552:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,555:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,587:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,609:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 10:46:38,612:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,614:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,670:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,672:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,726:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 10:46:38,731:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,785:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,790:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,843:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 10:46:38,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 10:46:38,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:38,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 10:46:38,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:39,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,053:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 10:46:39,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,075:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 10:46:39,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,194:INFO:Preparing preprocessing pipeline...
2025-03-20 10:46:39,194:INFO:Set up simple imputation.
2025-03-20 10:46:39,194:INFO:Set up removing outliers.
2025-03-20 10:46:39,194:INFO:Set up feature normalization.
2025-03-20 10:46:39,194:INFO:Set up feature selection.
2025-03-20 10:46:39,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,255:INFO:Set up column name cleaning.
2025-03-20 10:46:39,288:INFO:Finished creating preprocessing pipeline.
2025-03-20 10:46:39,294:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 10:46:39,294:INFO:Creating final display dataframe.
2025-03-20 10:46:39,388:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              3689
2025-03-20 10:46:39,451:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 10:46:39,509:INFO:setup() successfully completed in 1.04s...............
2025-03-20 10:46:39,510:INFO:Initializing create_model()
2025-03-20 10:46:39,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x338a11ed0>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:46:39,510:INFO:Checking exceptions
2025-03-20 10:46:39,517:INFO:Importing libraries
2025-03-20 10:46:39,517:INFO:Copying training dataset
2025-03-20 10:46:39,526:INFO:Defining folds
2025-03-20 10:46:39,526:INFO:Declaring metric variables
2025-03-20 10:46:39,528:INFO:Importing untrained model
2025-03-20 10:46:39,531:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 10:46:39,535:INFO:Starting cross validation
2025-03-20 10:46:39,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 10:46:44,076:INFO:Calculating mean and std
2025-03-20 10:46:44,077:INFO:Creating metrics dataframe
2025-03-20 10:46:44,079:INFO:Finalizing model
2025-03-20 10:46:44,296:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000467 seconds.
2025-03-20 10:46:44,296:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:46:44,296:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 10:46:44,296:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 10:46:44,297:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 10:46:44,792:INFO:Uploading results into container
2025-03-20 10:46:44,793:INFO:Uploading model into container now
2025-03-20 10:46:44,811:INFO:_master_model_container: 1
2025-03-20 10:46:44,812:INFO:_display_container: 2
2025-03-20 10:46:44,812:INFO:OrthogonalMatchingPursuit()
2025-03-20 10:46:44,812:INFO:create_model() successfully completed......................................
2025-03-20 10:46:44,882:INFO:Initializing finalize_model()
2025-03-20 10:46:44,883:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x338a11ed0>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 10:46:44,884:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 10:46:44,888:INFO:Initializing create_model()
2025-03-20 10:46:44,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x338a11ed0>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 10:46:44,888:INFO:Checking exceptions
2025-03-20 10:46:44,889:INFO:Importing libraries
2025-03-20 10:46:44,889:INFO:Copying training dataset
2025-03-20 10:46:44,890:INFO:Defining folds
2025-03-20 10:46:44,890:INFO:Declaring metric variables
2025-03-20 10:46:44,890:INFO:Importing untrained model
2025-03-20 10:46:44,890:INFO:Declaring custom model
2025-03-20 10:46:44,891:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 10:46:44,908:INFO:Cross validation set to False
2025-03-20 10:46:44,908:INFO:Fitting Model
2025-03-20 10:46:45,208:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000495 seconds.
2025-03-20 10:46:45,209:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 10:46:45,209:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 10:46:45,209:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 10:46:45,209:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 10:46:45,695:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 10:46:45,695:INFO:create_model() successfully completed......................................
2025-03-20 10:46:45,752:INFO:_master_model_container: 1
2025-03-20 10:46:45,752:INFO:_display_container: 2
2025-03-20 10:46:45,759:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 10:46:45,759:INFO:finalize_model() successfully completed......................................
2025-03-20 10:46:45,866:INFO:Initializing save_model()
2025-03-20 10:46:45,867:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 10:46:45,867:INFO:Adding model into prep_pipe
2025-03-20 10:46:45,867:WARNING:Only Model saved as it was a pipeline.
2025-03-20 10:46:45,896:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 10:46:45,903:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 10:46:45,903:INFO:save_model() successfully completed......................................
2025-03-20 11:56:24,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 11:56:24,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 11:56:24,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 11:56:24,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 11:56:24,404:INFO:Initializing load_model()
2025-03-20 11:56:24,404:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 11:56:48,341:INFO:Initializing load_model()
2025-03-20 11:56:48,342:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 11:56:49,886:INFO:Initializing load_model()
2025-03-20 11:56:49,887:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 12:03:48,619:INFO:Initializing load_model()
2025-03-20 12:03:48,619:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 12:12:37,591:INFO:Initializing load_model()
2025-03-20 12:12:37,592:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 12:15:44,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:15:44,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:15:44,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:15:44,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:16:59,978:INFO:Initializing load_model()
2025-03-20 12:16:59,978:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 12:17:41,919:INFO:Initializing load_model()
2025-03-20 12:17:41,919:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:17:42,264:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '77.0.1', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
  warnings.warn(

2025-03-20 12:17:50,422:INFO:Initializing load_model()
2025-03-20 12:17:50,422:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:17:52,508:INFO:Initializing load_model()
2025-03-20 12:17:52,508:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:17:59,772:INFO:Initializing load_model()
2025-03-20 12:17:59,773:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:19:21,215:INFO:Initializing load_model()
2025-03-20 12:19:21,215:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:19:50,643:INFO:Initializing load_model()
2025-03-20 12:19:50,643:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:19:55,332:INFO:Initializing load_model()
2025-03-20 12:19:55,332:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:16,428:INFO:Initializing load_model()
2025-03-20 12:20:16,428:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:24,505:INFO:Initializing load_model()
2025-03-20 12:20:24,505:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:27,648:INFO:Initializing load_model()
2025-03-20 12:20:27,648:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:29,490:INFO:Initializing load_model()
2025-03-20 12:20:29,490:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:32,205:INFO:Initializing load_model()
2025-03-20 12:20:32,205:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:37,335:INFO:Initializing load_model()
2025-03-20 12:20:37,335:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:37,869:INFO:Initializing load_model()
2025-03-20 12:20:37,869:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:38,266:INFO:Initializing load_model()
2025-03-20 12:20:38,267:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:38,606:INFO:Initializing load_model()
2025-03-20 12:20:38,606:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:38,837:INFO:Initializing load_model()
2025-03-20 12:20:38,838:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:41,133:INFO:Initializing load_model()
2025-03-20 12:20:41,133:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:42,161:INFO:Initializing load_model()
2025-03-20 12:20:42,162:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:43,093:INFO:Initializing load_model()
2025-03-20 12:20:43,094:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:43,327:INFO:Initializing load_model()
2025-03-20 12:20:43,327:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:45,363:INFO:Initializing load_model()
2025-03-20 12:20:45,364:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:20:45,408:INFO:Initializing predict_model()
2025-03-20 12:20:45,408:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32ca391b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32cd7f250>)
2025-03-20 12:20:45,408:INFO:Checking exceptions
2025-03-20 12:20:45,408:INFO:Preloading libraries
2025-03-20 12:20:45,409:INFO:Set up data.
2025-03-20 12:20:45,412:INFO:Set up index.
2025-03-20 12:21:00,100:INFO:Initializing load_model()
2025-03-20 12:21:00,100:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:00,132:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '77.0.1', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
  warnings.warn(

2025-03-20 12:21:00,271:INFO:Initializing load_model()
2025-03-20 12:21:00,271:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:00,452:INFO:Initializing load_model()
2025-03-20 12:21:00,452:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:00,738:INFO:Initializing load_model()
2025-03-20 12:21:00,738:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:03,363:INFO:Initializing load_model()
2025-03-20 12:21:03,364:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:04,548:INFO:Initializing load_model()
2025-03-20 12:21:04,549:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:04,592:INFO:Initializing predict_model()
2025-03-20 12:21:04,593:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x104d88940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ca104c0>)
2025-03-20 12:21:04,593:INFO:Checking exceptions
2025-03-20 12:21:04,593:INFO:Preloading libraries
2025-03-20 12:21:04,593:INFO:Set up data.
2025-03-20 12:21:04,594:INFO:Set up index.
2025-03-20 12:21:55,319:INFO:Initializing load_model()
2025-03-20 12:21:55,320:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:21:55,351:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '77.0.1', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
  warnings.warn(

2025-03-20 12:21:55,361:INFO:Initializing predict_model()
2025-03-20 12:21:55,361:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32ca3b040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ca101f0>)
2025-03-20 12:21:55,361:INFO:Checking exceptions
2025-03-20 12:21:55,361:INFO:Preloading libraries
2025-03-20 12:21:55,361:INFO:Set up data.
2025-03-20 12:21:55,363:INFO:Set up index.
2025-03-20 12:22:02,750:INFO:Initializing load_model()
2025-03-20 12:22:02,751:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:22:02,782:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '77.0.1', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '8.34.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.16', 'machine': 'arm64'}}
  warnings.warn(

2025-03-20 12:22:02,791:INFO:Initializing predict_model()
2025-03-20 12:22:02,791:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32cac5300>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ca105e0>)
2025-03-20 12:22:02,791:INFO:Checking exceptions
2025-03-20 12:22:02,791:INFO:Preloading libraries
2025-03-20 12:22:02,792:INFO:Set up data.
2025-03-20 12:22:02,793:INFO:Set up index.
2025-03-20 12:23:11,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:23:11,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:23:11,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:23:11,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:23:11,762:INFO:PyCaret RegressionExperiment
2025-03-20 12:23:11,762:INFO:Logging name: reg-default-name
2025-03-20 12:23:11,762:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 12:23:11,762:INFO:version 3.3.2
2025-03-20 12:23:11,762:INFO:Initializing setup()
2025-03-20 12:23:11,762:INFO:self.USI: 4f40
2025-03-20 12:23:11,762:INFO:self._variable_keys: {'exp_name_log', 'html_param', 'fold_groups_param', 'memory', 'y_test', 'data', '_available_plots', 'log_plots_param', 'logging_param', 'y', 'X_train', 'USI', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_generator', 'X_test', 'gpu_n_jobs_param', 'pipeline', 'n_jobs_param', 'y_train', 'target_param', 'seed', 'transform_target_param', 'X', 'gpu_param', 'idx'}
2025-03-20 12:23:11,762:INFO:Checking environment
2025-03-20 12:23:11,762:INFO:python_version: 3.10.16
2025-03-20 12:23:11,762:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 12:23:11,762:INFO:machine: arm64
2025-03-20 12:23:11,762:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 12:23:11,762:INFO:Memory: svmem(total=38654705664, available=12490260480, percent=67.7, used=16396632064, free=71286784, active=12411781120, inactive=12338987008, wired=3984850944)
2025-03-20 12:23:11,762:INFO:Physical Core: 11
2025-03-20 12:23:11,762:INFO:Logical Core: 11
2025-03-20 12:23:11,762:INFO:Checking libraries
2025-03-20 12:23:11,762:INFO:System:
2025-03-20 12:23:11,762:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 12:23:11,762:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 12:23:11,762:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 12:23:11,762:INFO:PyCaret required dependencies:
2025-03-20 12:23:11,809:INFO:                 pip: 25.0
2025-03-20 12:23:11,809:INFO:          setuptools: 77.0.1
2025-03-20 12:23:11,809:INFO:             pycaret: 3.3.2
2025-03-20 12:23:11,810:INFO:             IPython: 8.34.0
2025-03-20 12:23:11,810:INFO:          ipywidgets: 8.1.5
2025-03-20 12:23:11,810:INFO:                tqdm: 4.67.1
2025-03-20 12:23:11,810:INFO:               numpy: 1.26.4
2025-03-20 12:23:11,810:INFO:              pandas: 2.1.4
2025-03-20 12:23:11,810:INFO:              jinja2: 3.1.6
2025-03-20 12:23:11,810:INFO:               scipy: 1.11.4
2025-03-20 12:23:11,810:INFO:              joblib: 1.3.2
2025-03-20 12:23:11,810:INFO:             sklearn: 1.4.2
2025-03-20 12:23:11,810:INFO:                pyod: 2.0.3
2025-03-20 12:23:11,810:INFO:            imblearn: 0.13.0
2025-03-20 12:23:11,810:INFO:   category_encoders: 2.7.0
2025-03-20 12:23:11,810:INFO:            lightgbm: 4.6.0
2025-03-20 12:23:11,810:INFO:               numba: 0.61.0
2025-03-20 12:23:11,810:INFO:            requests: 2.32.3
2025-03-20 12:23:11,810:INFO:          matplotlib: 3.7.5
2025-03-20 12:23:11,810:INFO:          scikitplot: 0.3.7
2025-03-20 12:23:11,810:INFO:         yellowbrick: 1.5
2025-03-20 12:23:11,810:INFO:              plotly: 5.24.1
2025-03-20 12:23:11,810:INFO:    plotly-resampler: Not installed
2025-03-20 12:23:11,810:INFO:             kaleido: 0.2.1
2025-03-20 12:23:11,810:INFO:           schemdraw: 0.15
2025-03-20 12:23:11,810:INFO:         statsmodels: 0.14.4
2025-03-20 12:23:11,810:INFO:              sktime: 0.26.0
2025-03-20 12:23:11,810:INFO:               tbats: 1.1.3
2025-03-20 12:23:11,810:INFO:            pmdarima: 2.0.4
2025-03-20 12:23:11,810:INFO:              psutil: 7.0.0
2025-03-20 12:23:11,810:INFO:          markupsafe: 3.0.2
2025-03-20 12:23:11,810:INFO:             pickle5: Not installed
2025-03-20 12:23:11,810:INFO:         cloudpickle: 3.1.1
2025-03-20 12:23:11,810:INFO:         deprecation: 2.1.0
2025-03-20 12:23:11,810:INFO:              xxhash: 3.5.0
2025-03-20 12:23:11,810:INFO:           wurlitzer: 3.1.1
2025-03-20 12:23:11,810:INFO:PyCaret optional dependencies:
2025-03-20 12:23:11,818:INFO:                shap: Not installed
2025-03-20 12:23:11,818:INFO:           interpret: Not installed
2025-03-20 12:23:11,818:INFO:                umap: Not installed
2025-03-20 12:23:11,818:INFO:     ydata_profiling: Not installed
2025-03-20 12:23:11,818:INFO:  explainerdashboard: Not installed
2025-03-20 12:23:11,818:INFO:             autoviz: Not installed
2025-03-20 12:23:11,818:INFO:           fairlearn: Not installed
2025-03-20 12:23:11,818:INFO:          deepchecks: Not installed
2025-03-20 12:23:11,818:INFO:             xgboost: Not installed
2025-03-20 12:23:11,818:INFO:            catboost: Not installed
2025-03-20 12:23:11,818:INFO:              kmodes: Not installed
2025-03-20 12:23:11,818:INFO:             mlxtend: Not installed
2025-03-20 12:23:11,818:INFO:       statsforecast: Not installed
2025-03-20 12:23:11,818:INFO:        tune_sklearn: Not installed
2025-03-20 12:23:11,818:INFO:                 ray: Not installed
2025-03-20 12:23:11,818:INFO:            hyperopt: Not installed
2025-03-20 12:23:11,818:INFO:              optuna: Not installed
2025-03-20 12:23:11,818:INFO:               skopt: Not installed
2025-03-20 12:23:11,818:INFO:              mlflow: Not installed
2025-03-20 12:23:11,818:INFO:              gradio: Not installed
2025-03-20 12:23:11,818:INFO:             fastapi: Not installed
2025-03-20 12:23:11,818:INFO:             uvicorn: Not installed
2025-03-20 12:23:11,818:INFO:              m2cgen: Not installed
2025-03-20 12:23:11,818:INFO:           evidently: Not installed
2025-03-20 12:23:11,818:INFO:               fugue: Not installed
2025-03-20 12:23:11,818:INFO:           streamlit: 1.43.2
2025-03-20 12:23:11,818:INFO:             prophet: Not installed
2025-03-20 12:23:11,818:INFO:None
2025-03-20 12:23:11,818:INFO:Set up data.
2025-03-20 12:23:11,826:INFO:Set up folding strategy.
2025-03-20 12:23:11,826:INFO:Set up train/test split.
2025-03-20 12:23:11,831:INFO:Set up index.
2025-03-20 12:23:11,832:INFO:Assigning column types.
2025-03-20 12:23:11,836:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 12:23:11,836:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,838:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,841:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:11,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:11,898:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,900:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,902:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,935:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,959:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:11,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:11,960:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 12:23:11,963:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:23:11,965:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,023:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,027:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,029:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,065:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,090:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 12:23:12,095:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,160:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,195:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,220:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 12:23:12,261:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,286:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,353:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 12:23:12,393:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,456:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:23:12,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,480:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 12:23:12,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,605:INFO:Preparing preprocessing pipeline...
2025-03-20 12:23:12,605:INFO:Set up simple imputation.
2025-03-20 12:23:12,606:INFO:Set up removing outliers.
2025-03-20 12:23:12,606:INFO:Set up feature normalization.
2025-03-20 12:23:12,606:INFO:Set up feature selection.
2025-03-20 12:23:12,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,672:INFO:Set up column name cleaning.
2025-03-20 12:23:12,711:INFO:Finished creating preprocessing pipeline.
2025-03-20 12:23:12,718:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 12:23:12,718:INFO:Creating final display dataframe.
2025-03-20 12:23:12,811:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              4f40
2025-03-20 12:23:12,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:12,934:INFO:setup() successfully completed in 1.18s...............
2025-03-20 12:23:12,938:INFO:gpu_param set to False
2025-03-20 12:23:13,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:13,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:13,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:13,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:23:13,069:INFO:Initializing compare_models()
2025-03-20 12:23:13,070:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-20 12:23:13,070:INFO:Checking exceptions
2025-03-20 12:23:13,074:INFO:Preparing display monitor
2025-03-20 12:23:13,098:INFO:Initializing Linear Regression
2025-03-20 12:23:13,099:INFO:Total runtime is 3.548463185628255e-06 minutes
2025-03-20 12:23:13,100:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:13,100:INFO:Initializing create_model()
2025-03-20 12:23:13,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:13,101:INFO:Checking exceptions
2025-03-20 12:23:13,101:INFO:Importing libraries
2025-03-20 12:23:13,101:INFO:Copying training dataset
2025-03-20 12:23:13,112:INFO:Defining folds
2025-03-20 12:23:13,112:INFO:Declaring metric variables
2025-03-20 12:23:13,114:INFO:Importing untrained model
2025-03-20 12:23:13,115:INFO:Linear Regression Imported successfully
2025-03-20 12:23:13,119:INFO:Starting cross validation
2025-03-20 12:23:13,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:16,010:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000571 seconds.
2025-03-20 12:23:16,010:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 12:23:16,011:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 12:23:16,011:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:23:16,011:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 12:23:16,011:INFO:[LightGBM] [Info] Start training from score 7341.090685
2025-03-20 12:23:16,025:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002852 seconds.
2025-03-20 12:23:16,025:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,025:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 12:23:16,025:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 12:23:16,026:INFO:[LightGBM] [Info] Start training from score 7343.422373
2025-03-20 12:23:16,032:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001396 seconds.
2025-03-20 12:23:16,032:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,032:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 12:23:16,032:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,033:INFO:[LightGBM] [Info] Start training from score 7341.151421
2025-03-20 12:23:16,045:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001206 seconds.
2025-03-20 12:23:16,045:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,045:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 12:23:16,045:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,046:INFO:[LightGBM] [Info] Start training from score 7335.329512
2025-03-20 12:23:16,063:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001708 seconds.
2025-03-20 12:23:16,063:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,063:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 12:23:16,064:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,065:INFO:[LightGBM] [Info] Start training from score 7347.301409
2025-03-20 12:23:16,295:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000619 seconds.
2025-03-20 12:23:16,295:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,295:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 12:23:16,295:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,296:INFO:[LightGBM] [Info] Start training from score 7334.950880
2025-03-20 12:23:16,370:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000677 seconds.
2025-03-20 12:23:16,370:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,370:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:23:16,370:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,371:INFO:[LightGBM] [Info] Start training from score 7337.208662
2025-03-20 12:23:16,511:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.006989 seconds.
2025-03-20 12:23:16,511:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,511:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:23:16,513:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,518:INFO:[LightGBM] [Info] Start training from score 7348.947934
2025-03-20 12:23:16,758:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000714 seconds.
2025-03-20 12:23:16,758:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:16,758:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:23:16,758:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:16,758:INFO:[LightGBM] [Info] Start training from score 7351.855824
2025-03-20 12:23:17,135:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000604 seconds.
2025-03-20 12:23:17,135:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:23:17,135:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:23:17,135:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 12:23:17,135:INFO:[LightGBM] [Info] Start training from score 7346.140116
2025-03-20 12:23:20,220:INFO:Calculating mean and std
2025-03-20 12:23:20,222:INFO:Creating metrics dataframe
2025-03-20 12:23:20,225:INFO:Uploading results into container
2025-03-20 12:23:20,225:INFO:Uploading model into container now
2025-03-20 12:23:20,226:INFO:_master_model_container: 1
2025-03-20 12:23:20,226:INFO:_display_container: 2
2025-03-20 12:23:20,226:INFO:LinearRegression(n_jobs=-1)
2025-03-20 12:23:20,226:INFO:create_model() successfully completed......................................
2025-03-20 12:23:20,322:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:20,322:INFO:Creating metrics dataframe
2025-03-20 12:23:20,328:INFO:Initializing Lasso Regression
2025-03-20 12:23:20,328:INFO:Total runtime is 0.12049091657002768 minutes
2025-03-20 12:23:20,330:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:20,330:INFO:Initializing create_model()
2025-03-20 12:23:20,330:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:20,330:INFO:Checking exceptions
2025-03-20 12:23:20,330:INFO:Importing libraries
2025-03-20 12:23:20,330:INFO:Copying training dataset
2025-03-20 12:23:20,338:INFO:Defining folds
2025-03-20 12:23:20,338:INFO:Declaring metric variables
2025-03-20 12:23:20,341:INFO:Importing untrained model
2025-03-20 12:23:20,343:INFO:Lasso Regression Imported successfully
2025-03-20 12:23:20,346:INFO:Starting cross validation
2025-03-20 12:23:20,350:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:24,975:INFO:Calculating mean and std
2025-03-20 12:23:24,975:INFO:Creating metrics dataframe
2025-03-20 12:23:24,977:INFO:Uploading results into container
2025-03-20 12:23:24,977:INFO:Uploading model into container now
2025-03-20 12:23:24,977:INFO:_master_model_container: 2
2025-03-20 12:23:24,977:INFO:_display_container: 2
2025-03-20 12:23:24,978:INFO:Lasso(random_state=42)
2025-03-20 12:23:24,978:INFO:create_model() successfully completed......................................
2025-03-20 12:23:25,036:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:25,036:INFO:Creating metrics dataframe
2025-03-20 12:23:25,040:INFO:Initializing Ridge Regression
2025-03-20 12:23:25,040:INFO:Total runtime is 0.19902524948120118 minutes
2025-03-20 12:23:25,042:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:25,042:INFO:Initializing create_model()
2025-03-20 12:23:25,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:25,042:INFO:Checking exceptions
2025-03-20 12:23:25,042:INFO:Importing libraries
2025-03-20 12:23:25,042:INFO:Copying training dataset
2025-03-20 12:23:25,049:INFO:Defining folds
2025-03-20 12:23:25,049:INFO:Declaring metric variables
2025-03-20 12:23:25,050:INFO:Importing untrained model
2025-03-20 12:23:25,052:INFO:Ridge Regression Imported successfully
2025-03-20 12:23:25,055:INFO:Starting cross validation
2025-03-20 12:23:25,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:29,220:INFO:Calculating mean and std
2025-03-20 12:23:29,221:INFO:Creating metrics dataframe
2025-03-20 12:23:29,222:INFO:Uploading results into container
2025-03-20 12:23:29,223:INFO:Uploading model into container now
2025-03-20 12:23:29,223:INFO:_master_model_container: 3
2025-03-20 12:23:29,223:INFO:_display_container: 2
2025-03-20 12:23:29,224:INFO:Ridge(random_state=42)
2025-03-20 12:23:29,224:INFO:create_model() successfully completed......................................
2025-03-20 12:23:29,278:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:29,278:INFO:Creating metrics dataframe
2025-03-20 12:23:29,282:INFO:Initializing Elastic Net
2025-03-20 12:23:29,282:INFO:Total runtime is 0.2697311123212179 minutes
2025-03-20 12:23:29,284:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:29,284:INFO:Initializing create_model()
2025-03-20 12:23:29,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:29,284:INFO:Checking exceptions
2025-03-20 12:23:29,285:INFO:Importing libraries
2025-03-20 12:23:29,285:INFO:Copying training dataset
2025-03-20 12:23:29,292:INFO:Defining folds
2025-03-20 12:23:29,292:INFO:Declaring metric variables
2025-03-20 12:23:29,293:INFO:Importing untrained model
2025-03-20 12:23:29,295:INFO:Elastic Net Imported successfully
2025-03-20 12:23:29,298:INFO:Starting cross validation
2025-03-20 12:23:29,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:33,550:INFO:Calculating mean and std
2025-03-20 12:23:33,551:INFO:Creating metrics dataframe
2025-03-20 12:23:33,552:INFO:Uploading results into container
2025-03-20 12:23:33,552:INFO:Uploading model into container now
2025-03-20 12:23:33,552:INFO:_master_model_container: 4
2025-03-20 12:23:33,553:INFO:_display_container: 2
2025-03-20 12:23:33,553:INFO:ElasticNet(random_state=42)
2025-03-20 12:23:33,553:INFO:create_model() successfully completed......................................
2025-03-20 12:23:33,607:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:33,607:INFO:Creating metrics dataframe
2025-03-20 12:23:33,611:INFO:Initializing Least Angle Regression
2025-03-20 12:23:33,611:INFO:Total runtime is 0.34187261660893764 minutes
2025-03-20 12:23:33,613:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:33,613:INFO:Initializing create_model()
2025-03-20 12:23:33,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:33,613:INFO:Checking exceptions
2025-03-20 12:23:33,613:INFO:Importing libraries
2025-03-20 12:23:33,613:INFO:Copying training dataset
2025-03-20 12:23:33,620:INFO:Defining folds
2025-03-20 12:23:33,620:INFO:Declaring metric variables
2025-03-20 12:23:33,622:INFO:Importing untrained model
2025-03-20 12:23:33,624:INFO:Least Angle Regression Imported successfully
2025-03-20 12:23:33,627:INFO:Starting cross validation
2025-03-20 12:23:33,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:37,557:INFO:Calculating mean and std
2025-03-20 12:23:37,557:INFO:Creating metrics dataframe
2025-03-20 12:23:37,559:INFO:Uploading results into container
2025-03-20 12:23:37,559:INFO:Uploading model into container now
2025-03-20 12:23:37,559:INFO:_master_model_container: 5
2025-03-20 12:23:37,559:INFO:_display_container: 2
2025-03-20 12:23:37,560:INFO:Lars(random_state=42)
2025-03-20 12:23:37,560:INFO:create_model() successfully completed......................................
2025-03-20 12:23:37,611:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:37,612:INFO:Creating metrics dataframe
2025-03-20 12:23:37,616:INFO:Initializing Lasso Least Angle Regression
2025-03-20 12:23:37,616:INFO:Total runtime is 0.4086232463518779 minutes
2025-03-20 12:23:37,618:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:37,618:INFO:Initializing create_model()
2025-03-20 12:23:37,618:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:37,618:INFO:Checking exceptions
2025-03-20 12:23:37,618:INFO:Importing libraries
2025-03-20 12:23:37,618:INFO:Copying training dataset
2025-03-20 12:23:37,625:INFO:Defining folds
2025-03-20 12:23:37,625:INFO:Declaring metric variables
2025-03-20 12:23:37,627:INFO:Importing untrained model
2025-03-20 12:23:37,629:INFO:Lasso Least Angle Regression Imported successfully
2025-03-20 12:23:37,632:INFO:Starting cross validation
2025-03-20 12:23:37,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:41,640:INFO:Calculating mean and std
2025-03-20 12:23:41,641:INFO:Creating metrics dataframe
2025-03-20 12:23:41,642:INFO:Uploading results into container
2025-03-20 12:23:41,642:INFO:Uploading model into container now
2025-03-20 12:23:41,643:INFO:_master_model_container: 6
2025-03-20 12:23:41,643:INFO:_display_container: 2
2025-03-20 12:23:41,643:INFO:LassoLars(random_state=42)
2025-03-20 12:23:41,643:INFO:create_model() successfully completed......................................
2025-03-20 12:23:41,697:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:41,697:INFO:Creating metrics dataframe
2025-03-20 12:23:41,702:INFO:Initializing Orthogonal Matching Pursuit
2025-03-20 12:23:41,702:INFO:Total runtime is 0.4767225662867229 minutes
2025-03-20 12:23:41,703:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:41,704:INFO:Initializing create_model()
2025-03-20 12:23:41,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:41,704:INFO:Checking exceptions
2025-03-20 12:23:41,704:INFO:Importing libraries
2025-03-20 12:23:41,704:INFO:Copying training dataset
2025-03-20 12:23:41,710:INFO:Defining folds
2025-03-20 12:23:41,710:INFO:Declaring metric variables
2025-03-20 12:23:41,712:INFO:Importing untrained model
2025-03-20 12:23:41,714:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 12:23:41,717:INFO:Starting cross validation
2025-03-20 12:23:41,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:45,632:INFO:Calculating mean and std
2025-03-20 12:23:45,633:INFO:Creating metrics dataframe
2025-03-20 12:23:45,634:INFO:Uploading results into container
2025-03-20 12:23:45,634:INFO:Uploading model into container now
2025-03-20 12:23:45,635:INFO:_master_model_container: 7
2025-03-20 12:23:45,635:INFO:_display_container: 2
2025-03-20 12:23:45,635:INFO:OrthogonalMatchingPursuit()
2025-03-20 12:23:45,635:INFO:create_model() successfully completed......................................
2025-03-20 12:23:45,691:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:45,691:INFO:Creating metrics dataframe
2025-03-20 12:23:45,695:INFO:Initializing Bayesian Ridge
2025-03-20 12:23:45,695:INFO:Total runtime is 0.543280331293742 minutes
2025-03-20 12:23:45,697:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:45,697:INFO:Initializing create_model()
2025-03-20 12:23:45,697:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:45,697:INFO:Checking exceptions
2025-03-20 12:23:45,697:INFO:Importing libraries
2025-03-20 12:23:45,698:INFO:Copying training dataset
2025-03-20 12:23:45,704:INFO:Defining folds
2025-03-20 12:23:45,704:INFO:Declaring metric variables
2025-03-20 12:23:45,706:INFO:Importing untrained model
2025-03-20 12:23:45,708:INFO:Bayesian Ridge Imported successfully
2025-03-20 12:23:45,711:INFO:Starting cross validation
2025-03-20 12:23:45,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:49,860:INFO:Calculating mean and std
2025-03-20 12:23:49,861:INFO:Creating metrics dataframe
2025-03-20 12:23:49,862:INFO:Uploading results into container
2025-03-20 12:23:49,862:INFO:Uploading model into container now
2025-03-20 12:23:49,863:INFO:_master_model_container: 8
2025-03-20 12:23:49,863:INFO:_display_container: 2
2025-03-20 12:23:49,863:INFO:BayesianRidge()
2025-03-20 12:23:49,863:INFO:create_model() successfully completed......................................
2025-03-20 12:23:49,918:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:49,918:INFO:Creating metrics dataframe
2025-03-20 12:23:49,922:INFO:Initializing Passive Aggressive Regressor
2025-03-20 12:23:49,922:INFO:Total runtime is 0.6137306491533916 minutes
2025-03-20 12:23:49,924:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:49,924:INFO:Initializing create_model()
2025-03-20 12:23:49,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:49,924:INFO:Checking exceptions
2025-03-20 12:23:49,924:INFO:Importing libraries
2025-03-20 12:23:49,925:INFO:Copying training dataset
2025-03-20 12:23:49,931:INFO:Defining folds
2025-03-20 12:23:49,931:INFO:Declaring metric variables
2025-03-20 12:23:49,932:INFO:Importing untrained model
2025-03-20 12:23:49,934:INFO:Passive Aggressive Regressor Imported successfully
2025-03-20 12:23:49,937:INFO:Starting cross validation
2025-03-20 12:23:49,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:54,010:INFO:Calculating mean and std
2025-03-20 12:23:54,011:INFO:Creating metrics dataframe
2025-03-20 12:23:54,012:INFO:Uploading results into container
2025-03-20 12:23:54,012:INFO:Uploading model into container now
2025-03-20 12:23:54,013:INFO:_master_model_container: 9
2025-03-20 12:23:54,013:INFO:_display_container: 2
2025-03-20 12:23:54,013:INFO:PassiveAggressiveRegressor(random_state=42)
2025-03-20 12:23:54,013:INFO:create_model() successfully completed......................................
2025-03-20 12:23:54,073:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:54,073:INFO:Creating metrics dataframe
2025-03-20 12:23:54,077:INFO:Initializing Huber Regressor
2025-03-20 12:23:54,077:INFO:Total runtime is 0.682985266049703 minutes
2025-03-20 12:23:54,079:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:54,079:INFO:Initializing create_model()
2025-03-20 12:23:54,079:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:54,080:INFO:Checking exceptions
2025-03-20 12:23:54,080:INFO:Importing libraries
2025-03-20 12:23:54,080:INFO:Copying training dataset
2025-03-20 12:23:54,087:INFO:Defining folds
2025-03-20 12:23:54,087:INFO:Declaring metric variables
2025-03-20 12:23:54,089:INFO:Importing untrained model
2025-03-20 12:23:54,091:INFO:Huber Regressor Imported successfully
2025-03-20 12:23:54,095:INFO:Starting cross validation
2025-03-20 12:23:54,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:23:58,425:INFO:Calculating mean and std
2025-03-20 12:23:58,426:INFO:Creating metrics dataframe
2025-03-20 12:23:58,427:INFO:Uploading results into container
2025-03-20 12:23:58,428:INFO:Uploading model into container now
2025-03-20 12:23:58,428:INFO:_master_model_container: 10
2025-03-20 12:23:58,428:INFO:_display_container: 2
2025-03-20 12:23:58,428:INFO:HuberRegressor()
2025-03-20 12:23:58,428:INFO:create_model() successfully completed......................................
2025-03-20 12:23:58,483:INFO:SubProcess create_model() end ==================================
2025-03-20 12:23:58,483:INFO:Creating metrics dataframe
2025-03-20 12:23:58,487:INFO:Initializing K Neighbors Regressor
2025-03-20 12:23:58,488:INFO:Total runtime is 0.7564868807792664 minutes
2025-03-20 12:23:58,490:INFO:SubProcess create_model() called ==================================
2025-03-20 12:23:58,490:INFO:Initializing create_model()
2025-03-20 12:23:58,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:23:58,490:INFO:Checking exceptions
2025-03-20 12:23:58,490:INFO:Importing libraries
2025-03-20 12:23:58,490:INFO:Copying training dataset
2025-03-20 12:23:58,497:INFO:Defining folds
2025-03-20 12:23:58,497:INFO:Declaring metric variables
2025-03-20 12:23:58,498:INFO:Importing untrained model
2025-03-20 12:23:58,500:INFO:K Neighbors Regressor Imported successfully
2025-03-20 12:23:58,503:INFO:Starting cross validation
2025-03-20 12:23:58,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:02,676:INFO:Calculating mean and std
2025-03-20 12:24:02,676:INFO:Creating metrics dataframe
2025-03-20 12:24:02,678:INFO:Uploading results into container
2025-03-20 12:24:02,678:INFO:Uploading model into container now
2025-03-20 12:24:02,678:INFO:_master_model_container: 11
2025-03-20 12:24:02,678:INFO:_display_container: 2
2025-03-20 12:24:02,679:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-20 12:24:02,679:INFO:create_model() successfully completed......................................
2025-03-20 12:24:02,730:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:02,730:INFO:Creating metrics dataframe
2025-03-20 12:24:02,735:INFO:Initializing Decision Tree Regressor
2025-03-20 12:24:02,735:INFO:Total runtime is 0.8272811969121298 minutes
2025-03-20 12:24:02,737:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:02,737:INFO:Initializing create_model()
2025-03-20 12:24:02,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:02,737:INFO:Checking exceptions
2025-03-20 12:24:02,737:INFO:Importing libraries
2025-03-20 12:24:02,737:INFO:Copying training dataset
2025-03-20 12:24:02,743:INFO:Defining folds
2025-03-20 12:24:02,744:INFO:Declaring metric variables
2025-03-20 12:24:02,745:INFO:Importing untrained model
2025-03-20 12:24:02,746:INFO:Decision Tree Regressor Imported successfully
2025-03-20 12:24:02,749:INFO:Starting cross validation
2025-03-20 12:24:02,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:06,964:INFO:Calculating mean and std
2025-03-20 12:24:06,965:INFO:Creating metrics dataframe
2025-03-20 12:24:06,966:INFO:Uploading results into container
2025-03-20 12:24:06,966:INFO:Uploading model into container now
2025-03-20 12:24:06,967:INFO:_master_model_container: 12
2025-03-20 12:24:06,967:INFO:_display_container: 2
2025-03-20 12:24:06,967:INFO:DecisionTreeRegressor(random_state=42)
2025-03-20 12:24:06,967:INFO:create_model() successfully completed......................................
2025-03-20 12:24:07,019:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:07,019:INFO:Creating metrics dataframe
2025-03-20 12:24:07,024:INFO:Initializing Random Forest Regressor
2025-03-20 12:24:07,024:INFO:Total runtime is 0.8987631003061931 minutes
2025-03-20 12:24:07,026:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:07,026:INFO:Initializing create_model()
2025-03-20 12:24:07,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:07,026:INFO:Checking exceptions
2025-03-20 12:24:07,027:INFO:Importing libraries
2025-03-20 12:24:07,027:INFO:Copying training dataset
2025-03-20 12:24:07,033:INFO:Defining folds
2025-03-20 12:24:07,034:INFO:Declaring metric variables
2025-03-20 12:24:07,035:INFO:Importing untrained model
2025-03-20 12:24:07,037:INFO:Random Forest Regressor Imported successfully
2025-03-20 12:24:07,040:INFO:Starting cross validation
2025-03-20 12:24:07,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:12,528:INFO:Calculating mean and std
2025-03-20 12:24:12,529:INFO:Creating metrics dataframe
2025-03-20 12:24:12,530:INFO:Uploading results into container
2025-03-20 12:24:12,530:INFO:Uploading model into container now
2025-03-20 12:24:12,531:INFO:_master_model_container: 13
2025-03-20 12:24:12,531:INFO:_display_container: 2
2025-03-20 12:24:12,531:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-03-20 12:24:12,531:INFO:create_model() successfully completed......................................
2025-03-20 12:24:12,580:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:12,580:INFO:Creating metrics dataframe
2025-03-20 12:24:12,585:INFO:Initializing Extra Trees Regressor
2025-03-20 12:24:12,585:INFO:Total runtime is 0.9914459784825643 minutes
2025-03-20 12:24:12,587:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:12,587:INFO:Initializing create_model()
2025-03-20 12:24:12,587:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:12,587:INFO:Checking exceptions
2025-03-20 12:24:12,587:INFO:Importing libraries
2025-03-20 12:24:12,587:INFO:Copying training dataset
2025-03-20 12:24:12,594:INFO:Defining folds
2025-03-20 12:24:12,594:INFO:Declaring metric variables
2025-03-20 12:24:12,595:INFO:Importing untrained model
2025-03-20 12:24:12,597:INFO:Extra Trees Regressor Imported successfully
2025-03-20 12:24:12,600:INFO:Starting cross validation
2025-03-20 12:24:12,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:17,391:INFO:Calculating mean and std
2025-03-20 12:24:17,392:INFO:Creating metrics dataframe
2025-03-20 12:24:17,393:INFO:Uploading results into container
2025-03-20 12:24:17,394:INFO:Uploading model into container now
2025-03-20 12:24:17,395:INFO:_master_model_container: 14
2025-03-20 12:24:17,395:INFO:_display_container: 2
2025-03-20 12:24:17,395:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-03-20 12:24:17,395:INFO:create_model() successfully completed......................................
2025-03-20 12:24:17,457:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:17,458:INFO:Creating metrics dataframe
2025-03-20 12:24:17,463:INFO:Initializing AdaBoost Regressor
2025-03-20 12:24:17,463:INFO:Total runtime is 1.0727378169695536 minutes
2025-03-20 12:24:17,464:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:17,464:INFO:Initializing create_model()
2025-03-20 12:24:17,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:17,465:INFO:Checking exceptions
2025-03-20 12:24:17,465:INFO:Importing libraries
2025-03-20 12:24:17,465:INFO:Copying training dataset
2025-03-20 12:24:17,472:INFO:Defining folds
2025-03-20 12:24:17,472:INFO:Declaring metric variables
2025-03-20 12:24:17,473:INFO:Importing untrained model
2025-03-20 12:24:17,475:INFO:AdaBoost Regressor Imported successfully
2025-03-20 12:24:17,478:INFO:Starting cross validation
2025-03-20 12:24:17,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:22,057:INFO:Calculating mean and std
2025-03-20 12:24:22,057:INFO:Creating metrics dataframe
2025-03-20 12:24:22,059:INFO:Uploading results into container
2025-03-20 12:24:22,059:INFO:Uploading model into container now
2025-03-20 12:24:22,059:INFO:_master_model_container: 15
2025-03-20 12:24:22,059:INFO:_display_container: 2
2025-03-20 12:24:22,060:INFO:AdaBoostRegressor(random_state=42)
2025-03-20 12:24:22,060:INFO:create_model() successfully completed......................................
2025-03-20 12:24:22,114:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:22,115:INFO:Creating metrics dataframe
2025-03-20 12:24:22,120:INFO:Initializing Gradient Boosting Regressor
2025-03-20 12:24:22,120:INFO:Total runtime is 1.1503577510515848 minutes
2025-03-20 12:24:22,122:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:22,122:INFO:Initializing create_model()
2025-03-20 12:24:22,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:22,122:INFO:Checking exceptions
2025-03-20 12:24:22,122:INFO:Importing libraries
2025-03-20 12:24:22,122:INFO:Copying training dataset
2025-03-20 12:24:22,129:INFO:Defining folds
2025-03-20 12:24:22,129:INFO:Declaring metric variables
2025-03-20 12:24:22,130:INFO:Importing untrained model
2025-03-20 12:24:22,132:INFO:Gradient Boosting Regressor Imported successfully
2025-03-20 12:24:22,136:INFO:Starting cross validation
2025-03-20 12:24:22,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:27,239:INFO:Calculating mean and std
2025-03-20 12:24:27,240:INFO:Creating metrics dataframe
2025-03-20 12:24:27,241:INFO:Uploading results into container
2025-03-20 12:24:27,241:INFO:Uploading model into container now
2025-03-20 12:24:27,242:INFO:_master_model_container: 16
2025-03-20 12:24:27,242:INFO:_display_container: 2
2025-03-20 12:24:27,242:INFO:GradientBoostingRegressor(random_state=42)
2025-03-20 12:24:27,242:INFO:create_model() successfully completed......................................
2025-03-20 12:24:27,316:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:27,316:INFO:Creating metrics dataframe
2025-03-20 12:24:27,321:INFO:Initializing Light Gradient Boosting Machine
2025-03-20 12:24:27,321:INFO:Total runtime is 1.2370502630869546 minutes
2025-03-20 12:24:27,323:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:27,323:INFO:Initializing create_model()
2025-03-20 12:24:27,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:27,324:INFO:Checking exceptions
2025-03-20 12:24:27,324:INFO:Importing libraries
2025-03-20 12:24:27,324:INFO:Copying training dataset
2025-03-20 12:24:27,330:INFO:Defining folds
2025-03-20 12:24:27,330:INFO:Declaring metric variables
2025-03-20 12:24:27,332:INFO:Importing untrained model
2025-03-20 12:24:27,333:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-20 12:24:27,336:INFO:Starting cross validation
2025-03-20 12:24:27,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:34,832:INFO:Calculating mean and std
2025-03-20 12:24:34,833:INFO:Creating metrics dataframe
2025-03-20 12:24:34,834:INFO:Uploading results into container
2025-03-20 12:24:34,834:INFO:Uploading model into container now
2025-03-20 12:24:34,835:INFO:_master_model_container: 17
2025-03-20 12:24:34,835:INFO:_display_container: 2
2025-03-20 12:24:34,835:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-03-20 12:24:34,835:INFO:create_model() successfully completed......................................
2025-03-20 12:24:34,888:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:34,888:INFO:Creating metrics dataframe
2025-03-20 12:24:34,893:INFO:Initializing Dummy Regressor
2025-03-20 12:24:34,893:INFO:Total runtime is 1.3632482965787251 minutes
2025-03-20 12:24:34,895:INFO:SubProcess create_model() called ==================================
2025-03-20 12:24:34,895:INFO:Initializing create_model()
2025-03-20 12:24:34,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x131405630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:34,895:INFO:Checking exceptions
2025-03-20 12:24:34,895:INFO:Importing libraries
2025-03-20 12:24:34,895:INFO:Copying training dataset
2025-03-20 12:24:34,902:INFO:Defining folds
2025-03-20 12:24:34,902:INFO:Declaring metric variables
2025-03-20 12:24:34,903:INFO:Importing untrained model
2025-03-20 12:24:34,905:INFO:Dummy Regressor Imported successfully
2025-03-20 12:24:34,908:INFO:Starting cross validation
2025-03-20 12:24:34,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:24:38,921:INFO:Calculating mean and std
2025-03-20 12:24:38,922:INFO:Creating metrics dataframe
2025-03-20 12:24:38,923:INFO:Uploading results into container
2025-03-20 12:24:38,923:INFO:Uploading model into container now
2025-03-20 12:24:38,924:INFO:_master_model_container: 18
2025-03-20 12:24:38,924:INFO:_display_container: 2
2025-03-20 12:24:38,924:INFO:DummyRegressor()
2025-03-20 12:24:38,924:INFO:create_model() successfully completed......................................
2025-03-20 12:24:38,975:INFO:SubProcess create_model() end ==================================
2025-03-20 12:24:38,976:INFO:Creating metrics dataframe
2025-03-20 12:24:38,985:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-20 12:24:38,989:INFO:Initializing create_model()
2025-03-20 12:24:38,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:38,989:INFO:Checking exceptions
2025-03-20 12:24:38,991:INFO:Importing libraries
2025-03-20 12:24:38,991:INFO:Copying training dataset
2025-03-20 12:24:38,998:INFO:Defining folds
2025-03-20 12:24:38,998:INFO:Declaring metric variables
2025-03-20 12:24:38,998:INFO:Importing untrained model
2025-03-20 12:24:38,998:INFO:Declaring custom model
2025-03-20 12:24:38,998:INFO:Linear Regression Imported successfully
2025-03-20 12:24:39,002:INFO:Cross validation set to False
2025-03-20 12:24:39,002:INFO:Fitting Model
2025-03-20 12:24:39,243:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000520 seconds.
2025-03-20 12:24:39,243:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:24:39,244:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:24:39,244:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 12:24:39,244:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 12:24:39,722:INFO:LinearRegression(n_jobs=-1)
2025-03-20 12:24:39,722:INFO:create_model() successfully completed......................................
2025-03-20 12:24:39,863:INFO:_master_model_container: 18
2025-03-20 12:24:39,863:INFO:_display_container: 2
2025-03-20 12:24:39,864:INFO:LinearRegression(n_jobs=-1)
2025-03-20 12:24:39,864:INFO:compare_models() successfully completed......................................
2025-03-20 12:24:51,328:INFO:Initializing finalize_model()
2025-03-20 12:24:51,328:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 12:24:51,328:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 12:24:51,333:INFO:Initializing create_model()
2025-03-20 12:24:51,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15cf6da20>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:51,333:INFO:Checking exceptions
2025-03-20 12:24:51,334:INFO:Importing libraries
2025-03-20 12:24:51,334:INFO:Copying training dataset
2025-03-20 12:24:51,334:INFO:Defining folds
2025-03-20 12:24:51,334:INFO:Declaring metric variables
2025-03-20 12:24:51,334:INFO:Importing untrained model
2025-03-20 12:24:51,334:INFO:Declaring custom model
2025-03-20 12:24:51,334:INFO:Linear Regression Imported successfully
2025-03-20 12:24:51,338:INFO:Cross validation set to False
2025-03-20 12:24:51,338:INFO:Fitting Model
2025-03-20 12:24:51,587:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000474 seconds.
2025-03-20 12:24:51,587:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:24:51,588:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 12:24:51,588:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 12:24:51,588:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 12:24:52,086:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 12:24:52,086:INFO:create_model() successfully completed......................................
2025-03-20 12:24:52,141:INFO:_master_model_container: 18
2025-03-20 12:24:52,141:INFO:_display_container: 2
2025-03-20 12:24:52,148:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 12:24:52,148:INFO:finalize_model() successfully completed......................................
2025-03-20 12:24:52,246:INFO:Initializing save_model()
2025-03-20 12:24:52,246:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 12:24:52,246:INFO:Adding model into prep_pipe
2025-03-20 12:24:52,246:WARNING:Only Model saved as it was a pipeline.
2025-03-20 12:24:52,276:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 12:24:52,284:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 12:24:52,284:INFO:save_model() successfully completed......................................
2025-03-20 12:24:57,931:INFO:PyCaret RegressionExperiment
2025-03-20 12:24:57,931:INFO:Logging name: reg-default-name
2025-03-20 12:24:57,931:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 12:24:57,931:INFO:version 3.3.2
2025-03-20 12:24:57,931:INFO:Initializing setup()
2025-03-20 12:24:57,931:INFO:self.USI: 9b36
2025-03-20 12:24:57,931:INFO:self._variable_keys: {'exp_name_log', 'html_param', 'fold_groups_param', 'memory', 'y_test', 'data', '_available_plots', 'log_plots_param', 'logging_param', 'y', 'X_train', 'USI', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_generator', 'X_test', 'gpu_n_jobs_param', 'pipeline', 'n_jobs_param', 'y_train', 'target_param', 'seed', 'transform_target_param', 'X', 'gpu_param', 'idx'}
2025-03-20 12:24:57,931:INFO:Checking environment
2025-03-20 12:24:57,931:INFO:python_version: 3.10.16
2025-03-20 12:24:57,931:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 12:24:57,931:INFO:machine: arm64
2025-03-20 12:24:57,931:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 12:24:57,931:INFO:Memory: svmem(total=38654705664, available=12043337728, percent=68.8, used=15931375616, free=72187904, active=11929960448, inactive=11967135744, wired=4001415168)
2025-03-20 12:24:57,931:INFO:Physical Core: 11
2025-03-20 12:24:57,931:INFO:Logical Core: 11
2025-03-20 12:24:57,931:INFO:Checking libraries
2025-03-20 12:24:57,931:INFO:System:
2025-03-20 12:24:57,931:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 12:24:57,931:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 12:24:57,931:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 12:24:57,931:INFO:PyCaret required dependencies:
2025-03-20 12:24:57,932:INFO:                 pip: 25.0
2025-03-20 12:24:57,932:INFO:          setuptools: 77.0.1
2025-03-20 12:24:57,932:INFO:             pycaret: 3.3.2
2025-03-20 12:24:57,932:INFO:             IPython: 8.34.0
2025-03-20 12:24:57,932:INFO:          ipywidgets: 8.1.5
2025-03-20 12:24:57,932:INFO:                tqdm: 4.67.1
2025-03-20 12:24:57,932:INFO:               numpy: 1.26.4
2025-03-20 12:24:57,932:INFO:              pandas: 2.1.4
2025-03-20 12:24:57,932:INFO:              jinja2: 3.1.6
2025-03-20 12:24:57,932:INFO:               scipy: 1.11.4
2025-03-20 12:24:57,932:INFO:              joblib: 1.3.2
2025-03-20 12:24:57,932:INFO:             sklearn: 1.4.2
2025-03-20 12:24:57,932:INFO:                pyod: 2.0.3
2025-03-20 12:24:57,932:INFO:            imblearn: 0.13.0
2025-03-20 12:24:57,932:INFO:   category_encoders: 2.7.0
2025-03-20 12:24:57,932:INFO:            lightgbm: 4.6.0
2025-03-20 12:24:57,932:INFO:               numba: 0.61.0
2025-03-20 12:24:57,932:INFO:            requests: 2.32.3
2025-03-20 12:24:57,932:INFO:          matplotlib: 3.7.5
2025-03-20 12:24:57,932:INFO:          scikitplot: 0.3.7
2025-03-20 12:24:57,932:INFO:         yellowbrick: 1.5
2025-03-20 12:24:57,932:INFO:              plotly: 5.24.1
2025-03-20 12:24:57,932:INFO:    plotly-resampler: Not installed
2025-03-20 12:24:57,932:INFO:             kaleido: 0.2.1
2025-03-20 12:24:57,932:INFO:           schemdraw: 0.15
2025-03-20 12:24:57,932:INFO:         statsmodels: 0.14.4
2025-03-20 12:24:57,932:INFO:              sktime: 0.26.0
2025-03-20 12:24:57,932:INFO:               tbats: 1.1.3
2025-03-20 12:24:57,932:INFO:            pmdarima: 2.0.4
2025-03-20 12:24:57,932:INFO:              psutil: 7.0.0
2025-03-20 12:24:57,932:INFO:          markupsafe: 3.0.2
2025-03-20 12:24:57,932:INFO:             pickle5: Not installed
2025-03-20 12:24:57,932:INFO:         cloudpickle: 3.1.1
2025-03-20 12:24:57,932:INFO:         deprecation: 2.1.0
2025-03-20 12:24:57,932:INFO:              xxhash: 3.5.0
2025-03-20 12:24:57,932:INFO:           wurlitzer: 3.1.1
2025-03-20 12:24:57,932:INFO:PyCaret optional dependencies:
2025-03-20 12:24:57,932:INFO:                shap: Not installed
2025-03-20 12:24:57,932:INFO:           interpret: Not installed
2025-03-20 12:24:57,932:INFO:                umap: Not installed
2025-03-20 12:24:57,932:INFO:     ydata_profiling: Not installed
2025-03-20 12:24:57,932:INFO:  explainerdashboard: Not installed
2025-03-20 12:24:57,932:INFO:             autoviz: Not installed
2025-03-20 12:24:57,932:INFO:           fairlearn: Not installed
2025-03-20 12:24:57,932:INFO:          deepchecks: Not installed
2025-03-20 12:24:57,932:INFO:             xgboost: Not installed
2025-03-20 12:24:57,932:INFO:            catboost: Not installed
2025-03-20 12:24:57,932:INFO:              kmodes: Not installed
2025-03-20 12:24:57,932:INFO:             mlxtend: Not installed
2025-03-20 12:24:57,932:INFO:       statsforecast: Not installed
2025-03-20 12:24:57,932:INFO:        tune_sklearn: Not installed
2025-03-20 12:24:57,932:INFO:                 ray: Not installed
2025-03-20 12:24:57,932:INFO:            hyperopt: Not installed
2025-03-20 12:24:57,932:INFO:              optuna: Not installed
2025-03-20 12:24:57,932:INFO:               skopt: Not installed
2025-03-20 12:24:57,932:INFO:              mlflow: Not installed
2025-03-20 12:24:57,932:INFO:              gradio: Not installed
2025-03-20 12:24:57,932:INFO:             fastapi: Not installed
2025-03-20 12:24:57,932:INFO:             uvicorn: Not installed
2025-03-20 12:24:57,932:INFO:              m2cgen: Not installed
2025-03-20 12:24:57,933:INFO:           evidently: Not installed
2025-03-20 12:24:57,933:INFO:               fugue: Not installed
2025-03-20 12:24:57,933:INFO:           streamlit: 1.43.2
2025-03-20 12:24:57,933:INFO:             prophet: Not installed
2025-03-20 12:24:57,933:INFO:None
2025-03-20 12:24:57,933:INFO:Set up data.
2025-03-20 12:24:57,937:INFO:Set up folding strategy.
2025-03-20 12:24:57,937:INFO:Set up train/test split.
2025-03-20 12:24:57,941:INFO:Set up index.
2025-03-20 12:24:57,941:INFO:Assigning column types.
2025-03-20 12:24:57,946:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 12:24:57,946:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 12:24:57,949:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:24:57,951:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:24:57,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,006:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,008:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,011:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,065:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,065:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 12:24:58,068:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,070:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,101:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,123:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,126:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,128:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,160:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,183:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 12:24:58,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,219:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,300:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 12:24:58,337:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,395:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,417:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,418:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 12:24:58,454:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,512:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 12:24:58,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,535:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 12:24:58,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,656:INFO:Preparing preprocessing pipeline...
2025-03-20 12:24:58,656:INFO:Set up simple imputation.
2025-03-20 12:24:58,656:INFO:Set up removing outliers.
2025-03-20 12:24:58,656:INFO:Set up feature normalization.
2025-03-20 12:24:58,656:INFO:Set up feature selection.
2025-03-20 12:24:58,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,716:INFO:Set up column name cleaning.
2025-03-20 12:24:58,754:INFO:Finished creating preprocessing pipeline.
2025-03-20 12:24:58,760:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 12:24:58,760:INFO:Creating final display dataframe.
2025-03-20 12:24:58,854:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              9b36
2025-03-20 12:24:58,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 12:24:58,977:INFO:setup() successfully completed in 1.05s...............
2025-03-20 12:24:58,978:INFO:Initializing create_model()
2025-03-20 12:24:58,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3279e75e0>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:24:58,978:INFO:Checking exceptions
2025-03-20 12:24:58,985:INFO:Importing libraries
2025-03-20 12:24:58,986:INFO:Copying training dataset
2025-03-20 12:24:58,994:INFO:Defining folds
2025-03-20 12:24:58,994:INFO:Declaring metric variables
2025-03-20 12:24:58,996:INFO:Importing untrained model
2025-03-20 12:24:58,999:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 12:24:59,003:INFO:Starting cross validation
2025-03-20 12:24:59,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 12:25:03,327:INFO:Calculating mean and std
2025-03-20 12:25:03,327:INFO:Creating metrics dataframe
2025-03-20 12:25:03,330:INFO:Finalizing model
2025-03-20 12:25:03,552:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000479 seconds.
2025-03-20 12:25:03,552:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:25:03,552:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 12:25:03,552:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 12:25:03,553:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 12:25:04,039:INFO:Uploading results into container
2025-03-20 12:25:04,039:INFO:Uploading model into container now
2025-03-20 12:25:04,052:INFO:_master_model_container: 1
2025-03-20 12:25:04,053:INFO:_display_container: 2
2025-03-20 12:25:04,056:INFO:OrthogonalMatchingPursuit()
2025-03-20 12:25:04,057:INFO:create_model() successfully completed......................................
2025-03-20 12:25:04,135:INFO:Initializing finalize_model()
2025-03-20 12:25:04,136:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3279e75e0>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 12:25:04,136:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 12:25:04,141:INFO:Initializing create_model()
2025-03-20 12:25:04,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3279e75e0>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 12:25:04,142:INFO:Checking exceptions
2025-03-20 12:25:04,143:INFO:Importing libraries
2025-03-20 12:25:04,143:INFO:Copying training dataset
2025-03-20 12:25:04,145:INFO:Defining folds
2025-03-20 12:25:04,145:INFO:Declaring metric variables
2025-03-20 12:25:04,145:INFO:Importing untrained model
2025-03-20 12:25:04,145:INFO:Declaring custom model
2025-03-20 12:25:04,145:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 12:25:04,150:INFO:Cross validation set to False
2025-03-20 12:25:04,150:INFO:Fitting Model
2025-03-20 12:25:04,431:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000453 seconds.
2025-03-20 12:25:04,431:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 12:25:04,431:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 12:25:04,431:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 12:25:04,432:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 12:25:04,921:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 12:25:04,921:INFO:create_model() successfully completed......................................
2025-03-20 12:25:04,972:INFO:_master_model_container: 1
2025-03-20 12:25:04,972:INFO:_display_container: 2
2025-03-20 12:25:04,979:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 12:25:04,979:INFO:finalize_model() successfully completed......................................
2025-03-20 12:25:05,067:INFO:Initializing save_model()
2025-03-20 12:25:05,068:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 12:25:05,068:INFO:Adding model into prep_pipe
2025-03-20 12:25:05,068:WARNING:Only Model saved as it was a pipeline.
2025-03-20 12:25:05,104:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 12:25:05,110:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 12:25:05,110:INFO:save_model() successfully completed......................................
2025-03-20 12:31:53,870:INFO:Initializing load_model()
2025-03-20 12:31:53,871:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:04,673:INFO:Initializing load_model()
2025-03-20 12:32:04,673:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:07,216:INFO:Initializing load_model()
2025-03-20 12:32:07,216:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:07,284:INFO:Initializing predict_model()
2025-03-20 12:32:07,284:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32cac5d20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32cd7d240>)
2025-03-20 12:32:07,285:INFO:Checking exceptions
2025-03-20 12:32:07,285:INFO:Preloading libraries
2025-03-20 12:32:07,285:INFO:Set up data.
2025-03-20 12:32:07,288:INFO:Set up index.
2025-03-20 12:32:21,292:INFO:Initializing load_model()
2025-03-20 12:32:21,292:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:24,095:INFO:Initializing load_model()
2025-03-20 12:32:24,095:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:27,453:INFO:Initializing load_model()
2025-03-20 12:32:27,454:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:29,422:INFO:Initializing load_model()
2025-03-20 12:32:29,422:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:36,038:INFO:Initializing load_model()
2025-03-20 12:32:36,039:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:36,654:INFO:Initializing load_model()
2025-03-20 12:32:36,654:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:37,180:INFO:Initializing load_model()
2025-03-20 12:32:37,180:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:39,789:INFO:Initializing load_model()
2025-03-20 12:32:39,789:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:40,805:INFO:Initializing load_model()
2025-03-20 12:32:40,805:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:40,848:INFO:Initializing predict_model()
2025-03-20 12:32:40,849:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x104d88310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3021d1480>)
2025-03-20 12:32:40,849:INFO:Checking exceptions
2025-03-20 12:32:40,849:INFO:Preloading libraries
2025-03-20 12:32:40,849:INFO:Set up data.
2025-03-20 12:32:40,850:INFO:Set up index.
2025-03-20 12:32:50,154:INFO:Initializing load_model()
2025-03-20 12:32:50,155:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:51,489:INFO:Initializing load_model()
2025-03-20 12:32:51,489:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:32:51,529:INFO:Initializing predict_model()
2025-03-20 12:32:51,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32ca449a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3021d2680>)
2025-03-20 12:32:51,529:INFO:Checking exceptions
2025-03-20 12:32:51,529:INFO:Preloading libraries
2025-03-20 12:32:51,529:INFO:Set up data.
2025-03-20 12:32:51,532:INFO:Set up index.
2025-03-20 12:33:41,414:INFO:Initializing load_model()
2025-03-20 12:33:41,414:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:33:45,966:INFO:Initializing load_model()
2025-03-20 12:33:45,966:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:33:46,045:INFO:Initializing load_model()
2025-03-20 12:33:46,045:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:33:46,078:INFO:Initializing predict_model()
2025-03-20 12:33:46,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x104d880d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32cd7d240>)
2025-03-20 12:33:46,078:INFO:Checking exceptions
2025-03-20 12:33:46,079:INFO:Preloading libraries
2025-03-20 12:33:46,079:INFO:Set up data.
2025-03-20 12:33:46,081:INFO:Set up index.
2025-03-20 12:33:50,960:INFO:Initializing load_model()
2025-03-20 12:33:50,960:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:33:52,163:INFO:Initializing load_model()
2025-03-20 12:33:52,164:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:33:52,204:INFO:Initializing predict_model()
2025-03-20 12:33:52,204:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x302231510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32cd7eef0>)
2025-03-20 12:33:52,204:INFO:Checking exceptions
2025-03-20 12:33:52,204:INFO:Preloading libraries
2025-03-20 12:33:52,205:INFO:Set up data.
2025-03-20 12:33:52,206:INFO:Set up index.
2025-03-20 12:38:24,017:INFO:Initializing load_model()
2025-03-20 12:38:24,017:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:38:25,452:INFO:Initializing load_model()
2025-03-20 12:38:25,452:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:38:25,481:INFO:Initializing predict_model()
2025-03-20 12:38:25,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x302230e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ca17d90>)
2025-03-20 12:38:25,481:INFO:Checking exceptions
2025-03-20 12:38:25,482:INFO:Preloading libraries
2025-03-20 12:38:25,482:INFO:Set up data.
2025-03-20 12:38:25,483:INFO:Set up index.
2025-03-20 12:38:39,160:INFO:Initializing load_model()
2025-03-20 12:38:39,160:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:38:41,261:INFO:Initializing load_model()
2025-03-20 12:38:41,261:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:43:52,776:INFO:Initializing load_model()
2025-03-20 12:43:52,777:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:46:31,810:INFO:Initializing load_model()
2025-03-20 12:46:31,810:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:46:34,119:INFO:Initializing load_model()
2025-03-20 12:46:34,120:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:48:49,239:INFO:Initializing load_model()
2025-03-20 12:48:49,239:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:49:07,378:INFO:Initializing load_model()
2025-03-20 12:49:07,378:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:49:08,609:INFO:Initializing load_model()
2025-03-20 12:49:08,609:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:49:10,307:INFO:Initializing load_model()
2025-03-20 12:49:10,308:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:49:31,666:INFO:Initializing load_model()
2025-03-20 12:49:31,666:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:49:59,475:INFO:Initializing load_model()
2025-03-20 12:49:59,475:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:51:29,436:INFO:Initializing load_model()
2025-03-20 12:51:29,438:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:55:07,898:INFO:Initializing load_model()
2025-03-20 12:55:07,898:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:55:58,436:INFO:Initializing load_model()
2025-03-20 12:55:58,436:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:56:00,234:INFO:Initializing load_model()
2025-03-20 12:56:00,234:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 12:58:06,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:58:06,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:58:06,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:58:06,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 12:58:06,794:INFO:Initializing load_model()
2025-03-20 12:58:06,794:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 12:58:14,449:INFO:Initializing load_model()
2025-03-20 12:58:14,449:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 13:00:00,450:INFO:Initializing load_model()
2025-03-20 13:00:00,450:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 13:00:21,508:INFO:Initializing load_model()
2025-03-20 13:00:21,508:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 13:01:00,745:INFO:Initializing load_model()
2025-03-20 13:01:00,745:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 13:01:07,509:INFO:Initializing load_model()
2025-03-20 13:01:07,509:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 13:01:32,792:INFO:Initializing predict_model()
2025-03-20 13:01:32,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32d9bd720>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x104c5fb50>)
2025-03-20 13:01:32,792:INFO:Checking exceptions
2025-03-20 13:01:32,792:INFO:Preloading libraries
2025-03-20 13:01:32,792:INFO:Set up data.
2025-03-20 13:01:32,796:INFO:Set up index.
2025-03-20 13:09:16,603:INFO:Initializing load_model()
2025-03-20 13:09:16,603:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 13:09:20,321:INFO:Initializing load_model()
2025-03-20 13:09:20,321:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 13:10:19,175:INFO:Initializing load_model()
2025-03-20 13:10:19,175:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 13:10:32,742:INFO:Initializing load_model()
2025-03-20 13:10:32,742:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 13:19:17,530:INFO:Initializing load_model()
2025-03-20 13:19:17,530:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 19:37:54,669:INFO:Initializing load_model()
2025-03-20 19:37:54,669:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 19:41:37,480:INFO:Initializing load_model()
2025-03-20 19:41:37,480:INFO:load_model(model_name=/mnt/data/halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 19:46:41,781:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 19:46:41,781:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 19:46:41,781:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 19:46:41,781:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 19:46:41,956:INFO:Initializing load_model()
2025-03-20 19:46:41,956:INFO:load_model(model_name=/mnt/data/halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:47:25,278:INFO:Initializing load_model()
2025-03-20 19:47:25,278:INFO:load_model(model_name=/mnt/data/halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:47:58,294:INFO:Initializing load_model()
2025-03-20 19:47:58,295:INFO:load_model(model_name=/mnt/data/halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:49:05,898:INFO:Initializing load_model()
2025-03-20 19:49:05,898:INFO:load_model(model_name=/mnt/data/halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:51:31,319:INFO:Initializing load_model()
2025-03-20 19:51:31,319:INFO:load_model(model_name=/mnt/data/halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:51:55,478:INFO:Initializing load_model()
2025-03-20 19:51:55,478:INFO:load_model(model_name=/mnt/data/halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:52:03,863:INFO:Initializing load_model()
2025-03-20 19:52:03,863:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:52:08,538:INFO:Initializing load_model()
2025-03-20 19:52:08,538:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:52:08,575:INFO:Initializing predict_model()
2025-03-20 19:52:08,575:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e502ef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32e51c0d0>)
2025-03-20 19:52:08,575:INFO:Checking exceptions
2025-03-20 19:52:08,575:INFO:Preloading libraries
2025-03-20 19:52:08,575:INFO:Set up data.
2025-03-20 19:52:08,577:INFO:Set up index.
2025-03-20 19:52:23,108:INFO:Initializing load_model()
2025-03-20 19:52:23,109:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:52:25,794:INFO:Initializing load_model()
2025-03-20 19:52:25,794:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:52:25,833:INFO:Initializing predict_model()
2025-03-20 19:52:25,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e502740>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ea12c20>)
2025-03-20 19:52:25,833:INFO:Checking exceptions
2025-03-20 19:52:25,833:INFO:Preloading libraries
2025-03-20 19:52:25,833:INFO:Set up data.
2025-03-20 19:52:25,835:INFO:Set up index.
2025-03-20 19:53:48,661:INFO:Initializing load_model()
2025-03-20 19:53:48,661:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 19:53:50,073:INFO:Initializing load_model()
2025-03-20 19:53:50,073:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:03,599:INFO:Initializing load_model()
2025-03-20 19:54:03,599:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:08,766:INFO:Initializing load_model()
2025-03-20 19:54:08,766:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:08,776:INFO:Initializing load_model()
2025-03-20 19:54:08,777:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:10,835:INFO:Initializing load_model()
2025-03-20 19:54:10,835:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:10,873:INFO:Initializing predict_model()
2025-03-20 19:54:10,873:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e495b10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1072a4700>)
2025-03-20 19:54:10,873:INFO:Checking exceptions
2025-03-20 19:54:10,873:INFO:Preloading libraries
2025-03-20 19:54:10,873:INFO:Set up data.
2025-03-20 19:54:10,875:INFO:Set up index.
2025-03-20 19:54:36,741:INFO:Initializing load_model()
2025-03-20 19:54:36,741:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:47,012:INFO:Initializing load_model()
2025-03-20 19:54:47,012:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:54:53,723:INFO:Initializing load_model()
2025-03-20 19:54:53,724:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:02,863:INFO:Initializing load_model()
2025-03-20 19:55:02,863:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:04,087:INFO:Initializing load_model()
2025-03-20 19:55:04,087:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:05,122:INFO:Initializing load_model()
2025-03-20 19:55:05,122:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:05,529:INFO:Initializing load_model()
2025-03-20 19:55:05,529:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:05,644:INFO:Initializing load_model()
2025-03-20 19:55:05,644:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:05,675:INFO:Initializing predict_model()
2025-03-20 19:55:05,675:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e496140>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ea112d0>)
2025-03-20 19:55:05,675:INFO:Checking exceptions
2025-03-20 19:55:05,675:INFO:Preloading libraries
2025-03-20 19:55:05,675:INFO:Set up data.
2025-03-20 19:55:05,677:INFO:Set up index.
2025-03-20 19:55:19,757:INFO:Initializing load_model()
2025-03-20 19:55:19,757:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:22,292:INFO:Initializing load_model()
2025-03-20 19:55:22,292:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:55:22,328:INFO:Initializing predict_model()
2025-03-20 19:55:22,328:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e496620>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32ea12170>)
2025-03-20 19:55:22,328:INFO:Checking exceptions
2025-03-20 19:55:22,328:INFO:Preloading libraries
2025-03-20 19:55:22,328:INFO:Set up data.
2025-03-20 19:55:22,330:INFO:Set up index.
2025-03-20 19:58:13,895:INFO:Initializing load_model()
2025-03-20 19:58:13,895:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:13,986:INFO:Initializing load_model()
2025-03-20 19:58:13,986:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:18,884:INFO:Initializing load_model()
2025-03-20 19:58:18,884:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:18,979:INFO:Initializing load_model()
2025-03-20 19:58:18,979:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:19,010:INFO:Initializing predict_model()
2025-03-20 19:58:19,010:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e494b20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f7f0>)
2025-03-20 19:58:19,011:INFO:Checking exceptions
2025-03-20 19:58:19,011:INFO:Preloading libraries
2025-03-20 19:58:19,011:INFO:Set up data.
2025-03-20 19:58:19,012:INFO:Set up index.
2025-03-20 19:58:36,366:INFO:Initializing load_model()
2025-03-20 19:58:36,366:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:37,991:INFO:Initializing load_model()
2025-03-20 19:58:37,991:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:38,025:INFO:Initializing predict_model()
2025-03-20 19:58:38,025:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e84f9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f5b0>)
2025-03-20 19:58:38,025:INFO:Checking exceptions
2025-03-20 19:58:38,025:INFO:Preloading libraries
2025-03-20 19:58:38,025:INFO:Set up data.
2025-03-20 19:58:38,026:INFO:Set up index.
2025-03-20 19:58:48,306:INFO:Initializing load_model()
2025-03-20 19:58:48,307:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 19:58:50,299:INFO:Initializing predict_model()
2025-03-20 19:58:50,299:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e875510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f6d0>)
2025-03-20 19:58:50,299:INFO:Checking exceptions
2025-03-20 19:58:50,299:INFO:Preloading libraries
2025-03-20 19:58:50,300:INFO:Set up data.
2025-03-20 19:58:50,302:INFO:Set up index.
2025-03-20 20:00:41,270:INFO:Initializing load_model()
2025-03-20 20:00:41,270:INFO:load_model(model_name=halfmarathon_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-20 20:00:51,645:INFO:Initializing load_model()
2025-03-20 20:00:51,645:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 20:00:53,193:INFO:Initializing predict_model()
2025-03-20 20:00:53,193:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46a8f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725ef80>)
2025-03-20 20:00:53,193:INFO:Checking exceptions
2025-03-20 20:00:53,194:INFO:Preloading libraries
2025-03-20 20:00:53,194:INFO:Set up data.
2025-03-20 20:00:53,195:INFO:Set up index.
2025-03-20 20:01:29,155:INFO:Initializing predict_model()
2025-03-20 20:01:29,156:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46bbb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1072a4160>)
2025-03-20 20:01:29,156:INFO:Checking exceptions
2025-03-20 20:01:29,156:INFO:Preloading libraries
2025-03-20 20:01:29,156:INFO:Set up data.
2025-03-20 20:01:29,158:INFO:Set up index.
2025-03-20 20:01:50,875:INFO:Initializing predict_model()
2025-03-20 20:01:50,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e468c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f2e0>)
2025-03-20 20:01:50,875:INFO:Checking exceptions
2025-03-20 20:01:50,875:INFO:Preloading libraries
2025-03-20 20:01:50,876:INFO:Set up data.
2025-03-20 20:01:50,878:INFO:Set up index.
2025-03-20 20:01:53,370:INFO:Initializing predict_model()
2025-03-20 20:01:53,370:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46ad40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725fd90>)
2025-03-20 20:01:53,371:INFO:Checking exceptions
2025-03-20 20:01:53,371:INFO:Preloading libraries
2025-03-20 20:01:53,371:INFO:Set up data.
2025-03-20 20:01:53,373:INFO:Set up index.
2025-03-20 20:01:56,926:INFO:Initializing predict_model()
2025-03-20 20:01:56,926:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46b460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725fa30>)
2025-03-20 20:01:56,926:INFO:Checking exceptions
2025-03-20 20:01:56,927:INFO:Preloading libraries
2025-03-20 20:01:56,927:INFO:Set up data.
2025-03-20 20:01:56,929:INFO:Set up index.
2025-03-20 20:02:11,896:INFO:Initializing predict_model()
2025-03-20 20:02:11,896:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46abc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f250>)
2025-03-20 20:02:11,896:INFO:Checking exceptions
2025-03-20 20:02:11,896:INFO:Preloading libraries
2025-03-20 20:02:11,897:INFO:Set up data.
2025-03-20 20:02:11,899:INFO:Set up index.
2025-03-20 20:02:18,673:INFO:Initializing predict_model()
2025-03-20 20:02:18,674:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e469210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f1c0>)
2025-03-20 20:02:18,674:INFO:Checking exceptions
2025-03-20 20:02:18,674:INFO:Preloading libraries
2025-03-20 20:02:18,674:INFO:Set up data.
2025-03-20 20:02:18,676:INFO:Set up index.
2025-03-20 20:02:21,463:INFO:Initializing predict_model()
2025-03-20 20:02:21,463:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46a680>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f250>)
2025-03-20 20:02:21,463:INFO:Checking exceptions
2025-03-20 20:02:21,463:INFO:Preloading libraries
2025-03-20 20:02:21,463:INFO:Set up data.
2025-03-20 20:02:21,465:INFO:Set up index.
2025-03-20 20:11:32,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:11:32,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:11:32,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:11:32,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:11:36,417:INFO:PyCaret RegressionExperiment
2025-03-20 20:11:36,417:INFO:Logging name: reg-default-name
2025-03-20 20:11:36,417:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 20:11:36,417:INFO:version 3.3.2
2025-03-20 20:11:36,417:INFO:Initializing setup()
2025-03-20 20:11:36,417:INFO:self.USI: eacf
2025-03-20 20:11:36,417:INFO:self._variable_keys: {'y_train', 'log_plots_param', 'pipeline', 'X', 'html_param', 'exp_name_log', 'gpu_n_jobs_param', 'USI', 'X_train', 'seed', 'logging_param', 'fold_groups_param', 'target_param', 'fold_shuffle_param', 'y', 'memory', '_ml_usecase', '_available_plots', 'transform_target_param', 'idx', 'fold_generator', 'n_jobs_param', 'X_test', 'exp_id', 'data', 'y_test', 'gpu_param'}
2025-03-20 20:11:36,417:INFO:Checking environment
2025-03-20 20:11:36,417:INFO:python_version: 3.10.16
2025-03-20 20:11:36,417:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 20:11:36,417:INFO:machine: arm64
2025-03-20 20:11:36,417:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 20:11:36,417:INFO:Memory: svmem(total=38654705664, available=13521174528, percent=65.0, used=16508747776, free=71647232, active=13461929984, inactive=13390970880, wired=3046817792)
2025-03-20 20:11:36,417:INFO:Physical Core: 11
2025-03-20 20:11:36,417:INFO:Logical Core: 11
2025-03-20 20:11:36,417:INFO:Checking libraries
2025-03-20 20:11:36,417:INFO:System:
2025-03-20 20:11:36,417:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 20:11:36,417:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 20:11:36,417:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 20:11:36,417:INFO:PyCaret required dependencies:
2025-03-20 20:11:36,466:INFO:                 pip: 25.0
2025-03-20 20:11:36,466:INFO:          setuptools: 77.0.1
2025-03-20 20:11:36,466:INFO:             pycaret: 3.3.2
2025-03-20 20:11:36,466:INFO:             IPython: 8.34.0
2025-03-20 20:11:36,466:INFO:          ipywidgets: 8.1.5
2025-03-20 20:11:36,466:INFO:                tqdm: 4.67.1
2025-03-20 20:11:36,466:INFO:               numpy: 1.26.4
2025-03-20 20:11:36,466:INFO:              pandas: 2.1.4
2025-03-20 20:11:36,466:INFO:              jinja2: 3.1.6
2025-03-20 20:11:36,466:INFO:               scipy: 1.11.4
2025-03-20 20:11:36,466:INFO:              joblib: 1.3.2
2025-03-20 20:11:36,466:INFO:             sklearn: 1.4.2
2025-03-20 20:11:36,466:INFO:                pyod: 2.0.3
2025-03-20 20:11:36,466:INFO:            imblearn: 0.13.0
2025-03-20 20:11:36,466:INFO:   category_encoders: 2.7.0
2025-03-20 20:11:36,466:INFO:            lightgbm: 4.6.0
2025-03-20 20:11:36,466:INFO:               numba: 0.61.0
2025-03-20 20:11:36,466:INFO:            requests: 2.32.3
2025-03-20 20:11:36,466:INFO:          matplotlib: 3.7.5
2025-03-20 20:11:36,466:INFO:          scikitplot: 0.3.7
2025-03-20 20:11:36,466:INFO:         yellowbrick: 1.5
2025-03-20 20:11:36,466:INFO:              plotly: 5.24.1
2025-03-20 20:11:36,466:INFO:    plotly-resampler: Not installed
2025-03-20 20:11:36,466:INFO:             kaleido: 0.2.1
2025-03-20 20:11:36,466:INFO:           schemdraw: 0.15
2025-03-20 20:11:36,466:INFO:         statsmodels: 0.14.4
2025-03-20 20:11:36,466:INFO:              sktime: 0.26.0
2025-03-20 20:11:36,466:INFO:               tbats: 1.1.3
2025-03-20 20:11:36,467:INFO:            pmdarima: 2.0.4
2025-03-20 20:11:36,467:INFO:              psutil: 7.0.0
2025-03-20 20:11:36,467:INFO:          markupsafe: 3.0.2
2025-03-20 20:11:36,467:INFO:             pickle5: Not installed
2025-03-20 20:11:36,467:INFO:         cloudpickle: 3.1.1
2025-03-20 20:11:36,467:INFO:         deprecation: 2.1.0
2025-03-20 20:11:36,467:INFO:              xxhash: 3.5.0
2025-03-20 20:11:36,467:INFO:           wurlitzer: 3.1.1
2025-03-20 20:11:36,467:INFO:PyCaret optional dependencies:
2025-03-20 20:11:36,474:INFO:                shap: Not installed
2025-03-20 20:11:36,474:INFO:           interpret: Not installed
2025-03-20 20:11:36,474:INFO:                umap: Not installed
2025-03-20 20:11:36,474:INFO:     ydata_profiling: Not installed
2025-03-20 20:11:36,474:INFO:  explainerdashboard: Not installed
2025-03-20 20:11:36,474:INFO:             autoviz: Not installed
2025-03-20 20:11:36,474:INFO:           fairlearn: Not installed
2025-03-20 20:11:36,474:INFO:          deepchecks: Not installed
2025-03-20 20:11:36,474:INFO:             xgboost: Not installed
2025-03-20 20:11:36,474:INFO:            catboost: Not installed
2025-03-20 20:11:36,474:INFO:              kmodes: Not installed
2025-03-20 20:11:36,474:INFO:             mlxtend: Not installed
2025-03-20 20:11:36,474:INFO:       statsforecast: Not installed
2025-03-20 20:11:36,474:INFO:        tune_sklearn: Not installed
2025-03-20 20:11:36,474:INFO:                 ray: Not installed
2025-03-20 20:11:36,474:INFO:            hyperopt: Not installed
2025-03-20 20:11:36,474:INFO:              optuna: Not installed
2025-03-20 20:11:36,474:INFO:               skopt: Not installed
2025-03-20 20:11:36,474:INFO:              mlflow: Not installed
2025-03-20 20:11:36,474:INFO:              gradio: Not installed
2025-03-20 20:11:36,474:INFO:             fastapi: Not installed
2025-03-20 20:11:36,474:INFO:             uvicorn: Not installed
2025-03-20 20:11:36,474:INFO:              m2cgen: Not installed
2025-03-20 20:11:36,474:INFO:           evidently: Not installed
2025-03-20 20:11:36,474:INFO:               fugue: Not installed
2025-03-20 20:11:36,474:INFO:           streamlit: 1.43.2
2025-03-20 20:11:36,474:INFO:             prophet: Not installed
2025-03-20 20:11:36,474:INFO:None
2025-03-20 20:11:36,474:INFO:Set up data.
2025-03-20 20:11:36,478:INFO:Set up folding strategy.
2025-03-20 20:11:36,479:INFO:Set up train/test split.
2025-03-20 20:11:36,483:INFO:Set up index.
2025-03-20 20:11:36,483:INFO:Assigning column types.
2025-03-20 20:11:36,486:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 20:11:36,486:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,489:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,491:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,524:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,546:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,547:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,549:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,552:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,583:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,606:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 20:11:36,608:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,610:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,642:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,664:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,667:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,669:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,701:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,724:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 20:11:36,728:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,787:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,818:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,840:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 20:11:36,878:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,936:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,958:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:11:36,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:36,958:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 20:11:36,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:37,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:11:37,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,075:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 20:11:37,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,192:INFO:Preparing preprocessing pipeline...
2025-03-20 20:11:37,192:INFO:Set up simple imputation.
2025-03-20 20:11:37,192:INFO:Set up removing outliers.
2025-03-20 20:11:37,192:INFO:Set up feature normalization.
2025-03-20 20:11:37,192:INFO:Set up feature selection.
2025-03-20 20:11:37,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,251:INFO:Set up column name cleaning.
2025-03-20 20:11:37,287:INFO:Finished creating preprocessing pipeline.
2025-03-20 20:11:37,294:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 20:11:37,294:INFO:Creating final display dataframe.
2025-03-20 20:11:37,382:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              eacf
2025-03-20 20:11:37,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:37,504:INFO:setup() successfully completed in 1.09s...............
2025-03-20 20:11:40,541:INFO:gpu_param set to False
2025-03-20 20:11:40,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:40,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:40,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:40,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:11:42,208:INFO:Initializing compare_models()
2025-03-20 20:11:42,208:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-20 20:11:42,208:INFO:Checking exceptions
2025-03-20 20:11:42,214:INFO:Preparing display monitor
2025-03-20 20:11:42,246:INFO:Initializing Linear Regression
2025-03-20 20:11:42,246:INFO:Total runtime is 3.6001205444335937e-06 minutes
2025-03-20 20:11:42,248:INFO:SubProcess create_model() called ==================================
2025-03-20 20:11:42,248:INFO:Initializing create_model()
2025-03-20 20:11:42,248:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:11:42,248:INFO:Checking exceptions
2025-03-20 20:11:42,248:INFO:Importing libraries
2025-03-20 20:11:42,249:INFO:Copying training dataset
2025-03-20 20:11:42,260:INFO:Defining folds
2025-03-20 20:11:42,261:INFO:Declaring metric variables
2025-03-20 20:11:42,262:INFO:Importing untrained model
2025-03-20 20:11:42,265:INFO:Linear Regression Imported successfully
2025-03-20 20:11:42,269:INFO:Starting cross validation
2025-03-20 20:11:42,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:11:45,065:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001708 seconds.
2025-03-20 20:11:45,066:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,066:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:11:45,066:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 20:11:45,066:INFO:[LightGBM] [Info] Start training from score 7341.090685
2025-03-20 20:11:45,415:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001412 seconds.
2025-03-20 20:11:45,415:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,415:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:11:45,415:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 20:11:45,416:INFO:[LightGBM] [Info] Start training from score 7343.422373
2025-03-20 20:11:45,631:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001072 seconds.
2025-03-20 20:11:45,631:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,632:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:11:45,632:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,633:INFO:[LightGBM] [Info] Start training from score 7347.301409
2025-03-20 20:11:45,657:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002696 seconds.
2025-03-20 20:11:45,658:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,659:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:11:45,659:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,660:INFO:[LightGBM] [Info] Start training from score 7335.329512
2025-03-20 20:11:45,678:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003066 seconds.
2025-03-20 20:11:45,678:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,679:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:11:45,680:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,681:INFO:[LightGBM] [Info] Start training from score 7346.140116
2025-03-20 20:11:45,702:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002366 seconds.
2025-03-20 20:11:45,703:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 20:11:45,703:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 20:11:45,703:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:11:45,703:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,704:INFO:[LightGBM] [Info] Start training from score 7341.151421
2025-03-20 20:11:45,748:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002271 seconds.
2025-03-20 20:11:45,748:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 20:11:45,748:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 20:11:45,748:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:11:45,748:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,755:INFO:[LightGBM] [Info] Start training from score 7337.208662
2025-03-20 20:11:45,780:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.008234 seconds.
2025-03-20 20:11:45,781:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,782:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:11:45,784:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,788:INFO:[LightGBM] [Info] Start training from score 7348.947934
2025-03-20 20:11:45,887:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000799 seconds.
2025-03-20 20:11:45,887:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,887:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:11:45,887:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,893:INFO:[LightGBM] [Info] Start training from score 7351.855824
2025-03-20 20:11:45,932:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000658 seconds.
2025-03-20 20:11:45,932:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:11:45,932:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:11:45,932:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:11:45,932:INFO:[LightGBM] [Info] Start training from score 7334.950880
2025-03-20 20:11:49,286:INFO:Calculating mean and std
2025-03-20 20:11:49,288:INFO:Creating metrics dataframe
2025-03-20 20:11:49,291:INFO:Uploading results into container
2025-03-20 20:11:49,291:INFO:Uploading model into container now
2025-03-20 20:11:49,292:INFO:_master_model_container: 1
2025-03-20 20:11:49,292:INFO:_display_container: 2
2025-03-20 20:11:49,293:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:11:49,293:INFO:create_model() successfully completed......................................
2025-03-20 20:11:49,360:INFO:SubProcess create_model() end ==================================
2025-03-20 20:11:49,360:INFO:Creating metrics dataframe
2025-03-20 20:11:49,364:INFO:Initializing Lasso Regression
2025-03-20 20:11:49,364:INFO:Total runtime is 0.11863454977671305 minutes
2025-03-20 20:11:49,366:INFO:SubProcess create_model() called ==================================
2025-03-20 20:11:49,366:INFO:Initializing create_model()
2025-03-20 20:11:49,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:11:49,366:INFO:Checking exceptions
2025-03-20 20:11:49,366:INFO:Importing libraries
2025-03-20 20:11:49,366:INFO:Copying training dataset
2025-03-20 20:11:49,373:INFO:Defining folds
2025-03-20 20:11:49,373:INFO:Declaring metric variables
2025-03-20 20:11:49,375:INFO:Importing untrained model
2025-03-20 20:11:49,376:INFO:Lasso Regression Imported successfully
2025-03-20 20:11:49,381:INFO:Starting cross validation
2025-03-20 20:11:49,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:11:53,931:INFO:Calculating mean and std
2025-03-20 20:11:53,931:INFO:Creating metrics dataframe
2025-03-20 20:11:53,933:INFO:Uploading results into container
2025-03-20 20:11:53,933:INFO:Uploading model into container now
2025-03-20 20:11:53,933:INFO:_master_model_container: 2
2025-03-20 20:11:53,934:INFO:_display_container: 2
2025-03-20 20:11:53,934:INFO:Lasso(random_state=42)
2025-03-20 20:11:53,934:INFO:create_model() successfully completed......................................
2025-03-20 20:11:53,989:INFO:SubProcess create_model() end ==================================
2025-03-20 20:11:53,989:INFO:Creating metrics dataframe
2025-03-20 20:11:53,993:INFO:Initializing Ridge Regression
2025-03-20 20:11:53,993:INFO:Total runtime is 0.19577943483988441 minutes
2025-03-20 20:11:53,995:INFO:SubProcess create_model() called ==================================
2025-03-20 20:11:53,995:INFO:Initializing create_model()
2025-03-20 20:11:53,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:11:53,995:INFO:Checking exceptions
2025-03-20 20:11:53,995:INFO:Importing libraries
2025-03-20 20:11:53,995:INFO:Copying training dataset
2025-03-20 20:11:54,002:INFO:Defining folds
2025-03-20 20:11:54,002:INFO:Declaring metric variables
2025-03-20 20:11:54,004:INFO:Importing untrained model
2025-03-20 20:11:54,005:INFO:Ridge Regression Imported successfully
2025-03-20 20:11:54,009:INFO:Starting cross validation
2025-03-20 20:11:54,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:11:57,986:INFO:Calculating mean and std
2025-03-20 20:11:57,987:INFO:Creating metrics dataframe
2025-03-20 20:11:57,988:INFO:Uploading results into container
2025-03-20 20:11:57,989:INFO:Uploading model into container now
2025-03-20 20:11:57,989:INFO:_master_model_container: 3
2025-03-20 20:11:57,990:INFO:_display_container: 2
2025-03-20 20:11:57,990:INFO:Ridge(random_state=42)
2025-03-20 20:11:57,990:INFO:create_model() successfully completed......................................
2025-03-20 20:11:58,040:INFO:SubProcess create_model() end ==================================
2025-03-20 20:11:58,040:INFO:Creating metrics dataframe
2025-03-20 20:11:58,044:INFO:Initializing Elastic Net
2025-03-20 20:11:58,044:INFO:Total runtime is 0.2632989009221395 minutes
2025-03-20 20:11:58,046:INFO:SubProcess create_model() called ==================================
2025-03-20 20:11:58,046:INFO:Initializing create_model()
2025-03-20 20:11:58,046:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:11:58,046:INFO:Checking exceptions
2025-03-20 20:11:58,046:INFO:Importing libraries
2025-03-20 20:11:58,046:INFO:Copying training dataset
2025-03-20 20:11:58,053:INFO:Defining folds
2025-03-20 20:11:58,053:INFO:Declaring metric variables
2025-03-20 20:11:58,054:INFO:Importing untrained model
2025-03-20 20:11:58,056:INFO:Elastic Net Imported successfully
2025-03-20 20:11:58,060:INFO:Starting cross validation
2025-03-20 20:11:58,064:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:02,174:INFO:Calculating mean and std
2025-03-20 20:12:02,175:INFO:Creating metrics dataframe
2025-03-20 20:12:02,176:INFO:Uploading results into container
2025-03-20 20:12:02,176:INFO:Uploading model into container now
2025-03-20 20:12:02,177:INFO:_master_model_container: 4
2025-03-20 20:12:02,177:INFO:_display_container: 2
2025-03-20 20:12:02,177:INFO:ElasticNet(random_state=42)
2025-03-20 20:12:02,177:INFO:create_model() successfully completed......................................
2025-03-20 20:12:02,228:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:02,228:INFO:Creating metrics dataframe
2025-03-20 20:12:02,232:INFO:Initializing Least Angle Regression
2025-03-20 20:12:02,232:INFO:Total runtime is 0.33309958378473914 minutes
2025-03-20 20:12:02,234:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:02,234:INFO:Initializing create_model()
2025-03-20 20:12:02,234:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:02,234:INFO:Checking exceptions
2025-03-20 20:12:02,234:INFO:Importing libraries
2025-03-20 20:12:02,234:INFO:Copying training dataset
2025-03-20 20:12:02,241:INFO:Defining folds
2025-03-20 20:12:02,241:INFO:Declaring metric variables
2025-03-20 20:12:02,242:INFO:Importing untrained model
2025-03-20 20:12:02,244:INFO:Least Angle Regression Imported successfully
2025-03-20 20:12:02,248:INFO:Starting cross validation
2025-03-20 20:12:02,252:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:06,320:INFO:Calculating mean and std
2025-03-20 20:12:06,321:INFO:Creating metrics dataframe
2025-03-20 20:12:06,322:INFO:Uploading results into container
2025-03-20 20:12:06,323:INFO:Uploading model into container now
2025-03-20 20:12:06,323:INFO:_master_model_container: 5
2025-03-20 20:12:06,323:INFO:_display_container: 2
2025-03-20 20:12:06,323:INFO:Lars(random_state=42)
2025-03-20 20:12:06,323:INFO:create_model() successfully completed......................................
2025-03-20 20:12:06,375:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:06,375:INFO:Creating metrics dataframe
2025-03-20 20:12:06,379:INFO:Initializing Lasso Least Angle Regression
2025-03-20 20:12:06,379:INFO:Total runtime is 0.40222320159276326 minutes
2025-03-20 20:12:06,381:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:06,382:INFO:Initializing create_model()
2025-03-20 20:12:06,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:06,382:INFO:Checking exceptions
2025-03-20 20:12:06,382:INFO:Importing libraries
2025-03-20 20:12:06,382:INFO:Copying training dataset
2025-03-20 20:12:06,389:INFO:Defining folds
2025-03-20 20:12:06,389:INFO:Declaring metric variables
2025-03-20 20:12:06,390:INFO:Importing untrained model
2025-03-20 20:12:06,392:INFO:Lasso Least Angle Regression Imported successfully
2025-03-20 20:12:06,396:INFO:Starting cross validation
2025-03-20 20:12:06,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:10,653:INFO:Calculating mean and std
2025-03-20 20:12:10,655:INFO:Creating metrics dataframe
2025-03-20 20:12:10,656:INFO:Uploading results into container
2025-03-20 20:12:10,656:INFO:Uploading model into container now
2025-03-20 20:12:10,657:INFO:_master_model_container: 6
2025-03-20 20:12:10,657:INFO:_display_container: 2
2025-03-20 20:12:10,657:INFO:LassoLars(random_state=42)
2025-03-20 20:12:10,657:INFO:create_model() successfully completed......................................
2025-03-20 20:12:10,707:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:10,707:INFO:Creating metrics dataframe
2025-03-20 20:12:10,711:INFO:Initializing Orthogonal Matching Pursuit
2025-03-20 20:12:10,711:INFO:Total runtime is 0.47441559632619223 minutes
2025-03-20 20:12:10,713:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:10,713:INFO:Initializing create_model()
2025-03-20 20:12:10,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:10,713:INFO:Checking exceptions
2025-03-20 20:12:10,713:INFO:Importing libraries
2025-03-20 20:12:10,713:INFO:Copying training dataset
2025-03-20 20:12:10,720:INFO:Defining folds
2025-03-20 20:12:10,720:INFO:Declaring metric variables
2025-03-20 20:12:10,722:INFO:Importing untrained model
2025-03-20 20:12:10,723:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:12:10,727:INFO:Starting cross validation
2025-03-20 20:12:10,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:14,935:INFO:Calculating mean and std
2025-03-20 20:12:14,936:INFO:Creating metrics dataframe
2025-03-20 20:12:14,937:INFO:Uploading results into container
2025-03-20 20:12:14,937:INFO:Uploading model into container now
2025-03-20 20:12:14,938:INFO:_master_model_container: 7
2025-03-20 20:12:14,938:INFO:_display_container: 2
2025-03-20 20:12:14,938:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:12:14,938:INFO:create_model() successfully completed......................................
2025-03-20 20:12:14,988:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:14,989:INFO:Creating metrics dataframe
2025-03-20 20:12:14,993:INFO:Initializing Bayesian Ridge
2025-03-20 20:12:14,993:INFO:Total runtime is 0.5457825024922689 minutes
2025-03-20 20:12:14,995:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:14,995:INFO:Initializing create_model()
2025-03-20 20:12:14,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:14,995:INFO:Checking exceptions
2025-03-20 20:12:14,995:INFO:Importing libraries
2025-03-20 20:12:14,995:INFO:Copying training dataset
2025-03-20 20:12:15,002:INFO:Defining folds
2025-03-20 20:12:15,002:INFO:Declaring metric variables
2025-03-20 20:12:15,003:INFO:Importing untrained model
2025-03-20 20:12:15,005:INFO:Bayesian Ridge Imported successfully
2025-03-20 20:12:15,009:INFO:Starting cross validation
2025-03-20 20:12:15,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:18,943:INFO:Calculating mean and std
2025-03-20 20:12:18,944:INFO:Creating metrics dataframe
2025-03-20 20:12:18,945:INFO:Uploading results into container
2025-03-20 20:12:18,946:INFO:Uploading model into container now
2025-03-20 20:12:18,946:INFO:_master_model_container: 8
2025-03-20 20:12:18,946:INFO:_display_container: 2
2025-03-20 20:12:18,947:INFO:BayesianRidge()
2025-03-20 20:12:18,947:INFO:create_model() successfully completed......................................
2025-03-20 20:12:18,997:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:18,997:INFO:Creating metrics dataframe
2025-03-20 20:12:19,002:INFO:Initializing Passive Aggressive Regressor
2025-03-20 20:12:19,002:INFO:Total runtime is 0.612595530351003 minutes
2025-03-20 20:12:19,003:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:19,004:INFO:Initializing create_model()
2025-03-20 20:12:19,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:19,004:INFO:Checking exceptions
2025-03-20 20:12:19,004:INFO:Importing libraries
2025-03-20 20:12:19,004:INFO:Copying training dataset
2025-03-20 20:12:19,010:INFO:Defining folds
2025-03-20 20:12:19,010:INFO:Declaring metric variables
2025-03-20 20:12:19,012:INFO:Importing untrained model
2025-03-20 20:12:19,014:INFO:Passive Aggressive Regressor Imported successfully
2025-03-20 20:12:19,017:INFO:Starting cross validation
2025-03-20 20:12:19,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:23,192:INFO:Calculating mean and std
2025-03-20 20:12:23,193:INFO:Creating metrics dataframe
2025-03-20 20:12:23,194:INFO:Uploading results into container
2025-03-20 20:12:23,194:INFO:Uploading model into container now
2025-03-20 20:12:23,195:INFO:_master_model_container: 9
2025-03-20 20:12:23,195:INFO:_display_container: 2
2025-03-20 20:12:23,195:INFO:PassiveAggressiveRegressor(random_state=42)
2025-03-20 20:12:23,195:INFO:create_model() successfully completed......................................
2025-03-20 20:12:23,245:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:23,245:INFO:Creating metrics dataframe
2025-03-20 20:12:23,250:INFO:Initializing Huber Regressor
2025-03-20 20:12:23,250:INFO:Total runtime is 0.683396331469218 minutes
2025-03-20 20:12:23,252:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:23,252:INFO:Initializing create_model()
2025-03-20 20:12:23,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:23,252:INFO:Checking exceptions
2025-03-20 20:12:23,252:INFO:Importing libraries
2025-03-20 20:12:23,253:INFO:Copying training dataset
2025-03-20 20:12:23,259:INFO:Defining folds
2025-03-20 20:12:23,259:INFO:Declaring metric variables
2025-03-20 20:12:23,261:INFO:Importing untrained model
2025-03-20 20:12:23,262:INFO:Huber Regressor Imported successfully
2025-03-20 20:12:23,266:INFO:Starting cross validation
2025-03-20 20:12:23,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:27,394:INFO:Calculating mean and std
2025-03-20 20:12:27,394:INFO:Creating metrics dataframe
2025-03-20 20:12:27,396:INFO:Uploading results into container
2025-03-20 20:12:27,396:INFO:Uploading model into container now
2025-03-20 20:12:27,396:INFO:_master_model_container: 10
2025-03-20 20:12:27,396:INFO:_display_container: 2
2025-03-20 20:12:27,397:INFO:HuberRegressor()
2025-03-20 20:12:27,397:INFO:create_model() successfully completed......................................
2025-03-20 20:12:27,447:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:27,447:INFO:Creating metrics dataframe
2025-03-20 20:12:27,451:INFO:Initializing K Neighbors Regressor
2025-03-20 20:12:27,452:INFO:Total runtime is 0.7534270644187928 minutes
2025-03-20 20:12:27,453:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:27,454:INFO:Initializing create_model()
2025-03-20 20:12:27,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:27,454:INFO:Checking exceptions
2025-03-20 20:12:27,454:INFO:Importing libraries
2025-03-20 20:12:27,454:INFO:Copying training dataset
2025-03-20 20:12:27,460:INFO:Defining folds
2025-03-20 20:12:27,461:INFO:Declaring metric variables
2025-03-20 20:12:27,462:INFO:Importing untrained model
2025-03-20 20:12:27,464:INFO:K Neighbors Regressor Imported successfully
2025-03-20 20:12:27,468:INFO:Starting cross validation
2025-03-20 20:12:27,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:31,414:INFO:Calculating mean and std
2025-03-20 20:12:31,415:INFO:Creating metrics dataframe
2025-03-20 20:12:31,416:INFO:Uploading results into container
2025-03-20 20:12:31,416:INFO:Uploading model into container now
2025-03-20 20:12:31,417:INFO:_master_model_container: 11
2025-03-20 20:12:31,417:INFO:_display_container: 2
2025-03-20 20:12:31,417:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-20 20:12:31,417:INFO:create_model() successfully completed......................................
2025-03-20 20:12:31,467:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:31,468:INFO:Creating metrics dataframe
2025-03-20 20:12:31,472:INFO:Initializing Decision Tree Regressor
2025-03-20 20:12:31,472:INFO:Total runtime is 0.8204402804374695 minutes
2025-03-20 20:12:31,475:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:31,475:INFO:Initializing create_model()
2025-03-20 20:12:31,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:31,475:INFO:Checking exceptions
2025-03-20 20:12:31,475:INFO:Importing libraries
2025-03-20 20:12:31,475:INFO:Copying training dataset
2025-03-20 20:12:31,482:INFO:Defining folds
2025-03-20 20:12:31,482:INFO:Declaring metric variables
2025-03-20 20:12:31,483:INFO:Importing untrained model
2025-03-20 20:12:31,485:INFO:Decision Tree Regressor Imported successfully
2025-03-20 20:12:31,489:INFO:Starting cross validation
2025-03-20 20:12:31,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:35,392:INFO:Calculating mean and std
2025-03-20 20:12:35,393:INFO:Creating metrics dataframe
2025-03-20 20:12:35,394:INFO:Uploading results into container
2025-03-20 20:12:35,394:INFO:Uploading model into container now
2025-03-20 20:12:35,394:INFO:_master_model_container: 12
2025-03-20 20:12:35,395:INFO:_display_container: 2
2025-03-20 20:12:35,395:INFO:DecisionTreeRegressor(random_state=42)
2025-03-20 20:12:35,395:INFO:create_model() successfully completed......................................
2025-03-20 20:12:35,446:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:35,446:INFO:Creating metrics dataframe
2025-03-20 20:12:35,451:INFO:Initializing Random Forest Regressor
2025-03-20 20:12:35,451:INFO:Total runtime is 0.8867448012034098 minutes
2025-03-20 20:12:35,452:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:35,453:INFO:Initializing create_model()
2025-03-20 20:12:35,453:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:35,453:INFO:Checking exceptions
2025-03-20 20:12:35,453:INFO:Importing libraries
2025-03-20 20:12:35,453:INFO:Copying training dataset
2025-03-20 20:12:35,459:INFO:Defining folds
2025-03-20 20:12:35,459:INFO:Declaring metric variables
2025-03-20 20:12:35,461:INFO:Importing untrained model
2025-03-20 20:12:35,463:INFO:Random Forest Regressor Imported successfully
2025-03-20 20:12:35,466:INFO:Starting cross validation
2025-03-20 20:12:35,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:40,939:INFO:Calculating mean and std
2025-03-20 20:12:40,940:INFO:Creating metrics dataframe
2025-03-20 20:12:40,941:INFO:Uploading results into container
2025-03-20 20:12:40,941:INFO:Uploading model into container now
2025-03-20 20:12:40,942:INFO:_master_model_container: 13
2025-03-20 20:12:40,942:INFO:_display_container: 2
2025-03-20 20:12:40,942:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:12:40,942:INFO:create_model() successfully completed......................................
2025-03-20 20:12:40,993:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:40,993:INFO:Creating metrics dataframe
2025-03-20 20:12:40,998:INFO:Initializing Extra Trees Regressor
2025-03-20 20:12:40,998:INFO:Total runtime is 0.9791964332262675 minutes
2025-03-20 20:12:40,999:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:41,000:INFO:Initializing create_model()
2025-03-20 20:12:41,000:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:41,000:INFO:Checking exceptions
2025-03-20 20:12:41,000:INFO:Importing libraries
2025-03-20 20:12:41,000:INFO:Copying training dataset
2025-03-20 20:12:41,007:INFO:Defining folds
2025-03-20 20:12:41,007:INFO:Declaring metric variables
2025-03-20 20:12:41,008:INFO:Importing untrained model
2025-03-20 20:12:41,010:INFO:Extra Trees Regressor Imported successfully
2025-03-20 20:12:41,014:INFO:Starting cross validation
2025-03-20 20:12:41,017:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:45,709:INFO:Calculating mean and std
2025-03-20 20:12:45,709:INFO:Creating metrics dataframe
2025-03-20 20:12:45,710:INFO:Uploading results into container
2025-03-20 20:12:45,711:INFO:Uploading model into container now
2025-03-20 20:12:45,711:INFO:_master_model_container: 14
2025-03-20 20:12:45,711:INFO:_display_container: 2
2025-03-20 20:12:45,712:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:12:45,712:INFO:create_model() successfully completed......................................
2025-03-20 20:12:45,763:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:45,763:INFO:Creating metrics dataframe
2025-03-20 20:12:45,768:INFO:Initializing AdaBoost Regressor
2025-03-20 20:12:45,768:INFO:Total runtime is 1.0587003350257873 minutes
2025-03-20 20:12:45,770:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:45,770:INFO:Initializing create_model()
2025-03-20 20:12:45,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:45,770:INFO:Checking exceptions
2025-03-20 20:12:45,770:INFO:Importing libraries
2025-03-20 20:12:45,770:INFO:Copying training dataset
2025-03-20 20:12:45,777:INFO:Defining folds
2025-03-20 20:12:45,777:INFO:Declaring metric variables
2025-03-20 20:12:45,778:INFO:Importing untrained model
2025-03-20 20:12:45,780:INFO:AdaBoost Regressor Imported successfully
2025-03-20 20:12:45,783:INFO:Starting cross validation
2025-03-20 20:12:45,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:50,078:INFO:Calculating mean and std
2025-03-20 20:12:50,079:INFO:Creating metrics dataframe
2025-03-20 20:12:50,080:INFO:Uploading results into container
2025-03-20 20:12:50,080:INFO:Uploading model into container now
2025-03-20 20:12:50,081:INFO:_master_model_container: 15
2025-03-20 20:12:50,081:INFO:_display_container: 2
2025-03-20 20:12:50,081:INFO:AdaBoostRegressor(random_state=42)
2025-03-20 20:12:50,081:INFO:create_model() successfully completed......................................
2025-03-20 20:12:50,131:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:50,131:INFO:Creating metrics dataframe
2025-03-20 20:12:50,137:INFO:Initializing Gradient Boosting Regressor
2025-03-20 20:12:50,137:INFO:Total runtime is 1.1315137147903442 minutes
2025-03-20 20:12:50,139:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:50,139:INFO:Initializing create_model()
2025-03-20 20:12:50,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:50,139:INFO:Checking exceptions
2025-03-20 20:12:50,139:INFO:Importing libraries
2025-03-20 20:12:50,139:INFO:Copying training dataset
2025-03-20 20:12:50,145:INFO:Defining folds
2025-03-20 20:12:50,145:INFO:Declaring metric variables
2025-03-20 20:12:50,147:INFO:Importing untrained model
2025-03-20 20:12:50,148:INFO:Gradient Boosting Regressor Imported successfully
2025-03-20 20:12:50,152:INFO:Starting cross validation
2025-03-20 20:12:50,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:12:55,073:INFO:Calculating mean and std
2025-03-20 20:12:55,074:INFO:Creating metrics dataframe
2025-03-20 20:12:55,075:INFO:Uploading results into container
2025-03-20 20:12:55,075:INFO:Uploading model into container now
2025-03-20 20:12:55,076:INFO:_master_model_container: 16
2025-03-20 20:12:55,076:INFO:_display_container: 2
2025-03-20 20:12:55,076:INFO:GradientBoostingRegressor(random_state=42)
2025-03-20 20:12:55,076:INFO:create_model() successfully completed......................................
2025-03-20 20:12:55,126:INFO:SubProcess create_model() end ==================================
2025-03-20 20:12:55,126:INFO:Creating metrics dataframe
2025-03-20 20:12:55,131:INFO:Initializing Light Gradient Boosting Machine
2025-03-20 20:12:55,131:INFO:Total runtime is 1.2147572795550028 minutes
2025-03-20 20:12:55,133:INFO:SubProcess create_model() called ==================================
2025-03-20 20:12:55,133:INFO:Initializing create_model()
2025-03-20 20:12:55,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:12:55,133:INFO:Checking exceptions
2025-03-20 20:12:55,133:INFO:Importing libraries
2025-03-20 20:12:55,133:INFO:Copying training dataset
2025-03-20 20:12:55,140:INFO:Defining folds
2025-03-20 20:12:55,141:INFO:Declaring metric variables
2025-03-20 20:12:55,142:INFO:Importing untrained model
2025-03-20 20:12:55,144:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-20 20:12:55,147:INFO:Starting cross validation
2025-03-20 20:12:55,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:13:02,662:INFO:Calculating mean and std
2025-03-20 20:13:02,663:INFO:Creating metrics dataframe
2025-03-20 20:13:02,664:INFO:Uploading results into container
2025-03-20 20:13:02,664:INFO:Uploading model into container now
2025-03-20 20:13:02,665:INFO:_master_model_container: 17
2025-03-20 20:13:02,665:INFO:_display_container: 2
2025-03-20 20:13:02,666:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:13:02,666:INFO:create_model() successfully completed......................................
2025-03-20 20:13:02,717:INFO:SubProcess create_model() end ==================================
2025-03-20 20:13:02,717:INFO:Creating metrics dataframe
2025-03-20 20:13:02,722:INFO:Initializing Dummy Regressor
2025-03-20 20:13:02,722:INFO:Total runtime is 1.341271980603536 minutes
2025-03-20 20:13:02,724:INFO:SubProcess create_model() called ==================================
2025-03-20 20:13:02,724:INFO:Initializing create_model()
2025-03-20 20:13:02,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10a2b84c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:13:02,724:INFO:Checking exceptions
2025-03-20 20:13:02,724:INFO:Importing libraries
2025-03-20 20:13:02,724:INFO:Copying training dataset
2025-03-20 20:13:02,731:INFO:Defining folds
2025-03-20 20:13:02,731:INFO:Declaring metric variables
2025-03-20 20:13:02,733:INFO:Importing untrained model
2025-03-20 20:13:02,734:INFO:Dummy Regressor Imported successfully
2025-03-20 20:13:02,739:INFO:Starting cross validation
2025-03-20 20:13:02,742:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:13:06,612:INFO:Calculating mean and std
2025-03-20 20:13:06,612:INFO:Creating metrics dataframe
2025-03-20 20:13:06,614:INFO:Uploading results into container
2025-03-20 20:13:06,614:INFO:Uploading model into container now
2025-03-20 20:13:06,614:INFO:_master_model_container: 18
2025-03-20 20:13:06,615:INFO:_display_container: 2
2025-03-20 20:13:06,615:INFO:DummyRegressor()
2025-03-20 20:13:06,615:INFO:create_model() successfully completed......................................
2025-03-20 20:13:06,666:INFO:SubProcess create_model() end ==================================
2025-03-20 20:13:06,666:INFO:Creating metrics dataframe
2025-03-20 20:13:06,674:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-20 20:13:06,677:INFO:Initializing create_model()
2025-03-20 20:13:06,678:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:13:06,678:INFO:Checking exceptions
2025-03-20 20:13:06,679:INFO:Importing libraries
2025-03-20 20:13:06,679:INFO:Copying training dataset
2025-03-20 20:13:06,685:INFO:Defining folds
2025-03-20 20:13:06,685:INFO:Declaring metric variables
2025-03-20 20:13:06,685:INFO:Importing untrained model
2025-03-20 20:13:06,685:INFO:Declaring custom model
2025-03-20 20:13:06,686:INFO:Linear Regression Imported successfully
2025-03-20 20:13:06,689:INFO:Cross validation set to False
2025-03-20 20:13:06,689:INFO:Fitting Model
2025-03-20 20:13:06,916:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000527 seconds.
2025-03-20 20:13:06,917:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:13:06,917:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:13:06,917:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:13:06,917:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:13:07,439:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:13:07,439:INFO:create_model() successfully completed......................................
2025-03-20 20:13:07,612:INFO:_master_model_container: 18
2025-03-20 20:13:07,612:INFO:_display_container: 2
2025-03-20 20:13:07,612:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:13:07,612:INFO:compare_models() successfully completed......................................
2025-03-20 20:13:37,433:INFO:Initializing finalize_model()
2025-03-20 20:13:37,433:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:13:37,433:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 20:13:37,449:INFO:Initializing create_model()
2025-03-20 20:13:37,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17e8e66e0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:13:37,449:INFO:Checking exceptions
2025-03-20 20:13:37,452:INFO:Importing libraries
2025-03-20 20:13:37,452:INFO:Copying training dataset
2025-03-20 20:13:37,454:INFO:Defining folds
2025-03-20 20:13:37,455:INFO:Declaring metric variables
2025-03-20 20:13:37,456:INFO:Importing untrained model
2025-03-20 20:13:37,456:INFO:Declaring custom model
2025-03-20 20:13:37,456:INFO:Linear Regression Imported successfully
2025-03-20 20:13:37,462:INFO:Cross validation set to False
2025-03-20 20:13:37,462:INFO:Fitting Model
2025-03-20 20:13:37,717:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000488 seconds.
2025-03-20 20:13:37,717:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:13:37,718:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:13:37,718:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:13:37,718:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:13:38,248:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:13:38,248:INFO:create_model() successfully completed......................................
2025-03-20 20:13:38,296:INFO:_master_model_container: 18
2025-03-20 20:13:38,296:INFO:_display_container: 2
2025-03-20 20:13:38,303:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:13:38,303:INFO:finalize_model() successfully completed......................................
2025-03-20 20:13:38,368:INFO:Initializing save_model()
2025-03-20 20:13:38,368:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:13:38,368:INFO:Adding model into prep_pipe
2025-03-20 20:13:38,368:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:13:38,397:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 20:13:38,404:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:13:38,404:INFO:save_model() successfully completed......................................
2025-03-20 20:13:46,521:INFO:PyCaret RegressionExperiment
2025-03-20 20:13:46,522:INFO:Logging name: reg-default-name
2025-03-20 20:13:46,522:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 20:13:46,522:INFO:version 3.3.2
2025-03-20 20:13:46,522:INFO:Initializing setup()
2025-03-20 20:13:46,522:INFO:self.USI: e756
2025-03-20 20:13:46,522:INFO:self._variable_keys: {'y_train', 'log_plots_param', 'pipeline', 'X', 'html_param', 'exp_name_log', 'gpu_n_jobs_param', 'USI', 'X_train', 'seed', 'logging_param', 'fold_groups_param', 'target_param', 'fold_shuffle_param', 'y', 'memory', '_ml_usecase', '_available_plots', 'transform_target_param', 'idx', 'fold_generator', 'n_jobs_param', 'X_test', 'exp_id', 'data', 'y_test', 'gpu_param'}
2025-03-20 20:13:46,522:INFO:Checking environment
2025-03-20 20:13:46,522:INFO:python_version: 3.10.16
2025-03-20 20:13:46,522:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 20:13:46,522:INFO:machine: arm64
2025-03-20 20:13:46,522:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 20:13:46,522:INFO:Memory: svmem(total=38654705664, available=13072646144, percent=66.2, used=16671358976, free=172244992, active=12870860800, inactive=12896731136, wired=3800498176)
2025-03-20 20:13:46,523:INFO:Physical Core: 11
2025-03-20 20:13:46,523:INFO:Logical Core: 11
2025-03-20 20:13:46,523:INFO:Checking libraries
2025-03-20 20:13:46,523:INFO:System:
2025-03-20 20:13:46,523:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 20:13:46,523:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 20:13:46,523:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 20:13:46,523:INFO:PyCaret required dependencies:
2025-03-20 20:13:46,523:INFO:                 pip: 25.0
2025-03-20 20:13:46,523:INFO:          setuptools: 77.0.1
2025-03-20 20:13:46,523:INFO:             pycaret: 3.3.2
2025-03-20 20:13:46,523:INFO:             IPython: 8.34.0
2025-03-20 20:13:46,523:INFO:          ipywidgets: 8.1.5
2025-03-20 20:13:46,523:INFO:                tqdm: 4.67.1
2025-03-20 20:13:46,523:INFO:               numpy: 1.26.4
2025-03-20 20:13:46,523:INFO:              pandas: 2.1.4
2025-03-20 20:13:46,523:INFO:              jinja2: 3.1.6
2025-03-20 20:13:46,524:INFO:               scipy: 1.11.4
2025-03-20 20:13:46,524:INFO:              joblib: 1.3.2
2025-03-20 20:13:46,526:INFO:             sklearn: 1.4.2
2025-03-20 20:13:46,526:INFO:                pyod: 2.0.3
2025-03-20 20:13:46,526:INFO:            imblearn: 0.13.0
2025-03-20 20:13:46,526:INFO:   category_encoders: 2.7.0
2025-03-20 20:13:46,526:INFO:            lightgbm: 4.6.0
2025-03-20 20:13:46,526:INFO:               numba: 0.61.0
2025-03-20 20:13:46,526:INFO:            requests: 2.32.3
2025-03-20 20:13:46,526:INFO:          matplotlib: 3.7.5
2025-03-20 20:13:46,526:INFO:          scikitplot: 0.3.7
2025-03-20 20:13:46,526:INFO:         yellowbrick: 1.5
2025-03-20 20:13:46,526:INFO:              plotly: 5.24.1
2025-03-20 20:13:46,526:INFO:    plotly-resampler: Not installed
2025-03-20 20:13:46,526:INFO:             kaleido: 0.2.1
2025-03-20 20:13:46,526:INFO:           schemdraw: 0.15
2025-03-20 20:13:46,526:INFO:         statsmodels: 0.14.4
2025-03-20 20:13:46,526:INFO:              sktime: 0.26.0
2025-03-20 20:13:46,526:INFO:               tbats: 1.1.3
2025-03-20 20:13:46,526:INFO:            pmdarima: 2.0.4
2025-03-20 20:13:46,526:INFO:              psutil: 7.0.0
2025-03-20 20:13:46,526:INFO:          markupsafe: 3.0.2
2025-03-20 20:13:46,526:INFO:             pickle5: Not installed
2025-03-20 20:13:46,526:INFO:         cloudpickle: 3.1.1
2025-03-20 20:13:46,527:INFO:         deprecation: 2.1.0
2025-03-20 20:13:46,527:INFO:              xxhash: 3.5.0
2025-03-20 20:13:46,527:INFO:           wurlitzer: 3.1.1
2025-03-20 20:13:46,527:INFO:PyCaret optional dependencies:
2025-03-20 20:13:46,527:INFO:                shap: Not installed
2025-03-20 20:13:46,527:INFO:           interpret: Not installed
2025-03-20 20:13:46,527:INFO:                umap: Not installed
2025-03-20 20:13:46,527:INFO:     ydata_profiling: Not installed
2025-03-20 20:13:46,527:INFO:  explainerdashboard: Not installed
2025-03-20 20:13:46,527:INFO:             autoviz: Not installed
2025-03-20 20:13:46,527:INFO:           fairlearn: Not installed
2025-03-20 20:13:46,528:INFO:          deepchecks: Not installed
2025-03-20 20:13:46,528:INFO:             xgboost: Not installed
2025-03-20 20:13:46,529:INFO:            catboost: Not installed
2025-03-20 20:13:46,529:INFO:              kmodes: Not installed
2025-03-20 20:13:46,529:INFO:             mlxtend: Not installed
2025-03-20 20:13:46,529:INFO:       statsforecast: Not installed
2025-03-20 20:13:46,529:INFO:        tune_sklearn: Not installed
2025-03-20 20:13:46,529:INFO:                 ray: Not installed
2025-03-20 20:13:46,529:INFO:            hyperopt: Not installed
2025-03-20 20:13:46,529:INFO:              optuna: Not installed
2025-03-20 20:13:46,529:INFO:               skopt: Not installed
2025-03-20 20:13:46,529:INFO:              mlflow: Not installed
2025-03-20 20:13:46,529:INFO:              gradio: Not installed
2025-03-20 20:13:46,529:INFO:             fastapi: Not installed
2025-03-20 20:13:46,529:INFO:             uvicorn: Not installed
2025-03-20 20:13:46,529:INFO:              m2cgen: Not installed
2025-03-20 20:13:46,529:INFO:           evidently: Not installed
2025-03-20 20:13:46,529:INFO:               fugue: Not installed
2025-03-20 20:13:46,529:INFO:           streamlit: 1.43.2
2025-03-20 20:13:46,529:INFO:             prophet: Not installed
2025-03-20 20:13:46,529:INFO:None
2025-03-20 20:13:46,530:INFO:Set up data.
2025-03-20 20:13:46,545:INFO:Set up folding strategy.
2025-03-20 20:13:46,545:INFO:Set up train/test split.
2025-03-20 20:13:46,555:INFO:Set up index.
2025-03-20 20:13:46,556:INFO:Assigning column types.
2025-03-20 20:13:46,563:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 20:13:46,563:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,565:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,568:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,621:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,624:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,626:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,658:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,680:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 20:13:46,683:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,685:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,739:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,741:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,744:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,776:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,798:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,799:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 20:13:46,803:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,862:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,894:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,916:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 20:13:46,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,974:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:46,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:46,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,011:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:47,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:13:47,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,034:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 20:13:47,070:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:47,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:13:47,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,152:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 20:13:47,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,271:INFO:Preparing preprocessing pipeline...
2025-03-20 20:13:47,271:INFO:Set up simple imputation.
2025-03-20 20:13:47,271:INFO:Set up removing outliers.
2025-03-20 20:13:47,271:INFO:Set up feature normalization.
2025-03-20 20:13:47,271:INFO:Set up feature selection.
2025-03-20 20:13:47,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,331:INFO:Set up column name cleaning.
2025-03-20 20:13:47,366:INFO:Finished creating preprocessing pipeline.
2025-03-20 20:13:47,372:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 20:13:47,372:INFO:Creating final display dataframe.
2025-03-20 20:13:47,460:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              e756
2025-03-20 20:13:47,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:13:47,583:INFO:setup() successfully completed in 1.06s...............
2025-03-20 20:13:47,584:INFO:Initializing create_model()
2025-03-20 20:13:47,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:13:47,584:INFO:Checking exceptions
2025-03-20 20:13:47,591:INFO:Importing libraries
2025-03-20 20:13:47,591:INFO:Copying training dataset
2025-03-20 20:13:47,600:INFO:Defining folds
2025-03-20 20:13:47,600:INFO:Declaring metric variables
2025-03-20 20:13:47,603:INFO:Importing untrained model
2025-03-20 20:13:47,606:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:13:47,610:INFO:Starting cross validation
2025-03-20 20:13:47,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:13:51,924:INFO:Calculating mean and std
2025-03-20 20:13:51,924:INFO:Creating metrics dataframe
2025-03-20 20:13:51,927:INFO:Finalizing model
2025-03-20 20:13:52,144:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000486 seconds.
2025-03-20 20:13:52,144:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:13:52,144:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:13:52,144:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:13:52,144:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:13:52,697:INFO:Uploading results into container
2025-03-20 20:13:52,697:INFO:Uploading model into container now
2025-03-20 20:13:52,752:INFO:_master_model_container: 1
2025-03-20 20:13:52,753:INFO:_display_container: 2
2025-03-20 20:13:52,753:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:13:52,753:INFO:create_model() successfully completed......................................
2025-03-20 20:13:52,873:INFO:Initializing finalize_model()
2025-03-20 20:13:52,873:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:13:52,874:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 20:13:52,878:INFO:Initializing create_model()
2025-03-20 20:13:52,878:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:13:52,878:INFO:Checking exceptions
2025-03-20 20:13:52,879:INFO:Importing libraries
2025-03-20 20:13:52,880:INFO:Copying training dataset
2025-03-20 20:13:52,880:INFO:Defining folds
2025-03-20 20:13:52,880:INFO:Declaring metric variables
2025-03-20 20:13:52,880:INFO:Importing untrained model
2025-03-20 20:13:52,880:INFO:Declaring custom model
2025-03-20 20:13:52,881:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:13:52,886:INFO:Cross validation set to False
2025-03-20 20:13:52,886:INFO:Fitting Model
2025-03-20 20:13:53,150:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000567 seconds.
2025-03-20 20:13:53,150:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:13:53,150:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:13:53,150:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:13:53,151:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:13:53,677:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:13:53,677:INFO:create_model() successfully completed......................................
2025-03-20 20:13:53,728:INFO:_master_model_container: 1
2025-03-20 20:13:53,728:INFO:_display_container: 2
2025-03-20 20:13:53,735:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:13:53,735:INFO:finalize_model() successfully completed......................................
2025-03-20 20:13:53,802:INFO:Initializing save_model()
2025-03-20 20:13:53,802:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model.pkl, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:13:53,802:INFO:Adding model into prep_pipe
2025-03-20 20:13:53,802:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:13:53,831:INFO:halfmarathon_model.pkl.pkl saved in current working directory
2025-03-20 20:13:53,838:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:13:53,838:INFO:save_model() successfully completed......................................
2025-03-20 20:14:17,339:INFO:Initializing compare_models()
2025-03-20 20:14:17,339:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-20 20:14:17,339:INFO:Checking exceptions
2025-03-20 20:14:17,344:INFO:Preparing display monitor
2025-03-20 20:14:17,359:INFO:Initializing Linear Regression
2025-03-20 20:14:17,359:INFO:Total runtime is 3.0954678853352863e-06 minutes
2025-03-20 20:14:17,361:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:17,361:INFO:Initializing create_model()
2025-03-20 20:14:17,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:17,361:INFO:Checking exceptions
2025-03-20 20:14:17,362:INFO:Importing libraries
2025-03-20 20:14:17,362:INFO:Copying training dataset
2025-03-20 20:14:17,371:INFO:Defining folds
2025-03-20 20:14:17,371:INFO:Declaring metric variables
2025-03-20 20:14:17,373:INFO:Importing untrained model
2025-03-20 20:14:17,374:INFO:Linear Regression Imported successfully
2025-03-20 20:14:17,378:INFO:Starting cross validation
2025-03-20 20:14:17,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:21,628:INFO:Calculating mean and std
2025-03-20 20:14:21,629:INFO:Creating metrics dataframe
2025-03-20 20:14:21,630:INFO:Uploading results into container
2025-03-20 20:14:21,630:INFO:Uploading model into container now
2025-03-20 20:14:21,631:INFO:_master_model_container: 2
2025-03-20 20:14:21,631:INFO:_display_container: 3
2025-03-20 20:14:21,631:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:14:21,631:INFO:create_model() successfully completed......................................
2025-03-20 20:14:21,683:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:21,683:INFO:Creating metrics dataframe
2025-03-20 20:14:21,686:INFO:Initializing Lasso Regression
2025-03-20 20:14:21,686:INFO:Total runtime is 0.072117551167806 minutes
2025-03-20 20:14:21,688:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:21,688:INFO:Initializing create_model()
2025-03-20 20:14:21,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:21,688:INFO:Checking exceptions
2025-03-20 20:14:21,688:INFO:Importing libraries
2025-03-20 20:14:21,688:INFO:Copying training dataset
2025-03-20 20:14:21,695:INFO:Defining folds
2025-03-20 20:14:21,695:INFO:Declaring metric variables
2025-03-20 20:14:21,697:INFO:Importing untrained model
2025-03-20 20:14:21,698:INFO:Lasso Regression Imported successfully
2025-03-20 20:14:21,702:INFO:Starting cross validation
2025-03-20 20:14:21,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:25,823:INFO:Calculating mean and std
2025-03-20 20:14:25,824:INFO:Creating metrics dataframe
2025-03-20 20:14:25,825:INFO:Uploading results into container
2025-03-20 20:14:25,826:INFO:Uploading model into container now
2025-03-20 20:14:25,826:INFO:_master_model_container: 3
2025-03-20 20:14:25,826:INFO:_display_container: 3
2025-03-20 20:14:25,827:INFO:Lasso(random_state=42)
2025-03-20 20:14:25,827:INFO:create_model() successfully completed......................................
2025-03-20 20:14:25,878:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:25,878:INFO:Creating metrics dataframe
2025-03-20 20:14:25,882:INFO:Initializing Ridge Regression
2025-03-20 20:14:25,882:INFO:Total runtime is 0.14204918146133422 minutes
2025-03-20 20:14:25,884:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:25,884:INFO:Initializing create_model()
2025-03-20 20:14:25,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:25,884:INFO:Checking exceptions
2025-03-20 20:14:25,884:INFO:Importing libraries
2025-03-20 20:14:25,884:INFO:Copying training dataset
2025-03-20 20:14:25,891:INFO:Defining folds
2025-03-20 20:14:25,891:INFO:Declaring metric variables
2025-03-20 20:14:25,893:INFO:Importing untrained model
2025-03-20 20:14:25,894:INFO:Ridge Regression Imported successfully
2025-03-20 20:14:25,898:INFO:Starting cross validation
2025-03-20 20:14:25,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:29,875:INFO:Calculating mean and std
2025-03-20 20:14:29,876:INFO:Creating metrics dataframe
2025-03-20 20:14:29,877:INFO:Uploading results into container
2025-03-20 20:14:29,877:INFO:Uploading model into container now
2025-03-20 20:14:29,878:INFO:_master_model_container: 4
2025-03-20 20:14:29,878:INFO:_display_container: 3
2025-03-20 20:14:29,878:INFO:Ridge(random_state=42)
2025-03-20 20:14:29,878:INFO:create_model() successfully completed......................................
2025-03-20 20:14:29,929:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:29,929:INFO:Creating metrics dataframe
2025-03-20 20:14:29,932:INFO:Initializing Elastic Net
2025-03-20 20:14:29,933:INFO:Total runtime is 0.2095569650332133 minutes
2025-03-20 20:14:29,934:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:29,935:INFO:Initializing create_model()
2025-03-20 20:14:29,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:29,935:INFO:Checking exceptions
2025-03-20 20:14:29,935:INFO:Importing libraries
2025-03-20 20:14:29,935:INFO:Copying training dataset
2025-03-20 20:14:29,942:INFO:Defining folds
2025-03-20 20:14:29,942:INFO:Declaring metric variables
2025-03-20 20:14:29,943:INFO:Importing untrained model
2025-03-20 20:14:29,945:INFO:Elastic Net Imported successfully
2025-03-20 20:14:29,949:INFO:Starting cross validation
2025-03-20 20:14:29,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:33,956:INFO:Calculating mean and std
2025-03-20 20:14:33,957:INFO:Creating metrics dataframe
2025-03-20 20:14:33,958:INFO:Uploading results into container
2025-03-20 20:14:33,958:INFO:Uploading model into container now
2025-03-20 20:14:33,959:INFO:_master_model_container: 5
2025-03-20 20:14:33,959:INFO:_display_container: 3
2025-03-20 20:14:33,959:INFO:ElasticNet(random_state=42)
2025-03-20 20:14:33,959:INFO:create_model() successfully completed......................................
2025-03-20 20:14:34,012:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:34,012:INFO:Creating metrics dataframe
2025-03-20 20:14:34,016:INFO:Initializing Least Angle Regression
2025-03-20 20:14:34,016:INFO:Total runtime is 0.27761374711990355 minutes
2025-03-20 20:14:34,018:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:34,018:INFO:Initializing create_model()
2025-03-20 20:14:34,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:34,018:INFO:Checking exceptions
2025-03-20 20:14:34,019:INFO:Importing libraries
2025-03-20 20:14:34,019:INFO:Copying training dataset
2025-03-20 20:14:34,025:INFO:Defining folds
2025-03-20 20:14:34,025:INFO:Declaring metric variables
2025-03-20 20:14:34,027:INFO:Importing untrained model
2025-03-20 20:14:34,029:INFO:Least Angle Regression Imported successfully
2025-03-20 20:14:34,033:INFO:Starting cross validation
2025-03-20 20:14:34,037:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:38,208:INFO:Calculating mean and std
2025-03-20 20:14:38,209:INFO:Creating metrics dataframe
2025-03-20 20:14:38,210:INFO:Uploading results into container
2025-03-20 20:14:38,211:INFO:Uploading model into container now
2025-03-20 20:14:38,211:INFO:_master_model_container: 6
2025-03-20 20:14:38,211:INFO:_display_container: 3
2025-03-20 20:14:38,211:INFO:Lars(random_state=42)
2025-03-20 20:14:38,211:INFO:create_model() successfully completed......................................
2025-03-20 20:14:38,287:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:38,287:INFO:Creating metrics dataframe
2025-03-20 20:14:38,291:INFO:Initializing Lasso Least Angle Regression
2025-03-20 20:14:38,291:INFO:Total runtime is 0.3488664984703064 minutes
2025-03-20 20:14:38,293:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:38,293:INFO:Initializing create_model()
2025-03-20 20:14:38,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:38,293:INFO:Checking exceptions
2025-03-20 20:14:38,293:INFO:Importing libraries
2025-03-20 20:14:38,293:INFO:Copying training dataset
2025-03-20 20:14:38,300:INFO:Defining folds
2025-03-20 20:14:38,300:INFO:Declaring metric variables
2025-03-20 20:14:38,301:INFO:Importing untrained model
2025-03-20 20:14:38,303:INFO:Lasso Least Angle Regression Imported successfully
2025-03-20 20:14:38,307:INFO:Starting cross validation
2025-03-20 20:14:38,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:42,209:INFO:Calculating mean and std
2025-03-20 20:14:42,210:INFO:Creating metrics dataframe
2025-03-20 20:14:42,211:INFO:Uploading results into container
2025-03-20 20:14:42,211:INFO:Uploading model into container now
2025-03-20 20:14:42,212:INFO:_master_model_container: 7
2025-03-20 20:14:42,212:INFO:_display_container: 3
2025-03-20 20:14:42,212:INFO:LassoLars(random_state=42)
2025-03-20 20:14:42,212:INFO:create_model() successfully completed......................................
2025-03-20 20:14:42,262:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:42,263:INFO:Creating metrics dataframe
2025-03-20 20:14:42,267:INFO:Initializing Orthogonal Matching Pursuit
2025-03-20 20:14:42,267:INFO:Total runtime is 0.41512393156687416 minutes
2025-03-20 20:14:42,268:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:42,269:INFO:Initializing create_model()
2025-03-20 20:14:42,269:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:42,269:INFO:Checking exceptions
2025-03-20 20:14:42,269:INFO:Importing libraries
2025-03-20 20:14:42,269:INFO:Copying training dataset
2025-03-20 20:14:42,275:INFO:Defining folds
2025-03-20 20:14:42,275:INFO:Declaring metric variables
2025-03-20 20:14:42,277:INFO:Importing untrained model
2025-03-20 20:14:42,278:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:14:42,282:INFO:Starting cross validation
2025-03-20 20:14:42,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:46,212:INFO:Calculating mean and std
2025-03-20 20:14:46,212:INFO:Creating metrics dataframe
2025-03-20 20:14:46,214:INFO:Uploading results into container
2025-03-20 20:14:46,214:INFO:Uploading model into container now
2025-03-20 20:14:46,214:INFO:_master_model_container: 8
2025-03-20 20:14:46,214:INFO:_display_container: 3
2025-03-20 20:14:46,215:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:14:46,215:INFO:create_model() successfully completed......................................
2025-03-20 20:14:46,266:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:46,266:INFO:Creating metrics dataframe
2025-03-20 20:14:46,270:INFO:Initializing Bayesian Ridge
2025-03-20 20:14:46,270:INFO:Total runtime is 0.48184682925542194 minutes
2025-03-20 20:14:46,272:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:46,272:INFO:Initializing create_model()
2025-03-20 20:14:46,272:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:46,272:INFO:Checking exceptions
2025-03-20 20:14:46,272:INFO:Importing libraries
2025-03-20 20:14:46,273:INFO:Copying training dataset
2025-03-20 20:14:46,279:INFO:Defining folds
2025-03-20 20:14:46,279:INFO:Declaring metric variables
2025-03-20 20:14:46,280:INFO:Importing untrained model
2025-03-20 20:14:46,282:INFO:Bayesian Ridge Imported successfully
2025-03-20 20:14:46,285:INFO:Starting cross validation
2025-03-20 20:14:46,289:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:50,447:INFO:Calculating mean and std
2025-03-20 20:14:50,447:INFO:Creating metrics dataframe
2025-03-20 20:14:50,449:INFO:Uploading results into container
2025-03-20 20:14:50,449:INFO:Uploading model into container now
2025-03-20 20:14:50,449:INFO:_master_model_container: 9
2025-03-20 20:14:50,449:INFO:_display_container: 3
2025-03-20 20:14:50,450:INFO:BayesianRidge()
2025-03-20 20:14:50,450:INFO:create_model() successfully completed......................................
2025-03-20 20:14:50,502:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:50,502:INFO:Creating metrics dataframe
2025-03-20 20:14:50,506:INFO:Initializing Passive Aggressive Regressor
2025-03-20 20:14:50,506:INFO:Total runtime is 0.5524488488833109 minutes
2025-03-20 20:14:50,508:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:50,508:INFO:Initializing create_model()
2025-03-20 20:14:50,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:50,508:INFO:Checking exceptions
2025-03-20 20:14:50,508:INFO:Importing libraries
2025-03-20 20:14:50,508:INFO:Copying training dataset
2025-03-20 20:14:50,515:INFO:Defining folds
2025-03-20 20:14:50,515:INFO:Declaring metric variables
2025-03-20 20:14:50,516:INFO:Importing untrained model
2025-03-20 20:14:50,518:INFO:Passive Aggressive Regressor Imported successfully
2025-03-20 20:14:50,522:INFO:Starting cross validation
2025-03-20 20:14:50,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:54,540:INFO:Calculating mean and std
2025-03-20 20:14:54,541:INFO:Creating metrics dataframe
2025-03-20 20:14:54,542:INFO:Uploading results into container
2025-03-20 20:14:54,542:INFO:Uploading model into container now
2025-03-20 20:14:54,543:INFO:_master_model_container: 10
2025-03-20 20:14:54,543:INFO:_display_container: 3
2025-03-20 20:14:54,543:INFO:PassiveAggressiveRegressor(random_state=42)
2025-03-20 20:14:54,543:INFO:create_model() successfully completed......................................
2025-03-20 20:14:54,594:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:54,594:INFO:Creating metrics dataframe
2025-03-20 20:14:54,598:INFO:Initializing Huber Regressor
2025-03-20 20:14:54,598:INFO:Total runtime is 0.6206491827964782 minutes
2025-03-20 20:14:54,600:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:54,600:INFO:Initializing create_model()
2025-03-20 20:14:54,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:54,600:INFO:Checking exceptions
2025-03-20 20:14:54,601:INFO:Importing libraries
2025-03-20 20:14:54,601:INFO:Copying training dataset
2025-03-20 20:14:54,607:INFO:Defining folds
2025-03-20 20:14:54,607:INFO:Declaring metric variables
2025-03-20 20:14:54,609:INFO:Importing untrained model
2025-03-20 20:14:54,610:INFO:Huber Regressor Imported successfully
2025-03-20 20:14:54,614:INFO:Starting cross validation
2025-03-20 20:14:54,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:14:58,543:INFO:Calculating mean and std
2025-03-20 20:14:58,544:INFO:Creating metrics dataframe
2025-03-20 20:14:58,545:INFO:Uploading results into container
2025-03-20 20:14:58,546:INFO:Uploading model into container now
2025-03-20 20:14:58,547:INFO:_master_model_container: 11
2025-03-20 20:14:58,547:INFO:_display_container: 3
2025-03-20 20:14:58,547:INFO:HuberRegressor()
2025-03-20 20:14:58,547:INFO:create_model() successfully completed......................................
2025-03-20 20:14:58,598:INFO:SubProcess create_model() end ==================================
2025-03-20 20:14:58,598:INFO:Creating metrics dataframe
2025-03-20 20:14:58,603:INFO:Initializing K Neighbors Regressor
2025-03-20 20:14:58,603:INFO:Total runtime is 0.6873947143554686 minutes
2025-03-20 20:14:58,605:INFO:SubProcess create_model() called ==================================
2025-03-20 20:14:58,605:INFO:Initializing create_model()
2025-03-20 20:14:58,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:14:58,605:INFO:Checking exceptions
2025-03-20 20:14:58,605:INFO:Importing libraries
2025-03-20 20:14:58,606:INFO:Copying training dataset
2025-03-20 20:14:58,612:INFO:Defining folds
2025-03-20 20:14:58,612:INFO:Declaring metric variables
2025-03-20 20:14:58,613:INFO:Importing untrained model
2025-03-20 20:14:58,616:INFO:K Neighbors Regressor Imported successfully
2025-03-20 20:14:58,619:INFO:Starting cross validation
2025-03-20 20:14:58,624:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:03,096:INFO:Calculating mean and std
2025-03-20 20:15:03,096:INFO:Creating metrics dataframe
2025-03-20 20:15:03,097:INFO:Uploading results into container
2025-03-20 20:15:03,098:INFO:Uploading model into container now
2025-03-20 20:15:03,098:INFO:_master_model_container: 12
2025-03-20 20:15:03,098:INFO:_display_container: 3
2025-03-20 20:15:03,099:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-20 20:15:03,099:INFO:create_model() successfully completed......................................
2025-03-20 20:15:03,151:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:03,152:INFO:Creating metrics dataframe
2025-03-20 20:15:03,156:INFO:Initializing Decision Tree Regressor
2025-03-20 20:15:03,156:INFO:Total runtime is 0.7632881482442219 minutes
2025-03-20 20:15:03,159:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:03,159:INFO:Initializing create_model()
2025-03-20 20:15:03,159:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:03,159:INFO:Checking exceptions
2025-03-20 20:15:03,159:INFO:Importing libraries
2025-03-20 20:15:03,159:INFO:Copying training dataset
2025-03-20 20:15:03,166:INFO:Defining folds
2025-03-20 20:15:03,166:INFO:Declaring metric variables
2025-03-20 20:15:03,167:INFO:Importing untrained model
2025-03-20 20:15:03,169:INFO:Decision Tree Regressor Imported successfully
2025-03-20 20:15:03,173:INFO:Starting cross validation
2025-03-20 20:15:03,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:07,359:INFO:Calculating mean and std
2025-03-20 20:15:07,360:INFO:Creating metrics dataframe
2025-03-20 20:15:07,361:INFO:Uploading results into container
2025-03-20 20:15:07,361:INFO:Uploading model into container now
2025-03-20 20:15:07,362:INFO:_master_model_container: 13
2025-03-20 20:15:07,362:INFO:_display_container: 3
2025-03-20 20:15:07,362:INFO:DecisionTreeRegressor(random_state=42)
2025-03-20 20:15:07,362:INFO:create_model() successfully completed......................................
2025-03-20 20:15:07,412:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:07,412:INFO:Creating metrics dataframe
2025-03-20 20:15:07,417:INFO:Initializing Random Forest Regressor
2025-03-20 20:15:07,417:INFO:Total runtime is 0.8343026796976724 minutes
2025-03-20 20:15:07,419:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:07,419:INFO:Initializing create_model()
2025-03-20 20:15:07,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:07,420:INFO:Checking exceptions
2025-03-20 20:15:07,420:INFO:Importing libraries
2025-03-20 20:15:07,420:INFO:Copying training dataset
2025-03-20 20:15:07,426:INFO:Defining folds
2025-03-20 20:15:07,426:INFO:Declaring metric variables
2025-03-20 20:15:07,428:INFO:Importing untrained model
2025-03-20 20:15:07,429:INFO:Random Forest Regressor Imported successfully
2025-03-20 20:15:07,433:INFO:Starting cross validation
2025-03-20 20:15:07,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:12,985:INFO:Calculating mean and std
2025-03-20 20:15:12,986:INFO:Creating metrics dataframe
2025-03-20 20:15:12,987:INFO:Uploading results into container
2025-03-20 20:15:12,987:INFO:Uploading model into container now
2025-03-20 20:15:12,988:INFO:_master_model_container: 14
2025-03-20 20:15:12,988:INFO:_display_container: 3
2025-03-20 20:15:12,988:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:15:12,988:INFO:create_model() successfully completed......................................
2025-03-20 20:15:13,040:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:13,040:INFO:Creating metrics dataframe
2025-03-20 20:15:13,046:INFO:Initializing Extra Trees Regressor
2025-03-20 20:15:13,046:INFO:Total runtime is 0.9281076629956562 minutes
2025-03-20 20:15:13,048:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:13,048:INFO:Initializing create_model()
2025-03-20 20:15:13,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:13,048:INFO:Checking exceptions
2025-03-20 20:15:13,048:INFO:Importing libraries
2025-03-20 20:15:13,048:INFO:Copying training dataset
2025-03-20 20:15:13,055:INFO:Defining folds
2025-03-20 20:15:13,055:INFO:Declaring metric variables
2025-03-20 20:15:13,056:INFO:Importing untrained model
2025-03-20 20:15:13,058:INFO:Extra Trees Regressor Imported successfully
2025-03-20 20:15:13,061:INFO:Starting cross validation
2025-03-20 20:15:13,065:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:17,946:INFO:Calculating mean and std
2025-03-20 20:15:17,947:INFO:Creating metrics dataframe
2025-03-20 20:15:17,948:INFO:Uploading results into container
2025-03-20 20:15:17,948:INFO:Uploading model into container now
2025-03-20 20:15:17,949:INFO:_master_model_container: 15
2025-03-20 20:15:17,949:INFO:_display_container: 3
2025-03-20 20:15:17,949:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:15:17,950:INFO:create_model() successfully completed......................................
2025-03-20 20:15:18,001:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:18,001:INFO:Creating metrics dataframe
2025-03-20 20:15:18,006:INFO:Initializing AdaBoost Regressor
2025-03-20 20:15:18,006:INFO:Total runtime is 1.0107818841934202 minutes
2025-03-20 20:15:18,008:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:18,008:INFO:Initializing create_model()
2025-03-20 20:15:18,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:18,008:INFO:Checking exceptions
2025-03-20 20:15:18,008:INFO:Importing libraries
2025-03-20 20:15:18,008:INFO:Copying training dataset
2025-03-20 20:15:18,015:INFO:Defining folds
2025-03-20 20:15:18,015:INFO:Declaring metric variables
2025-03-20 20:15:18,016:INFO:Importing untrained model
2025-03-20 20:15:18,018:INFO:AdaBoost Regressor Imported successfully
2025-03-20 20:15:18,021:INFO:Starting cross validation
2025-03-20 20:15:18,025:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:22,612:INFO:Calculating mean and std
2025-03-20 20:15:22,613:INFO:Creating metrics dataframe
2025-03-20 20:15:22,614:INFO:Uploading results into container
2025-03-20 20:15:22,614:INFO:Uploading model into container now
2025-03-20 20:15:22,615:INFO:_master_model_container: 16
2025-03-20 20:15:22,615:INFO:_display_container: 3
2025-03-20 20:15:22,615:INFO:AdaBoostRegressor(random_state=42)
2025-03-20 20:15:22,615:INFO:create_model() successfully completed......................................
2025-03-20 20:15:22,667:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:22,667:INFO:Creating metrics dataframe
2025-03-20 20:15:22,672:INFO:Initializing Gradient Boosting Regressor
2025-03-20 20:15:22,672:INFO:Total runtime is 1.0885462641716002 minutes
2025-03-20 20:15:22,673:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:22,674:INFO:Initializing create_model()
2025-03-20 20:15:22,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:22,674:INFO:Checking exceptions
2025-03-20 20:15:22,674:INFO:Importing libraries
2025-03-20 20:15:22,674:INFO:Copying training dataset
2025-03-20 20:15:22,681:INFO:Defining folds
2025-03-20 20:15:22,681:INFO:Declaring metric variables
2025-03-20 20:15:22,682:INFO:Importing untrained model
2025-03-20 20:15:22,684:INFO:Gradient Boosting Regressor Imported successfully
2025-03-20 20:15:22,687:INFO:Starting cross validation
2025-03-20 20:15:22,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:27,428:INFO:Calculating mean and std
2025-03-20 20:15:27,429:INFO:Creating metrics dataframe
2025-03-20 20:15:27,430:INFO:Uploading results into container
2025-03-20 20:15:27,430:INFO:Uploading model into container now
2025-03-20 20:15:27,431:INFO:_master_model_container: 17
2025-03-20 20:15:27,431:INFO:_display_container: 3
2025-03-20 20:15:27,431:INFO:GradientBoostingRegressor(random_state=42)
2025-03-20 20:15:27,431:INFO:create_model() successfully completed......................................
2025-03-20 20:15:27,481:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:27,482:INFO:Creating metrics dataframe
2025-03-20 20:15:27,487:INFO:Initializing Light Gradient Boosting Machine
2025-03-20 20:15:27,487:INFO:Total runtime is 1.1687958836555479 minutes
2025-03-20 20:15:27,489:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:27,489:INFO:Initializing create_model()
2025-03-20 20:15:27,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:27,489:INFO:Checking exceptions
2025-03-20 20:15:27,489:INFO:Importing libraries
2025-03-20 20:15:27,490:INFO:Copying training dataset
2025-03-20 20:15:27,496:INFO:Defining folds
2025-03-20 20:15:27,496:INFO:Declaring metric variables
2025-03-20 20:15:27,497:INFO:Importing untrained model
2025-03-20 20:15:27,499:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-20 20:15:27,502:INFO:Starting cross validation
2025-03-20 20:15:27,508:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:35,068:INFO:Calculating mean and std
2025-03-20 20:15:35,069:INFO:Creating metrics dataframe
2025-03-20 20:15:35,070:INFO:Uploading results into container
2025-03-20 20:15:35,071:INFO:Uploading model into container now
2025-03-20 20:15:35,071:INFO:_master_model_container: 18
2025-03-20 20:15:35,071:INFO:_display_container: 3
2025-03-20 20:15:35,072:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:15:35,072:INFO:create_model() successfully completed......................................
2025-03-20 20:15:35,122:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:35,122:INFO:Creating metrics dataframe
2025-03-20 20:15:35,127:INFO:Initializing Dummy Regressor
2025-03-20 20:15:35,127:INFO:Total runtime is 1.2961304664611815 minutes
2025-03-20 20:15:35,129:INFO:SubProcess create_model() called ==================================
2025-03-20 20:15:35,129:INFO:Initializing create_model()
2025-03-20 20:15:35,129:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32ea0bbe0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:35,129:INFO:Checking exceptions
2025-03-20 20:15:35,129:INFO:Importing libraries
2025-03-20 20:15:35,130:INFO:Copying training dataset
2025-03-20 20:15:35,136:INFO:Defining folds
2025-03-20 20:15:35,136:INFO:Declaring metric variables
2025-03-20 20:15:35,137:INFO:Importing untrained model
2025-03-20 20:15:35,139:INFO:Dummy Regressor Imported successfully
2025-03-20 20:15:35,143:INFO:Starting cross validation
2025-03-20 20:15:35,147:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:15:39,175:INFO:Calculating mean and std
2025-03-20 20:15:39,175:INFO:Creating metrics dataframe
2025-03-20 20:15:39,177:INFO:Uploading results into container
2025-03-20 20:15:39,177:INFO:Uploading model into container now
2025-03-20 20:15:39,177:INFO:_master_model_container: 19
2025-03-20 20:15:39,178:INFO:_display_container: 3
2025-03-20 20:15:39,178:INFO:DummyRegressor()
2025-03-20 20:15:39,178:INFO:create_model() successfully completed......................................
2025-03-20 20:15:39,229:INFO:SubProcess create_model() end ==================================
2025-03-20 20:15:39,229:INFO:Creating metrics dataframe
2025-03-20 20:15:39,235:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-20 20:15:39,239:INFO:Initializing create_model()
2025-03-20 20:15:39,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:15:39,239:INFO:Checking exceptions
2025-03-20 20:15:39,240:INFO:Importing libraries
2025-03-20 20:15:39,240:INFO:Copying training dataset
2025-03-20 20:15:39,247:INFO:Defining folds
2025-03-20 20:15:39,247:INFO:Declaring metric variables
2025-03-20 20:15:39,247:INFO:Importing untrained model
2025-03-20 20:15:39,247:INFO:Declaring custom model
2025-03-20 20:15:39,247:INFO:Linear Regression Imported successfully
2025-03-20 20:15:39,250:INFO:Cross validation set to False
2025-03-20 20:15:39,250:INFO:Fitting Model
2025-03-20 20:15:39,475:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000438 seconds.
2025-03-20 20:15:39,475:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:15:39,475:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:15:39,475:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:15:39,476:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:15:39,940:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:15:39,940:INFO:create_model() successfully completed......................................
2025-03-20 20:15:40,005:INFO:_master_model_container: 19
2025-03-20 20:15:40,005:INFO:_display_container: 3
2025-03-20 20:15:40,005:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:15:40,005:INFO:compare_models() successfully completed......................................
2025-03-20 20:18:03,541:INFO:Initializing finalize_model()
2025-03-20 20:18:03,542:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:18:03,544:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 20:18:03,552:INFO:Initializing create_model()
2025-03-20 20:18:03,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33009cc70>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:18:03,552:INFO:Checking exceptions
2025-03-20 20:18:03,555:INFO:Importing libraries
2025-03-20 20:18:03,555:INFO:Copying training dataset
2025-03-20 20:18:03,556:INFO:Defining folds
2025-03-20 20:18:03,556:INFO:Declaring metric variables
2025-03-20 20:18:03,556:INFO:Importing untrained model
2025-03-20 20:18:03,556:INFO:Declaring custom model
2025-03-20 20:18:03,556:INFO:Linear Regression Imported successfully
2025-03-20 20:18:03,561:INFO:Cross validation set to False
2025-03-20 20:18:03,562:INFO:Fitting Model
2025-03-20 20:18:03,824:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000476 seconds.
2025-03-20 20:18:03,824:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:18:03,824:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:18:03,824:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:18:03,824:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:18:04,354:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:18:04,354:INFO:create_model() successfully completed......................................
2025-03-20 20:18:04,420:INFO:_master_model_container: 19
2025-03-20 20:18:04,420:INFO:_display_container: 3
2025-03-20 20:18:04,427:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:18:04,427:INFO:finalize_model() successfully completed......................................
2025-03-20 20:18:04,495:INFO:Initializing save_model()
2025-03-20 20:18:04,495:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:18:04,495:INFO:Adding model into prep_pipe
2025-03-20 20:18:04,495:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:18:04,524:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 20:18:04,531:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:18:04,531:INFO:save_model() successfully completed......................................
2025-03-20 20:18:11,015:INFO:PyCaret RegressionExperiment
2025-03-20 20:18:11,015:INFO:Logging name: reg-default-name
2025-03-20 20:18:11,015:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 20:18:11,015:INFO:version 3.3.2
2025-03-20 20:18:11,015:INFO:Initializing setup()
2025-03-20 20:18:11,015:INFO:self.USI: 4ffe
2025-03-20 20:18:11,015:INFO:self._variable_keys: {'y_train', 'log_plots_param', 'pipeline', 'X', 'html_param', 'exp_name_log', 'gpu_n_jobs_param', 'USI', 'X_train', 'seed', 'logging_param', 'fold_groups_param', 'target_param', 'fold_shuffle_param', 'y', 'memory', '_ml_usecase', '_available_plots', 'transform_target_param', 'idx', 'fold_generator', 'n_jobs_param', 'X_test', 'exp_id', 'data', 'y_test', 'gpu_param'}
2025-03-20 20:18:11,015:INFO:Checking environment
2025-03-20 20:18:11,015:INFO:python_version: 3.10.16
2025-03-20 20:18:11,016:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 20:18:11,016:INFO:machine: arm64
2025-03-20 20:18:11,016:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 20:18:11,016:INFO:Memory: svmem(total=38654705664, available=13089521664, percent=66.1, used=16194846720, free=658685952, active=12442664960, inactive=12404834304, wired=3752181760)
2025-03-20 20:18:11,016:INFO:Physical Core: 11
2025-03-20 20:18:11,016:INFO:Logical Core: 11
2025-03-20 20:18:11,016:INFO:Checking libraries
2025-03-20 20:18:11,016:INFO:System:
2025-03-20 20:18:11,016:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 20:18:11,016:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 20:18:11,016:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 20:18:11,016:INFO:PyCaret required dependencies:
2025-03-20 20:18:11,016:INFO:                 pip: 25.0
2025-03-20 20:18:11,016:INFO:          setuptools: 77.0.1
2025-03-20 20:18:11,016:INFO:             pycaret: 3.3.2
2025-03-20 20:18:11,016:INFO:             IPython: 8.34.0
2025-03-20 20:18:11,016:INFO:          ipywidgets: 8.1.5
2025-03-20 20:18:11,016:INFO:                tqdm: 4.67.1
2025-03-20 20:18:11,016:INFO:               numpy: 1.26.4
2025-03-20 20:18:11,016:INFO:              pandas: 2.1.4
2025-03-20 20:18:11,016:INFO:              jinja2: 3.1.6
2025-03-20 20:18:11,016:INFO:               scipy: 1.11.4
2025-03-20 20:18:11,016:INFO:              joblib: 1.3.2
2025-03-20 20:18:11,016:INFO:             sklearn: 1.4.2
2025-03-20 20:18:11,016:INFO:                pyod: 2.0.3
2025-03-20 20:18:11,016:INFO:            imblearn: 0.13.0
2025-03-20 20:18:11,016:INFO:   category_encoders: 2.7.0
2025-03-20 20:18:11,016:INFO:            lightgbm: 4.6.0
2025-03-20 20:18:11,016:INFO:               numba: 0.61.0
2025-03-20 20:18:11,016:INFO:            requests: 2.32.3
2025-03-20 20:18:11,016:INFO:          matplotlib: 3.7.5
2025-03-20 20:18:11,016:INFO:          scikitplot: 0.3.7
2025-03-20 20:18:11,016:INFO:         yellowbrick: 1.5
2025-03-20 20:18:11,016:INFO:              plotly: 5.24.1
2025-03-20 20:18:11,016:INFO:    plotly-resampler: Not installed
2025-03-20 20:18:11,016:INFO:             kaleido: 0.2.1
2025-03-20 20:18:11,016:INFO:           schemdraw: 0.15
2025-03-20 20:18:11,016:INFO:         statsmodels: 0.14.4
2025-03-20 20:18:11,016:INFO:              sktime: 0.26.0
2025-03-20 20:18:11,016:INFO:               tbats: 1.1.3
2025-03-20 20:18:11,016:INFO:            pmdarima: 2.0.4
2025-03-20 20:18:11,016:INFO:              psutil: 7.0.0
2025-03-20 20:18:11,016:INFO:          markupsafe: 3.0.2
2025-03-20 20:18:11,016:INFO:             pickle5: Not installed
2025-03-20 20:18:11,016:INFO:         cloudpickle: 3.1.1
2025-03-20 20:18:11,016:INFO:         deprecation: 2.1.0
2025-03-20 20:18:11,016:INFO:              xxhash: 3.5.0
2025-03-20 20:18:11,016:INFO:           wurlitzer: 3.1.1
2025-03-20 20:18:11,016:INFO:PyCaret optional dependencies:
2025-03-20 20:18:11,016:INFO:                shap: Not installed
2025-03-20 20:18:11,016:INFO:           interpret: Not installed
2025-03-20 20:18:11,017:INFO:                umap: Not installed
2025-03-20 20:18:11,017:INFO:     ydata_profiling: Not installed
2025-03-20 20:18:11,017:INFO:  explainerdashboard: Not installed
2025-03-20 20:18:11,017:INFO:             autoviz: Not installed
2025-03-20 20:18:11,017:INFO:           fairlearn: Not installed
2025-03-20 20:18:11,017:INFO:          deepchecks: Not installed
2025-03-20 20:18:11,017:INFO:             xgboost: Not installed
2025-03-20 20:18:11,017:INFO:            catboost: Not installed
2025-03-20 20:18:11,017:INFO:              kmodes: Not installed
2025-03-20 20:18:11,017:INFO:             mlxtend: Not installed
2025-03-20 20:18:11,017:INFO:       statsforecast: Not installed
2025-03-20 20:18:11,017:INFO:        tune_sklearn: Not installed
2025-03-20 20:18:11,017:INFO:                 ray: Not installed
2025-03-20 20:18:11,017:INFO:            hyperopt: Not installed
2025-03-20 20:18:11,017:INFO:              optuna: Not installed
2025-03-20 20:18:11,017:INFO:               skopt: Not installed
2025-03-20 20:18:11,017:INFO:              mlflow: Not installed
2025-03-20 20:18:11,017:INFO:              gradio: Not installed
2025-03-20 20:18:11,017:INFO:             fastapi: Not installed
2025-03-20 20:18:11,017:INFO:             uvicorn: Not installed
2025-03-20 20:18:11,017:INFO:              m2cgen: Not installed
2025-03-20 20:18:11,017:INFO:           evidently: Not installed
2025-03-20 20:18:11,017:INFO:               fugue: Not installed
2025-03-20 20:18:11,017:INFO:           streamlit: 1.43.2
2025-03-20 20:18:11,017:INFO:             prophet: Not installed
2025-03-20 20:18:11,017:INFO:None
2025-03-20 20:18:11,017:INFO:Set up data.
2025-03-20 20:18:11,024:INFO:Set up folding strategy.
2025-03-20 20:18:11,024:INFO:Set up train/test split.
2025-03-20 20:18:11,029:INFO:Set up index.
2025-03-20 20:18:11,030:INFO:Assigning column types.
2025-03-20 20:18:11,035:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 20:18:11,035:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,037:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,040:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,094:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,095:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,098:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,100:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,132:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,155:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 20:18:11,157:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,160:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,215:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,217:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,220:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,274:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,275:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 20:18:11,279:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,311:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,338:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,370:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,393:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,393:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 20:18:11,430:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,452:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,512:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 20:18:11,548:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:18:11,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,629:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 20:18:11,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,749:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,750:INFO:Preparing preprocessing pipeline...
2025-03-20 20:18:11,750:INFO:Set up simple imputation.
2025-03-20 20:18:11,750:INFO:Set up removing outliers.
2025-03-20 20:18:11,750:INFO:Set up feature normalization.
2025-03-20 20:18:11,750:INFO:Set up feature selection.
2025-03-20 20:18:11,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:11,810:INFO:Set up column name cleaning.
2025-03-20 20:18:11,845:INFO:Finished creating preprocessing pipeline.
2025-03-20 20:18:11,851:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 20:18:11,851:INFO:Creating final display dataframe.
2025-03-20 20:18:11,938:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              4ffe
2025-03-20 20:18:12,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:12,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:12,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:12,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:18:12,059:INFO:setup() successfully completed in 1.05s...............
2025-03-20 20:18:12,060:INFO:Initializing create_model()
2025-03-20 20:18:12,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3303abfd0>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:18:12,060:INFO:Checking exceptions
2025-03-20 20:18:12,067:INFO:Importing libraries
2025-03-20 20:18:12,067:INFO:Copying training dataset
2025-03-20 20:18:12,075:INFO:Defining folds
2025-03-20 20:18:12,075:INFO:Declaring metric variables
2025-03-20 20:18:12,078:INFO:Importing untrained model
2025-03-20 20:18:12,082:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:18:12,086:INFO:Starting cross validation
2025-03-20 20:18:12,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:18:16,126:INFO:Calculating mean and std
2025-03-20 20:18:16,127:INFO:Creating metrics dataframe
2025-03-20 20:18:16,130:INFO:Finalizing model
2025-03-20 20:18:16,346:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000500 seconds.
2025-03-20 20:18:16,346:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:18:16,346:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:18:16,347:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:18:16,347:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:18:16,861:INFO:Uploading results into container
2025-03-20 20:18:16,862:INFO:Uploading model into container now
2025-03-20 20:18:16,867:INFO:_master_model_container: 1
2025-03-20 20:18:16,867:INFO:_display_container: 2
2025-03-20 20:18:16,868:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:18:16,868:INFO:create_model() successfully completed......................................
2025-03-20 20:18:16,929:INFO:Initializing finalize_model()
2025-03-20 20:18:16,929:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3303abfd0>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:18:16,929:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 20:18:16,932:INFO:Initializing create_model()
2025-03-20 20:18:16,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3303abfd0>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:18:16,932:INFO:Checking exceptions
2025-03-20 20:18:16,933:INFO:Importing libraries
2025-03-20 20:18:16,933:INFO:Copying training dataset
2025-03-20 20:18:16,934:INFO:Defining folds
2025-03-20 20:18:16,934:INFO:Declaring metric variables
2025-03-20 20:18:16,934:INFO:Importing untrained model
2025-03-20 20:18:16,934:INFO:Declaring custom model
2025-03-20 20:18:16,934:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:18:16,938:INFO:Cross validation set to False
2025-03-20 20:18:16,938:INFO:Fitting Model
2025-03-20 20:18:17,186:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000555 seconds.
2025-03-20 20:18:17,186:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:18:17,186:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:18:17,186:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:18:17,186:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:18:17,661:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:18:17,662:INFO:create_model() successfully completed......................................
2025-03-20 20:18:17,712:INFO:_master_model_container: 1
2025-03-20 20:18:17,712:INFO:_display_container: 2
2025-03-20 20:18:17,719:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:18:17,719:INFO:finalize_model() successfully completed......................................
2025-03-20 20:18:17,786:INFO:Initializing save_model()
2025-03-20 20:18:17,786:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model.pkl, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:18:17,786:INFO:Adding model into prep_pipe
2025-03-20 20:18:17,786:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:18:17,814:INFO:halfmarathon_model.pkl.pkl saved in current working directory
2025-03-20 20:18:17,821:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:18:17,821:INFO:save_model() successfully completed......................................
2025-03-20 20:25:25,103:INFO:Initializing load_model()
2025-03-20 20:25:25,103:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 20:26:18,389:INFO:Initializing load_model()
2025-03-20 20:26:18,390:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 20:26:54,690:INFO:Initializing load_model()
2025-03-20 20:26:54,690:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 20:27:46,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:27:46,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:27:46,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:27:46,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 20:28:47,442:INFO:PyCaret RegressionExperiment
2025-03-20 20:28:47,442:INFO:Logging name: reg-default-name
2025-03-20 20:28:47,442:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 20:28:47,442:INFO:version 3.3.2
2025-03-20 20:28:47,442:INFO:Initializing setup()
2025-03-20 20:28:47,442:INFO:self.USI: d3ff
2025-03-20 20:28:47,442:INFO:self._variable_keys: {'html_param', 'log_plots_param', 'X', 'y', 'idx', 'exp_id', 'memory', 'y_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', 'logging_param', 'exp_name_log', 'X_test', '_ml_usecase', 'fold_groups_param', 'pipeline', '_available_plots', 'USI', 'seed', 'y_train', 'X_train', 'fold_generator', 'transform_target_param', 'gpu_param', 'data'}
2025-03-20 20:28:47,442:INFO:Checking environment
2025-03-20 20:28:47,442:INFO:python_version: 3.10.16
2025-03-20 20:28:47,442:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 20:28:47,442:INFO:machine: arm64
2025-03-20 20:28:47,442:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 20:28:47,442:INFO:Memory: svmem(total=38654705664, available=13537001472, percent=65.0, used=16400859136, free=192446464, active=13378486272, inactive=13177569280, wired=3022372864)
2025-03-20 20:28:47,442:INFO:Physical Core: 11
2025-03-20 20:28:47,442:INFO:Logical Core: 11
2025-03-20 20:28:47,442:INFO:Checking libraries
2025-03-20 20:28:47,442:INFO:System:
2025-03-20 20:28:47,442:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 20:28:47,442:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 20:28:47,442:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 20:28:47,442:INFO:PyCaret required dependencies:
2025-03-20 20:28:47,544:INFO:                 pip: 25.0
2025-03-20 20:28:47,544:INFO:          setuptools: 77.0.1
2025-03-20 20:28:47,544:INFO:             pycaret: 3.3.2
2025-03-20 20:28:47,544:INFO:             IPython: 8.34.0
2025-03-20 20:28:47,544:INFO:          ipywidgets: 8.1.5
2025-03-20 20:28:47,544:INFO:                tqdm: 4.67.1
2025-03-20 20:28:47,544:INFO:               numpy: 1.26.4
2025-03-20 20:28:47,544:INFO:              pandas: 2.1.4
2025-03-20 20:28:47,544:INFO:              jinja2: 3.1.6
2025-03-20 20:28:47,544:INFO:               scipy: 1.11.4
2025-03-20 20:28:47,544:INFO:              joblib: 1.3.2
2025-03-20 20:28:47,544:INFO:             sklearn: 1.4.2
2025-03-20 20:28:47,545:INFO:                pyod: 2.0.3
2025-03-20 20:28:47,545:INFO:            imblearn: 0.13.0
2025-03-20 20:28:47,545:INFO:   category_encoders: 2.7.0
2025-03-20 20:28:47,545:INFO:            lightgbm: 4.6.0
2025-03-20 20:28:47,545:INFO:               numba: 0.61.0
2025-03-20 20:28:47,545:INFO:            requests: 2.32.3
2025-03-20 20:28:47,545:INFO:          matplotlib: 3.7.5
2025-03-20 20:28:47,545:INFO:          scikitplot: 0.3.7
2025-03-20 20:28:47,545:INFO:         yellowbrick: 1.5
2025-03-20 20:28:47,545:INFO:              plotly: 5.24.1
2025-03-20 20:28:47,545:INFO:    plotly-resampler: Not installed
2025-03-20 20:28:47,545:INFO:             kaleido: 0.2.1
2025-03-20 20:28:47,545:INFO:           schemdraw: 0.15
2025-03-20 20:28:47,545:INFO:         statsmodels: 0.14.4
2025-03-20 20:28:47,545:INFO:              sktime: 0.26.0
2025-03-20 20:28:47,545:INFO:               tbats: 1.1.3
2025-03-20 20:28:47,545:INFO:            pmdarima: 2.0.4
2025-03-20 20:28:47,545:INFO:              psutil: 7.0.0
2025-03-20 20:28:47,545:INFO:          markupsafe: 3.0.2
2025-03-20 20:28:47,545:INFO:             pickle5: Not installed
2025-03-20 20:28:47,545:INFO:         cloudpickle: 3.1.1
2025-03-20 20:28:47,545:INFO:         deprecation: 2.1.0
2025-03-20 20:28:47,545:INFO:              xxhash: 3.5.0
2025-03-20 20:28:47,545:INFO:           wurlitzer: 3.1.1
2025-03-20 20:28:47,545:INFO:PyCaret optional dependencies:
2025-03-20 20:28:47,552:INFO:                shap: Not installed
2025-03-20 20:28:47,552:INFO:           interpret: Not installed
2025-03-20 20:28:47,552:INFO:                umap: Not installed
2025-03-20 20:28:47,553:INFO:     ydata_profiling: Not installed
2025-03-20 20:28:47,553:INFO:  explainerdashboard: Not installed
2025-03-20 20:28:47,553:INFO:             autoviz: Not installed
2025-03-20 20:28:47,553:INFO:           fairlearn: Not installed
2025-03-20 20:28:47,553:INFO:          deepchecks: Not installed
2025-03-20 20:28:47,553:INFO:             xgboost: Not installed
2025-03-20 20:28:47,553:INFO:            catboost: Not installed
2025-03-20 20:28:47,553:INFO:              kmodes: Not installed
2025-03-20 20:28:47,553:INFO:             mlxtend: Not installed
2025-03-20 20:28:47,553:INFO:       statsforecast: Not installed
2025-03-20 20:28:47,553:INFO:        tune_sklearn: Not installed
2025-03-20 20:28:47,553:INFO:                 ray: Not installed
2025-03-20 20:28:47,553:INFO:            hyperopt: Not installed
2025-03-20 20:28:47,553:INFO:              optuna: Not installed
2025-03-20 20:28:47,553:INFO:               skopt: Not installed
2025-03-20 20:28:47,553:INFO:              mlflow: Not installed
2025-03-20 20:28:47,553:INFO:              gradio: Not installed
2025-03-20 20:28:47,553:INFO:             fastapi: Not installed
2025-03-20 20:28:47,553:INFO:             uvicorn: Not installed
2025-03-20 20:28:47,553:INFO:              m2cgen: Not installed
2025-03-20 20:28:47,553:INFO:           evidently: Not installed
2025-03-20 20:28:47,553:INFO:               fugue: Not installed
2025-03-20 20:28:47,553:INFO:           streamlit: 1.43.2
2025-03-20 20:28:47,553:INFO:             prophet: Not installed
2025-03-20 20:28:47,553:INFO:None
2025-03-20 20:28:47,553:INFO:Set up data.
2025-03-20 20:28:47,557:INFO:Set up folding strategy.
2025-03-20 20:28:47,557:INFO:Set up train/test split.
2025-03-20 20:28:47,562:INFO:Set up index.
2025-03-20 20:28:47,562:INFO:Assigning column types.
2025-03-20 20:28:47,566:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 20:28:47,566:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,568:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,603:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,626:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,626:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,628:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,631:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,663:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,686:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 20:28:47,688:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,690:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,722:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,747:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,750:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,805:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 20:28:47,809:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,841:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,863:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,868:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,922:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 20:28:47,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,980:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:47,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:47,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,017:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:48,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:28:48,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,039:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 20:28:48,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:48,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:28:48,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,156:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 20:28:48,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,277:INFO:Preparing preprocessing pipeline...
2025-03-20 20:28:48,277:INFO:Set up simple imputation.
2025-03-20 20:28:48,277:INFO:Set up removing outliers.
2025-03-20 20:28:48,277:INFO:Set up feature normalization.
2025-03-20 20:28:48,277:INFO:Set up feature selection.
2025-03-20 20:28:48,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,337:INFO:Set up column name cleaning.
2025-03-20 20:28:48,374:INFO:Finished creating preprocessing pipeline.
2025-03-20 20:28:48,381:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 20:28:48,381:INFO:Creating final display dataframe.
2025-03-20 20:28:48,470:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              d3ff
2025-03-20 20:28:48,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:28:48,590:INFO:setup() successfully completed in 1.15s...............
2025-03-20 20:28:54,711:INFO:Initializing compare_models()
2025-03-20 20:28:54,711:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-20 20:28:54,711:INFO:Checking exceptions
2025-03-20 20:28:54,715:INFO:Preparing display monitor
2025-03-20 20:28:54,779:INFO:Initializing Linear Regression
2025-03-20 20:28:54,779:INFO:Total runtime is 3.949801127115885e-06 minutes
2025-03-20 20:28:54,782:INFO:SubProcess create_model() called ==================================
2025-03-20 20:28:54,782:INFO:Initializing create_model()
2025-03-20 20:28:54,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:28:54,782:INFO:Checking exceptions
2025-03-20 20:28:54,783:INFO:Importing libraries
2025-03-20 20:28:54,783:INFO:Copying training dataset
2025-03-20 20:28:54,795:INFO:Defining folds
2025-03-20 20:28:54,795:INFO:Declaring metric variables
2025-03-20 20:28:54,798:INFO:Importing untrained model
2025-03-20 20:28:54,801:INFO:Linear Regression Imported successfully
2025-03-20 20:28:54,805:INFO:Starting cross validation
2025-03-20 20:28:54,814:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:28:57,777:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001545 seconds.
2025-03-20 20:28:57,778:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,778:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:28:57,778:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,778:INFO:[LightGBM] [Info] Start training from score 7335.329512
2025-03-20 20:28:57,800:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001451 seconds.
2025-03-20 20:28:57,801:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 20:28:57,801:INFO:And if memory is not enough, you can set `force_col_wise=true`.[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001659 seconds.
2025-03-20 20:28:57,801:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,801:INFO:
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001503 seconds.
2025-03-20 20:28:57,801:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,801:INFO:[LightGBM] [Info] Start training from score 7351.855824
2025-03-20 20:28:57,802:INFO:[LightGBM] [Info] Start training from score 7337.208662
2025-03-20 20:28:57,803:INFO:[LightGBM] [Info] Start training from score 7343.422373
2025-03-20 20:28:57,823:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002131 seconds.
2025-03-20 20:28:57,823:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,823:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:28:57,823:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,824:INFO:[LightGBM] [Info] Start training from score 7341.151421
2025-03-20 20:28:57,827:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001602 seconds.
2025-03-20 20:28:57,827:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,827:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:28:57,827:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,828:INFO:[LightGBM] [Info] Start training from score 7348.947934
2025-03-20 20:28:57,838:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001808 seconds.
2025-03-20 20:28:57,839:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,839:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:28:57,839:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,840:INFO:[LightGBM] [Info] Start training from score 7347.301409
2025-03-20 20:28:57,851:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001389 seconds.
2025-03-20 20:28:57,851:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,851:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:28:57,851:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 12
2025-03-20 20:28:57,852:INFO:[LightGBM] [Info] Start training from score 7341.090685
2025-03-20 20:28:57,933:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001506 seconds.
2025-03-20 20:28:57,933:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:57,933:INFO:[LightGBM] [Info] Total Bins 2613
2025-03-20 20:28:57,933:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:57,934:INFO:[LightGBM] [Info] Start training from score 7334.950880
2025-03-20 20:28:58,160:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001148 seconds.
2025-03-20 20:28:58,160:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:28:58,160:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:28:58,160:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 12
2025-03-20 20:28:58,161:INFO:[LightGBM] [Info] Start training from score 7346.140116
2025-03-20 20:29:01,673:INFO:Calculating mean and std
2025-03-20 20:29:01,675:INFO:Creating metrics dataframe
2025-03-20 20:29:01,677:INFO:Uploading results into container
2025-03-20 20:29:01,678:INFO:Uploading model into container now
2025-03-20 20:29:01,679:INFO:_master_model_container: 1
2025-03-20 20:29:01,679:INFO:_display_container: 2
2025-03-20 20:29:01,679:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:29:01,679:INFO:create_model() successfully completed......................................
2025-03-20 20:29:01,748:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:01,748:INFO:Creating metrics dataframe
2025-03-20 20:29:01,752:INFO:Initializing Lasso Regression
2025-03-20 20:29:01,752:INFO:Total runtime is 0.11621386607487996 minutes
2025-03-20 20:29:01,754:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:01,754:INFO:Initializing create_model()
2025-03-20 20:29:01,754:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:01,754:INFO:Checking exceptions
2025-03-20 20:29:01,754:INFO:Importing libraries
2025-03-20 20:29:01,754:INFO:Copying training dataset
2025-03-20 20:29:01,761:INFO:Defining folds
2025-03-20 20:29:01,761:INFO:Declaring metric variables
2025-03-20 20:29:01,763:INFO:Importing untrained model
2025-03-20 20:29:01,764:INFO:Lasso Regression Imported successfully
2025-03-20 20:29:01,768:INFO:Starting cross validation
2025-03-20 20:29:01,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:06,406:INFO:Calculating mean and std
2025-03-20 20:29:06,407:INFO:Creating metrics dataframe
2025-03-20 20:29:06,408:INFO:Uploading results into container
2025-03-20 20:29:06,408:INFO:Uploading model into container now
2025-03-20 20:29:06,409:INFO:_master_model_container: 2
2025-03-20 20:29:06,409:INFO:_display_container: 2
2025-03-20 20:29:06,409:INFO:Lasso(random_state=42)
2025-03-20 20:29:06,409:INFO:create_model() successfully completed......................................
2025-03-20 20:29:06,463:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:06,463:INFO:Creating metrics dataframe
2025-03-20 20:29:06,467:INFO:Initializing Ridge Regression
2025-03-20 20:29:06,467:INFO:Total runtime is 0.19480215311050414 minutes
2025-03-20 20:29:06,469:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:06,469:INFO:Initializing create_model()
2025-03-20 20:29:06,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:06,469:INFO:Checking exceptions
2025-03-20 20:29:06,469:INFO:Importing libraries
2025-03-20 20:29:06,469:INFO:Copying training dataset
2025-03-20 20:29:06,476:INFO:Defining folds
2025-03-20 20:29:06,476:INFO:Declaring metric variables
2025-03-20 20:29:06,478:INFO:Importing untrained model
2025-03-20 20:29:06,479:INFO:Ridge Regression Imported successfully
2025-03-20 20:29:06,483:INFO:Starting cross validation
2025-03-20 20:29:06,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:10,579:INFO:Calculating mean and std
2025-03-20 20:29:10,579:INFO:Creating metrics dataframe
2025-03-20 20:29:10,580:INFO:Uploading results into container
2025-03-20 20:29:10,581:INFO:Uploading model into container now
2025-03-20 20:29:10,581:INFO:_master_model_container: 3
2025-03-20 20:29:10,582:INFO:_display_container: 2
2025-03-20 20:29:10,582:INFO:Ridge(random_state=42)
2025-03-20 20:29:10,582:INFO:create_model() successfully completed......................................
2025-03-20 20:29:10,632:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:10,632:INFO:Creating metrics dataframe
2025-03-20 20:29:10,636:INFO:Initializing Elastic Net
2025-03-20 20:29:10,636:INFO:Total runtime is 0.264290984471639 minutes
2025-03-20 20:29:10,638:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:10,638:INFO:Initializing create_model()
2025-03-20 20:29:10,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:10,638:INFO:Checking exceptions
2025-03-20 20:29:10,638:INFO:Importing libraries
2025-03-20 20:29:10,638:INFO:Copying training dataset
2025-03-20 20:29:10,645:INFO:Defining folds
2025-03-20 20:29:10,645:INFO:Declaring metric variables
2025-03-20 20:29:10,646:INFO:Importing untrained model
2025-03-20 20:29:10,648:INFO:Elastic Net Imported successfully
2025-03-20 20:29:10,652:INFO:Starting cross validation
2025-03-20 20:29:10,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:14,674:INFO:Calculating mean and std
2025-03-20 20:29:14,675:INFO:Creating metrics dataframe
2025-03-20 20:29:14,676:INFO:Uploading results into container
2025-03-20 20:29:14,676:INFO:Uploading model into container now
2025-03-20 20:29:14,677:INFO:_master_model_container: 4
2025-03-20 20:29:14,677:INFO:_display_container: 2
2025-03-20 20:29:14,677:INFO:ElasticNet(random_state=42)
2025-03-20 20:29:14,677:INFO:create_model() successfully completed......................................
2025-03-20 20:29:14,728:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:14,728:INFO:Creating metrics dataframe
2025-03-20 20:29:14,732:INFO:Initializing Least Angle Regression
2025-03-20 20:29:14,732:INFO:Total runtime is 0.33254983425140383 minutes
2025-03-20 20:29:14,734:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:14,734:INFO:Initializing create_model()
2025-03-20 20:29:14,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:14,734:INFO:Checking exceptions
2025-03-20 20:29:14,734:INFO:Importing libraries
2025-03-20 20:29:14,735:INFO:Copying training dataset
2025-03-20 20:29:14,741:INFO:Defining folds
2025-03-20 20:29:14,741:INFO:Declaring metric variables
2025-03-20 20:29:14,742:INFO:Importing untrained model
2025-03-20 20:29:14,744:INFO:Least Angle Regression Imported successfully
2025-03-20 20:29:14,748:INFO:Starting cross validation
2025-03-20 20:29:14,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:18,546:INFO:Calculating mean and std
2025-03-20 20:29:18,547:INFO:Creating metrics dataframe
2025-03-20 20:29:18,548:INFO:Uploading results into container
2025-03-20 20:29:18,549:INFO:Uploading model into container now
2025-03-20 20:29:18,549:INFO:_master_model_container: 5
2025-03-20 20:29:18,549:INFO:_display_container: 2
2025-03-20 20:29:18,550:INFO:Lars(random_state=42)
2025-03-20 20:29:18,550:INFO:create_model() successfully completed......................................
2025-03-20 20:29:18,601:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:18,601:INFO:Creating metrics dataframe
2025-03-20 20:29:18,605:INFO:Initializing Lasso Least Angle Regression
2025-03-20 20:29:18,605:INFO:Total runtime is 0.3971092661221822 minutes
2025-03-20 20:29:18,607:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:18,607:INFO:Initializing create_model()
2025-03-20 20:29:18,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:18,607:INFO:Checking exceptions
2025-03-20 20:29:18,608:INFO:Importing libraries
2025-03-20 20:29:18,608:INFO:Copying training dataset
2025-03-20 20:29:18,614:INFO:Defining folds
2025-03-20 20:29:18,614:INFO:Declaring metric variables
2025-03-20 20:29:18,616:INFO:Importing untrained model
2025-03-20 20:29:18,617:INFO:Lasso Least Angle Regression Imported successfully
2025-03-20 20:29:18,621:INFO:Starting cross validation
2025-03-20 20:29:18,625:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:22,671:INFO:Calculating mean and std
2025-03-20 20:29:22,672:INFO:Creating metrics dataframe
2025-03-20 20:29:22,673:INFO:Uploading results into container
2025-03-20 20:29:22,673:INFO:Uploading model into container now
2025-03-20 20:29:22,674:INFO:_master_model_container: 6
2025-03-20 20:29:22,674:INFO:_display_container: 2
2025-03-20 20:29:22,674:INFO:LassoLars(random_state=42)
2025-03-20 20:29:22,674:INFO:create_model() successfully completed......................................
2025-03-20 20:29:22,724:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:22,724:INFO:Creating metrics dataframe
2025-03-20 20:29:22,728:INFO:Initializing Orthogonal Matching Pursuit
2025-03-20 20:29:22,728:INFO:Total runtime is 0.46582393248875936 minutes
2025-03-20 20:29:22,730:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:22,730:INFO:Initializing create_model()
2025-03-20 20:29:22,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:22,730:INFO:Checking exceptions
2025-03-20 20:29:22,731:INFO:Importing libraries
2025-03-20 20:29:22,731:INFO:Copying training dataset
2025-03-20 20:29:22,737:INFO:Defining folds
2025-03-20 20:29:22,737:INFO:Declaring metric variables
2025-03-20 20:29:22,739:INFO:Importing untrained model
2025-03-20 20:29:22,741:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:29:22,744:INFO:Starting cross validation
2025-03-20 20:29:22,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:26,899:INFO:Calculating mean and std
2025-03-20 20:29:26,900:INFO:Creating metrics dataframe
2025-03-20 20:29:26,901:INFO:Uploading results into container
2025-03-20 20:29:26,901:INFO:Uploading model into container now
2025-03-20 20:29:26,902:INFO:_master_model_container: 7
2025-03-20 20:29:26,902:INFO:_display_container: 2
2025-03-20 20:29:26,902:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:29:26,902:INFO:create_model() successfully completed......................................
2025-03-20 20:29:26,953:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:26,953:INFO:Creating metrics dataframe
2025-03-20 20:29:26,957:INFO:Initializing Bayesian Ridge
2025-03-20 20:29:26,957:INFO:Total runtime is 0.5363046169281006 minutes
2025-03-20 20:29:26,959:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:26,959:INFO:Initializing create_model()
2025-03-20 20:29:26,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:26,959:INFO:Checking exceptions
2025-03-20 20:29:26,959:INFO:Importing libraries
2025-03-20 20:29:26,959:INFO:Copying training dataset
2025-03-20 20:29:26,966:INFO:Defining folds
2025-03-20 20:29:26,966:INFO:Declaring metric variables
2025-03-20 20:29:26,968:INFO:Importing untrained model
2025-03-20 20:29:26,969:INFO:Bayesian Ridge Imported successfully
2025-03-20 20:29:26,973:INFO:Starting cross validation
2025-03-20 20:29:26,977:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:31,046:INFO:Calculating mean and std
2025-03-20 20:29:31,046:INFO:Creating metrics dataframe
2025-03-20 20:29:31,048:INFO:Uploading results into container
2025-03-20 20:29:31,048:INFO:Uploading model into container now
2025-03-20 20:29:31,048:INFO:_master_model_container: 8
2025-03-20 20:29:31,048:INFO:_display_container: 2
2025-03-20 20:29:31,049:INFO:BayesianRidge()
2025-03-20 20:29:31,049:INFO:create_model() successfully completed......................................
2025-03-20 20:29:31,099:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:31,099:INFO:Creating metrics dataframe
2025-03-20 20:29:31,103:INFO:Initializing Passive Aggressive Regressor
2025-03-20 20:29:31,103:INFO:Total runtime is 0.6054072499275208 minutes
2025-03-20 20:29:31,105:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:31,105:INFO:Initializing create_model()
2025-03-20 20:29:31,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:31,105:INFO:Checking exceptions
2025-03-20 20:29:31,105:INFO:Importing libraries
2025-03-20 20:29:31,105:INFO:Copying training dataset
2025-03-20 20:29:31,112:INFO:Defining folds
2025-03-20 20:29:31,112:INFO:Declaring metric variables
2025-03-20 20:29:31,114:INFO:Importing untrained model
2025-03-20 20:29:31,116:INFO:Passive Aggressive Regressor Imported successfully
2025-03-20 20:29:31,119:INFO:Starting cross validation
2025-03-20 20:29:31,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:35,124:INFO:Calculating mean and std
2025-03-20 20:29:35,125:INFO:Creating metrics dataframe
2025-03-20 20:29:35,126:INFO:Uploading results into container
2025-03-20 20:29:35,126:INFO:Uploading model into container now
2025-03-20 20:29:35,127:INFO:_master_model_container: 9
2025-03-20 20:29:35,127:INFO:_display_container: 2
2025-03-20 20:29:35,127:INFO:PassiveAggressiveRegressor(random_state=42)
2025-03-20 20:29:35,127:INFO:create_model() successfully completed......................................
2025-03-20 20:29:35,177:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:35,177:INFO:Creating metrics dataframe
2025-03-20 20:29:35,181:INFO:Initializing Huber Regressor
2025-03-20 20:29:35,181:INFO:Total runtime is 0.673371716340383 minutes
2025-03-20 20:29:35,183:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:35,183:INFO:Initializing create_model()
2025-03-20 20:29:35,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:35,183:INFO:Checking exceptions
2025-03-20 20:29:35,183:INFO:Importing libraries
2025-03-20 20:29:35,184:INFO:Copying training dataset
2025-03-20 20:29:35,190:INFO:Defining folds
2025-03-20 20:29:35,190:INFO:Declaring metric variables
2025-03-20 20:29:35,191:INFO:Importing untrained model
2025-03-20 20:29:35,193:INFO:Huber Regressor Imported successfully
2025-03-20 20:29:35,197:INFO:Starting cross validation
2025-03-20 20:29:35,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:39,362:INFO:Calculating mean and std
2025-03-20 20:29:39,362:INFO:Creating metrics dataframe
2025-03-20 20:29:39,363:INFO:Uploading results into container
2025-03-20 20:29:39,364:INFO:Uploading model into container now
2025-03-20 20:29:39,364:INFO:_master_model_container: 10
2025-03-20 20:29:39,364:INFO:_display_container: 2
2025-03-20 20:29:39,365:INFO:HuberRegressor()
2025-03-20 20:29:39,365:INFO:create_model() successfully completed......................................
2025-03-20 20:29:39,414:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:39,414:INFO:Creating metrics dataframe
2025-03-20 20:29:39,419:INFO:Initializing K Neighbors Regressor
2025-03-20 20:29:39,419:INFO:Total runtime is 0.7440034031867981 minutes
2025-03-20 20:29:39,421:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:39,421:INFO:Initializing create_model()
2025-03-20 20:29:39,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:39,421:INFO:Checking exceptions
2025-03-20 20:29:39,421:INFO:Importing libraries
2025-03-20 20:29:39,422:INFO:Copying training dataset
2025-03-20 20:29:39,428:INFO:Defining folds
2025-03-20 20:29:39,428:INFO:Declaring metric variables
2025-03-20 20:29:39,430:INFO:Importing untrained model
2025-03-20 20:29:39,431:INFO:K Neighbors Regressor Imported successfully
2025-03-20 20:29:39,435:INFO:Starting cross validation
2025-03-20 20:29:39,438:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:43,520:INFO:Calculating mean and std
2025-03-20 20:29:43,520:INFO:Creating metrics dataframe
2025-03-20 20:29:43,521:INFO:Uploading results into container
2025-03-20 20:29:43,522:INFO:Uploading model into container now
2025-03-20 20:29:43,522:INFO:_master_model_container: 11
2025-03-20 20:29:43,522:INFO:_display_container: 2
2025-03-20 20:29:43,523:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-20 20:29:43,523:INFO:create_model() successfully completed......................................
2025-03-20 20:29:43,573:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:43,573:INFO:Creating metrics dataframe
2025-03-20 20:29:43,578:INFO:Initializing Decision Tree Regressor
2025-03-20 20:29:43,578:INFO:Total runtime is 0.8133146166801453 minutes
2025-03-20 20:29:43,580:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:43,580:INFO:Initializing create_model()
2025-03-20 20:29:43,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:43,580:INFO:Checking exceptions
2025-03-20 20:29:43,580:INFO:Importing libraries
2025-03-20 20:29:43,580:INFO:Copying training dataset
2025-03-20 20:29:43,587:INFO:Defining folds
2025-03-20 20:29:43,587:INFO:Declaring metric variables
2025-03-20 20:29:43,588:INFO:Importing untrained model
2025-03-20 20:29:43,590:INFO:Decision Tree Regressor Imported successfully
2025-03-20 20:29:43,594:INFO:Starting cross validation
2025-03-20 20:29:43,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:47,461:INFO:Calculating mean and std
2025-03-20 20:29:47,462:INFO:Creating metrics dataframe
2025-03-20 20:29:47,463:INFO:Uploading results into container
2025-03-20 20:29:47,463:INFO:Uploading model into container now
2025-03-20 20:29:47,464:INFO:_master_model_container: 12
2025-03-20 20:29:47,464:INFO:_display_container: 2
2025-03-20 20:29:47,464:INFO:DecisionTreeRegressor(random_state=42)
2025-03-20 20:29:47,464:INFO:create_model() successfully completed......................................
2025-03-20 20:29:47,515:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:47,515:INFO:Creating metrics dataframe
2025-03-20 20:29:47,519:INFO:Initializing Random Forest Regressor
2025-03-20 20:29:47,520:INFO:Total runtime is 0.8790132323900859 minutes
2025-03-20 20:29:47,521:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:47,522:INFO:Initializing create_model()
2025-03-20 20:29:47,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:47,522:INFO:Checking exceptions
2025-03-20 20:29:47,522:INFO:Importing libraries
2025-03-20 20:29:47,522:INFO:Copying training dataset
2025-03-20 20:29:47,528:INFO:Defining folds
2025-03-20 20:29:47,528:INFO:Declaring metric variables
2025-03-20 20:29:47,530:INFO:Importing untrained model
2025-03-20 20:29:47,532:INFO:Random Forest Regressor Imported successfully
2025-03-20 20:29:47,536:INFO:Starting cross validation
2025-03-20 20:29:47,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:53,027:INFO:Calculating mean and std
2025-03-20 20:29:53,028:INFO:Creating metrics dataframe
2025-03-20 20:29:53,029:INFO:Uploading results into container
2025-03-20 20:29:53,030:INFO:Uploading model into container now
2025-03-20 20:29:53,030:INFO:_master_model_container: 13
2025-03-20 20:29:53,030:INFO:_display_container: 2
2025-03-20 20:29:53,031:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:29:53,031:INFO:create_model() successfully completed......................................
2025-03-20 20:29:53,081:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:53,081:INFO:Creating metrics dataframe
2025-03-20 20:29:53,086:INFO:Initializing Extra Trees Regressor
2025-03-20 20:29:53,086:INFO:Total runtime is 0.9717903494834901 minutes
2025-03-20 20:29:53,088:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:53,088:INFO:Initializing create_model()
2025-03-20 20:29:53,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:53,089:INFO:Checking exceptions
2025-03-20 20:29:53,089:INFO:Importing libraries
2025-03-20 20:29:53,089:INFO:Copying training dataset
2025-03-20 20:29:53,096:INFO:Defining folds
2025-03-20 20:29:53,096:INFO:Declaring metric variables
2025-03-20 20:29:53,097:INFO:Importing untrained model
2025-03-20 20:29:53,099:INFO:Extra Trees Regressor Imported successfully
2025-03-20 20:29:53,109:INFO:Starting cross validation
2025-03-20 20:29:53,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:29:57,660:INFO:Calculating mean and std
2025-03-20 20:29:57,660:INFO:Creating metrics dataframe
2025-03-20 20:29:57,662:INFO:Uploading results into container
2025-03-20 20:29:57,662:INFO:Uploading model into container now
2025-03-20 20:29:57,662:INFO:_master_model_container: 14
2025-03-20 20:29:57,662:INFO:_display_container: 2
2025-03-20 20:29:57,663:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:29:57,663:INFO:create_model() successfully completed......................................
2025-03-20 20:29:57,713:INFO:SubProcess create_model() end ==================================
2025-03-20 20:29:57,713:INFO:Creating metrics dataframe
2025-03-20 20:29:57,718:INFO:Initializing AdaBoost Regressor
2025-03-20 20:29:57,719:INFO:Total runtime is 1.0489954988161723 minutes
2025-03-20 20:29:57,720:INFO:SubProcess create_model() called ==================================
2025-03-20 20:29:57,720:INFO:Initializing create_model()
2025-03-20 20:29:57,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:29:57,721:INFO:Checking exceptions
2025-03-20 20:29:57,721:INFO:Importing libraries
2025-03-20 20:29:57,721:INFO:Copying training dataset
2025-03-20 20:29:57,728:INFO:Defining folds
2025-03-20 20:29:57,728:INFO:Declaring metric variables
2025-03-20 20:29:57,729:INFO:Importing untrained model
2025-03-20 20:29:57,731:INFO:AdaBoost Regressor Imported successfully
2025-03-20 20:29:57,734:INFO:Starting cross validation
2025-03-20 20:29:57,739:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:30:02,144:INFO:Calculating mean and std
2025-03-20 20:30:02,144:INFO:Creating metrics dataframe
2025-03-20 20:30:02,145:INFO:Uploading results into container
2025-03-20 20:30:02,146:INFO:Uploading model into container now
2025-03-20 20:30:02,146:INFO:_master_model_container: 15
2025-03-20 20:30:02,146:INFO:_display_container: 2
2025-03-20 20:30:02,146:INFO:AdaBoostRegressor(random_state=42)
2025-03-20 20:30:02,147:INFO:create_model() successfully completed......................................
2025-03-20 20:30:02,196:INFO:SubProcess create_model() end ==================================
2025-03-20 20:30:02,196:INFO:Creating metrics dataframe
2025-03-20 20:30:02,201:INFO:Initializing Gradient Boosting Regressor
2025-03-20 20:30:02,201:INFO:Total runtime is 1.1237060666084289 minutes
2025-03-20 20:30:02,203:INFO:SubProcess create_model() called ==================================
2025-03-20 20:30:02,203:INFO:Initializing create_model()
2025-03-20 20:30:02,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:02,203:INFO:Checking exceptions
2025-03-20 20:30:02,203:INFO:Importing libraries
2025-03-20 20:30:02,204:INFO:Copying training dataset
2025-03-20 20:30:02,210:INFO:Defining folds
2025-03-20 20:30:02,210:INFO:Declaring metric variables
2025-03-20 20:30:02,212:INFO:Importing untrained model
2025-03-20 20:30:02,214:INFO:Gradient Boosting Regressor Imported successfully
2025-03-20 20:30:02,218:INFO:Starting cross validation
2025-03-20 20:30:02,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:30:07,302:INFO:Calculating mean and std
2025-03-20 20:30:07,303:INFO:Creating metrics dataframe
2025-03-20 20:30:07,304:INFO:Uploading results into container
2025-03-20 20:30:07,304:INFO:Uploading model into container now
2025-03-20 20:30:07,305:INFO:_master_model_container: 16
2025-03-20 20:30:07,305:INFO:_display_container: 2
2025-03-20 20:30:07,305:INFO:GradientBoostingRegressor(random_state=42)
2025-03-20 20:30:07,305:INFO:create_model() successfully completed......................................
2025-03-20 20:30:07,356:INFO:SubProcess create_model() end ==================================
2025-03-20 20:30:07,356:INFO:Creating metrics dataframe
2025-03-20 20:30:07,362:INFO:Initializing Light Gradient Boosting Machine
2025-03-20 20:30:07,362:INFO:Total runtime is 1.2097137490908303 minutes
2025-03-20 20:30:07,363:INFO:SubProcess create_model() called ==================================
2025-03-20 20:30:07,363:INFO:Initializing create_model()
2025-03-20 20:30:07,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:07,364:INFO:Checking exceptions
2025-03-20 20:30:07,364:INFO:Importing libraries
2025-03-20 20:30:07,364:INFO:Copying training dataset
2025-03-20 20:30:07,371:INFO:Defining folds
2025-03-20 20:30:07,371:INFO:Declaring metric variables
2025-03-20 20:30:07,372:INFO:Importing untrained model
2025-03-20 20:30:07,374:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-20 20:30:07,377:INFO:Starting cross validation
2025-03-20 20:30:07,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:30:15,529:INFO:Calculating mean and std
2025-03-20 20:30:15,530:INFO:Creating metrics dataframe
2025-03-20 20:30:15,531:INFO:Uploading results into container
2025-03-20 20:30:15,532:INFO:Uploading model into container now
2025-03-20 20:30:15,532:INFO:_master_model_container: 17
2025-03-20 20:30:15,532:INFO:_display_container: 2
2025-03-20 20:30:15,533:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-03-20 20:30:15,533:INFO:create_model() successfully completed......................................
2025-03-20 20:30:15,584:INFO:SubProcess create_model() end ==================================
2025-03-20 20:30:15,584:INFO:Creating metrics dataframe
2025-03-20 20:30:15,590:INFO:Initializing Dummy Regressor
2025-03-20 20:30:15,590:INFO:Total runtime is 1.3468538522720335 minutes
2025-03-20 20:30:15,592:INFO:SubProcess create_model() called ==================================
2025-03-20 20:30:15,592:INFO:Initializing create_model()
2025-03-20 20:30:15,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3281aa3b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:15,592:INFO:Checking exceptions
2025-03-20 20:30:15,592:INFO:Importing libraries
2025-03-20 20:30:15,592:INFO:Copying training dataset
2025-03-20 20:30:15,599:INFO:Defining folds
2025-03-20 20:30:15,599:INFO:Declaring metric variables
2025-03-20 20:30:15,600:INFO:Importing untrained model
2025-03-20 20:30:15,602:INFO:Dummy Regressor Imported successfully
2025-03-20 20:30:15,605:INFO:Starting cross validation
2025-03-20 20:30:15,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:30:19,779:INFO:Calculating mean and std
2025-03-20 20:30:19,779:INFO:Creating metrics dataframe
2025-03-20 20:30:19,780:INFO:Uploading results into container
2025-03-20 20:30:19,781:INFO:Uploading model into container now
2025-03-20 20:30:19,781:INFO:_master_model_container: 18
2025-03-20 20:30:19,781:INFO:_display_container: 2
2025-03-20 20:30:19,782:INFO:DummyRegressor()
2025-03-20 20:30:19,782:INFO:create_model() successfully completed......................................
2025-03-20 20:30:19,834:INFO:SubProcess create_model() end ==================================
2025-03-20 20:30:19,834:INFO:Creating metrics dataframe
2025-03-20 20:30:19,842:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-20 20:30:19,845:INFO:Initializing create_model()
2025-03-20 20:30:19,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:19,846:INFO:Checking exceptions
2025-03-20 20:30:19,847:INFO:Importing libraries
2025-03-20 20:30:19,847:INFO:Copying training dataset
2025-03-20 20:30:19,854:INFO:Defining folds
2025-03-20 20:30:19,854:INFO:Declaring metric variables
2025-03-20 20:30:19,854:INFO:Importing untrained model
2025-03-20 20:30:19,854:INFO:Declaring custom model
2025-03-20 20:30:19,854:INFO:Linear Regression Imported successfully
2025-03-20 20:30:19,857:INFO:Cross validation set to False
2025-03-20 20:30:19,857:INFO:Fitting Model
2025-03-20 20:30:20,087:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000498 seconds.
2025-03-20 20:30:20,087:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:30:20,087:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:30:20,087:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:30:20,087:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:30:20,623:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:30:20,623:INFO:create_model() successfully completed......................................
2025-03-20 20:30:20,821:INFO:_master_model_container: 18
2025-03-20 20:30:20,822:INFO:_display_container: 2
2025-03-20 20:30:20,822:INFO:LinearRegression(n_jobs=-1)
2025-03-20 20:30:20,822:INFO:compare_models() successfully completed......................................
2025-03-20 20:30:25,530:INFO:Initializing finalize_model()
2025-03-20 20:30:25,530:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:30:25,531:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 20:30:25,540:INFO:Initializing create_model()
2025-03-20 20:30:25,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3289730a0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:25,541:INFO:Checking exceptions
2025-03-20 20:30:25,542:INFO:Importing libraries
2025-03-20 20:30:25,542:INFO:Copying training dataset
2025-03-20 20:30:25,543:INFO:Defining folds
2025-03-20 20:30:25,543:INFO:Declaring metric variables
2025-03-20 20:30:25,544:INFO:Importing untrained model
2025-03-20 20:30:25,544:INFO:Declaring custom model
2025-03-20 20:30:25,544:INFO:Linear Regression Imported successfully
2025-03-20 20:30:25,550:INFO:Cross validation set to False
2025-03-20 20:30:25,551:INFO:Fitting Model
2025-03-20 20:30:25,807:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000313 seconds.
2025-03-20 20:30:25,807:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 20:30:25,807:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 20:30:25,807:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:30:25,807:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:30:25,808:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:30:26,410:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:30:26,410:INFO:create_model() successfully completed......................................
2025-03-20 20:30:26,460:INFO:_master_model_container: 18
2025-03-20 20:30:26,460:INFO:_display_container: 2
2025-03-20 20:30:26,467:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:30:26,467:INFO:finalize_model() successfully completed......................................
2025-03-20 20:30:26,534:INFO:Initializing save_model()
2025-03-20 20:30:26,535:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:30:26,535:INFO:Adding model into prep_pipe
2025-03-20 20:30:26,535:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:30:26,564:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 20:30:26,571:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 20:30:26,571:INFO:save_model() successfully completed......................................
2025-03-20 20:30:30,671:INFO:PyCaret RegressionExperiment
2025-03-20 20:30:30,671:INFO:Logging name: reg-default-name
2025-03-20 20:30:30,671:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 20:30:30,671:INFO:version 3.3.2
2025-03-20 20:30:30,671:INFO:Initializing setup()
2025-03-20 20:30:30,671:INFO:self.USI: d598
2025-03-20 20:30:30,671:INFO:self._variable_keys: {'html_param', 'log_plots_param', 'X', 'y', 'idx', 'exp_id', 'memory', 'y_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', 'logging_param', 'exp_name_log', 'X_test', '_ml_usecase', 'fold_groups_param', 'pipeline', '_available_plots', 'USI', 'seed', 'y_train', 'X_train', 'fold_generator', 'transform_target_param', 'gpu_param', 'data'}
2025-03-20 20:30:30,671:INFO:Checking environment
2025-03-20 20:30:30,671:INFO:python_version: 3.10.16
2025-03-20 20:30:30,671:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 20:30:30,671:INFO:machine: arm64
2025-03-20 20:30:30,671:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 20:30:30,671:INFO:Memory: svmem(total=38654705664, available=13117358080, percent=66.1, used=16740139008, free=79822848, active=12980142080, inactive=13034061824, wired=3759996928)
2025-03-20 20:30:30,672:INFO:Physical Core: 11
2025-03-20 20:30:30,672:INFO:Logical Core: 11
2025-03-20 20:30:30,672:INFO:Checking libraries
2025-03-20 20:30:30,672:INFO:System:
2025-03-20 20:30:30,672:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 20:30:30,672:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 20:30:30,672:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 20:30:30,672:INFO:PyCaret required dependencies:
2025-03-20 20:30:30,672:INFO:                 pip: 25.0
2025-03-20 20:30:30,672:INFO:          setuptools: 77.0.1
2025-03-20 20:30:30,672:INFO:             pycaret: 3.3.2
2025-03-20 20:30:30,673:INFO:             IPython: 8.34.0
2025-03-20 20:30:30,673:INFO:          ipywidgets: 8.1.5
2025-03-20 20:30:30,673:INFO:                tqdm: 4.67.1
2025-03-20 20:30:30,673:INFO:               numpy: 1.26.4
2025-03-20 20:30:30,673:INFO:              pandas: 2.1.4
2025-03-20 20:30:30,673:INFO:              jinja2: 3.1.6
2025-03-20 20:30:30,673:INFO:               scipy: 1.11.4
2025-03-20 20:30:30,673:INFO:              joblib: 1.3.2
2025-03-20 20:30:30,673:INFO:             sklearn: 1.4.2
2025-03-20 20:30:30,673:INFO:                pyod: 2.0.3
2025-03-20 20:30:30,673:INFO:            imblearn: 0.13.0
2025-03-20 20:30:30,673:INFO:   category_encoders: 2.7.0
2025-03-20 20:30:30,673:INFO:            lightgbm: 4.6.0
2025-03-20 20:30:30,673:INFO:               numba: 0.61.0
2025-03-20 20:30:30,673:INFO:            requests: 2.32.3
2025-03-20 20:30:30,673:INFO:          matplotlib: 3.7.5
2025-03-20 20:30:30,673:INFO:          scikitplot: 0.3.7
2025-03-20 20:30:30,673:INFO:         yellowbrick: 1.5
2025-03-20 20:30:30,673:INFO:              plotly: 5.24.1
2025-03-20 20:30:30,674:INFO:    plotly-resampler: Not installed
2025-03-20 20:30:30,674:INFO:             kaleido: 0.2.1
2025-03-20 20:30:30,674:INFO:           schemdraw: 0.15
2025-03-20 20:30:30,674:INFO:         statsmodels: 0.14.4
2025-03-20 20:30:30,674:INFO:              sktime: 0.26.0
2025-03-20 20:30:30,674:INFO:               tbats: 1.1.3
2025-03-20 20:30:30,674:INFO:            pmdarima: 2.0.4
2025-03-20 20:30:30,674:INFO:              psutil: 7.0.0
2025-03-20 20:30:30,674:INFO:          markupsafe: 3.0.2
2025-03-20 20:30:30,674:INFO:             pickle5: Not installed
2025-03-20 20:30:30,674:INFO:         cloudpickle: 3.1.1
2025-03-20 20:30:30,674:INFO:         deprecation: 2.1.0
2025-03-20 20:30:30,674:INFO:              xxhash: 3.5.0
2025-03-20 20:30:30,674:INFO:           wurlitzer: 3.1.1
2025-03-20 20:30:30,674:INFO:PyCaret optional dependencies:
2025-03-20 20:30:30,674:INFO:                shap: Not installed
2025-03-20 20:30:30,674:INFO:           interpret: Not installed
2025-03-20 20:30:30,674:INFO:                umap: Not installed
2025-03-20 20:30:30,674:INFO:     ydata_profiling: Not installed
2025-03-20 20:30:30,674:INFO:  explainerdashboard: Not installed
2025-03-20 20:30:30,674:INFO:             autoviz: Not installed
2025-03-20 20:30:30,674:INFO:           fairlearn: Not installed
2025-03-20 20:30:30,674:INFO:          deepchecks: Not installed
2025-03-20 20:30:30,674:INFO:             xgboost: Not installed
2025-03-20 20:30:30,675:INFO:            catboost: Not installed
2025-03-20 20:30:30,675:INFO:              kmodes: Not installed
2025-03-20 20:30:30,675:INFO:             mlxtend: Not installed
2025-03-20 20:30:30,675:INFO:       statsforecast: Not installed
2025-03-20 20:30:30,675:INFO:        tune_sklearn: Not installed
2025-03-20 20:30:30,675:INFO:                 ray: Not installed
2025-03-20 20:30:30,675:INFO:            hyperopt: Not installed
2025-03-20 20:30:30,675:INFO:              optuna: Not installed
2025-03-20 20:30:30,675:INFO:               skopt: Not installed
2025-03-20 20:30:30,675:INFO:              mlflow: Not installed
2025-03-20 20:30:30,675:INFO:              gradio: Not installed
2025-03-20 20:30:30,675:INFO:             fastapi: Not installed
2025-03-20 20:30:30,675:INFO:             uvicorn: Not installed
2025-03-20 20:30:30,675:INFO:              m2cgen: Not installed
2025-03-20 20:30:30,675:INFO:           evidently: Not installed
2025-03-20 20:30:30,675:INFO:               fugue: Not installed
2025-03-20 20:30:30,675:INFO:           streamlit: 1.43.2
2025-03-20 20:30:30,675:INFO:             prophet: Not installed
2025-03-20 20:30:30,675:INFO:None
2025-03-20 20:30:30,675:INFO:Set up data.
2025-03-20 20:30:30,679:INFO:Set up folding strategy.
2025-03-20 20:30:30,679:INFO:Set up train/test split.
2025-03-20 20:30:30,685:INFO:Set up index.
2025-03-20 20:30:30,685:INFO:Assigning column types.
2025-03-20 20:30:30,689:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 20:30:30,690:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,692:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,695:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,749:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,749:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,750:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,752:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,809:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 20:30:30,812:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,814:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,872:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,874:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,929:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 20:30:30,934:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:30,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:30,995:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,027:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,050:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 20:30:31,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,109:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,145:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,168:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 20:30:31,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,265:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:30:31,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,289:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 20:30:31,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,411:INFO:Preparing preprocessing pipeline...
2025-03-20 20:30:31,411:INFO:Set up simple imputation.
2025-03-20 20:30:31,411:INFO:Set up removing outliers.
2025-03-20 20:30:31,411:INFO:Set up feature normalization.
2025-03-20 20:30:31,411:INFO:Set up feature selection.
2025-03-20 20:30:31,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,473:INFO:Set up column name cleaning.
2025-03-20 20:30:31,506:INFO:Finished creating preprocessing pipeline.
2025-03-20 20:30:31,513:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 20:30:31,513:INFO:Creating final display dataframe.
2025-03-20 20:30:31,602:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              d598
2025-03-20 20:30:31,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:30:31,727:INFO:setup() successfully completed in 1.06s...............
2025-03-20 20:30:31,728:INFO:Initializing create_model()
2025-03-20 20:30:31,728:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32994ed70>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:31,728:INFO:Checking exceptions
2025-03-20 20:30:31,735:INFO:Importing libraries
2025-03-20 20:30:31,736:INFO:Copying training dataset
2025-03-20 20:30:31,745:INFO:Defining folds
2025-03-20 20:30:31,745:INFO:Declaring metric variables
2025-03-20 20:30:31,748:INFO:Importing untrained model
2025-03-20 20:30:31,751:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:30:31,755:INFO:Starting cross validation
2025-03-20 20:30:31,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:30:35,972:INFO:Calculating mean and std
2025-03-20 20:30:35,972:INFO:Creating metrics dataframe
2025-03-20 20:30:35,975:INFO:Finalizing model
2025-03-20 20:30:36,193:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000429 seconds.
2025-03-20 20:30:36,193:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:30:36,193:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:30:36,194:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:30:36,194:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:30:36,765:INFO:Uploading results into container
2025-03-20 20:30:36,765:INFO:Uploading model into container now
2025-03-20 20:30:36,817:INFO:_master_model_container: 1
2025-03-20 20:30:36,818:INFO:_display_container: 2
2025-03-20 20:30:36,818:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:30:36,818:INFO:create_model() successfully completed......................................
2025-03-20 20:30:36,919:INFO:Initializing finalize_model()
2025-03-20 20:30:36,919:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32994ed70>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:30:36,920:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 20:30:36,925:INFO:Initializing create_model()
2025-03-20 20:30:36,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32994ed70>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:30:36,925:INFO:Checking exceptions
2025-03-20 20:30:36,927:INFO:Importing libraries
2025-03-20 20:30:36,927:INFO:Copying training dataset
2025-03-20 20:30:36,928:INFO:Defining folds
2025-03-20 20:30:36,928:INFO:Declaring metric variables
2025-03-20 20:30:36,928:INFO:Importing untrained model
2025-03-20 20:30:36,928:INFO:Declaring custom model
2025-03-20 20:30:36,929:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:30:36,934:INFO:Cross validation set to False
2025-03-20 20:30:36,934:INFO:Fitting Model
2025-03-20 20:30:37,204:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000548 seconds.
2025-03-20 20:30:37,204:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:30:37,204:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:30:37,204:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:30:37,205:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:30:37,736:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:30:37,736:INFO:create_model() successfully completed......................................
2025-03-20 20:30:37,789:INFO:_master_model_container: 1
2025-03-20 20:30:37,789:INFO:_display_container: 2
2025-03-20 20:30:37,796:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:30:37,796:INFO:finalize_model() successfully completed......................................
2025-03-20 20:30:37,868:INFO:Initializing save_model()
2025-03-20 20:30:37,868:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:30:37,868:INFO:Adding model into prep_pipe
2025-03-20 20:30:37,868:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:30:37,897:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 20:30:37,904:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:30:37,904:INFO:save_model() successfully completed......................................
2025-03-20 20:31:25,831:INFO:PyCaret RegressionExperiment
2025-03-20 20:31:25,832:INFO:Logging name: reg-default-name
2025-03-20 20:31:25,832:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 20:31:25,832:INFO:version 3.3.2
2025-03-20 20:31:25,832:INFO:Initializing setup()
2025-03-20 20:31:25,832:INFO:self.USI: a619
2025-03-20 20:31:25,833:INFO:self._variable_keys: {'html_param', 'log_plots_param', 'X', 'y', 'idx', 'exp_id', 'memory', 'y_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', 'logging_param', 'exp_name_log', 'X_test', '_ml_usecase', 'fold_groups_param', 'pipeline', '_available_plots', 'USI', 'seed', 'y_train', 'X_train', 'fold_generator', 'transform_target_param', 'gpu_param', 'data'}
2025-03-20 20:31:25,833:INFO:Checking environment
2025-03-20 20:31:25,833:INFO:python_version: 3.10.16
2025-03-20 20:31:25,833:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 20:31:25,833:INFO:machine: arm64
2025-03-20 20:31:25,833:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 20:31:25,833:INFO:Memory: svmem(total=38654705664, available=13190709248, percent=65.9, used=16648273920, free=148045824, active=12984926208, inactive=13041500160, wired=3663347712)
2025-03-20 20:31:25,833:INFO:Physical Core: 11
2025-03-20 20:31:25,833:INFO:Logical Core: 11
2025-03-20 20:31:25,833:INFO:Checking libraries
2025-03-20 20:31:25,833:INFO:System:
2025-03-20 20:31:25,833:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 20:31:25,833:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 20:31:25,833:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 20:31:25,833:INFO:PyCaret required dependencies:
2025-03-20 20:31:25,833:INFO:                 pip: 25.0
2025-03-20 20:31:25,833:INFO:          setuptools: 77.0.1
2025-03-20 20:31:25,833:INFO:             pycaret: 3.3.2
2025-03-20 20:31:25,833:INFO:             IPython: 8.34.0
2025-03-20 20:31:25,833:INFO:          ipywidgets: 8.1.5
2025-03-20 20:31:25,833:INFO:                tqdm: 4.67.1
2025-03-20 20:31:25,833:INFO:               numpy: 1.26.4
2025-03-20 20:31:25,833:INFO:              pandas: 2.1.4
2025-03-20 20:31:25,833:INFO:              jinja2: 3.1.6
2025-03-20 20:31:25,833:INFO:               scipy: 1.11.4
2025-03-20 20:31:25,833:INFO:              joblib: 1.3.2
2025-03-20 20:31:25,833:INFO:             sklearn: 1.4.2
2025-03-20 20:31:25,833:INFO:                pyod: 2.0.3
2025-03-20 20:31:25,833:INFO:            imblearn: 0.13.0
2025-03-20 20:31:25,833:INFO:   category_encoders: 2.7.0
2025-03-20 20:31:25,833:INFO:            lightgbm: 4.6.0
2025-03-20 20:31:25,833:INFO:               numba: 0.61.0
2025-03-20 20:31:25,834:INFO:            requests: 2.32.3
2025-03-20 20:31:25,834:INFO:          matplotlib: 3.7.5
2025-03-20 20:31:25,834:INFO:          scikitplot: 0.3.7
2025-03-20 20:31:25,834:INFO:         yellowbrick: 1.5
2025-03-20 20:31:25,834:INFO:              plotly: 5.24.1
2025-03-20 20:31:25,834:INFO:    plotly-resampler: Not installed
2025-03-20 20:31:25,834:INFO:             kaleido: 0.2.1
2025-03-20 20:31:25,834:INFO:           schemdraw: 0.15
2025-03-20 20:31:25,834:INFO:         statsmodels: 0.14.4
2025-03-20 20:31:25,834:INFO:              sktime: 0.26.0
2025-03-20 20:31:25,834:INFO:               tbats: 1.1.3
2025-03-20 20:31:25,834:INFO:            pmdarima: 2.0.4
2025-03-20 20:31:25,834:INFO:              psutil: 7.0.0
2025-03-20 20:31:25,834:INFO:          markupsafe: 3.0.2
2025-03-20 20:31:25,834:INFO:             pickle5: Not installed
2025-03-20 20:31:25,834:INFO:         cloudpickle: 3.1.1
2025-03-20 20:31:25,834:INFO:         deprecation: 2.1.0
2025-03-20 20:31:25,834:INFO:              xxhash: 3.5.0
2025-03-20 20:31:25,834:INFO:           wurlitzer: 3.1.1
2025-03-20 20:31:25,834:INFO:PyCaret optional dependencies:
2025-03-20 20:31:25,834:INFO:                shap: Not installed
2025-03-20 20:31:25,834:INFO:           interpret: Not installed
2025-03-20 20:31:25,834:INFO:                umap: Not installed
2025-03-20 20:31:25,834:INFO:     ydata_profiling: Not installed
2025-03-20 20:31:25,834:INFO:  explainerdashboard: Not installed
2025-03-20 20:31:25,834:INFO:             autoviz: Not installed
2025-03-20 20:31:25,834:INFO:           fairlearn: Not installed
2025-03-20 20:31:25,834:INFO:          deepchecks: Not installed
2025-03-20 20:31:25,834:INFO:             xgboost: Not installed
2025-03-20 20:31:25,834:INFO:            catboost: Not installed
2025-03-20 20:31:25,834:INFO:              kmodes: Not installed
2025-03-20 20:31:25,834:INFO:             mlxtend: Not installed
2025-03-20 20:31:25,834:INFO:       statsforecast: Not installed
2025-03-20 20:31:25,834:INFO:        tune_sklearn: Not installed
2025-03-20 20:31:25,834:INFO:                 ray: Not installed
2025-03-20 20:31:25,834:INFO:            hyperopt: Not installed
2025-03-20 20:31:25,834:INFO:              optuna: Not installed
2025-03-20 20:31:25,834:INFO:               skopt: Not installed
2025-03-20 20:31:25,834:INFO:              mlflow: Not installed
2025-03-20 20:31:25,834:INFO:              gradio: Not installed
2025-03-20 20:31:25,834:INFO:             fastapi: Not installed
2025-03-20 20:31:25,834:INFO:             uvicorn: Not installed
2025-03-20 20:31:25,834:INFO:              m2cgen: Not installed
2025-03-20 20:31:25,834:INFO:           evidently: Not installed
2025-03-20 20:31:25,834:INFO:               fugue: Not installed
2025-03-20 20:31:25,834:INFO:           streamlit: 1.43.2
2025-03-20 20:31:25,834:INFO:             prophet: Not installed
2025-03-20 20:31:25,834:INFO:None
2025-03-20 20:31:25,834:INFO:Set up data.
2025-03-20 20:31:25,838:INFO:Set up folding strategy.
2025-03-20 20:31:25,838:INFO:Set up train/test split.
2025-03-20 20:31:25,842:INFO:Set up index.
2025-03-20 20:31:25,843:INFO:Assigning column types.
2025-03-20 20:31:25,847:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 20:31:25,847:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,854:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:25,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:25,911:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,913:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,970:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:25,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:25,970:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 20:31:25,972:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:31:25,975:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,032:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,034:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,066:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,088:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 20:31:26,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,152:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,207:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 20:31:26,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,336:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 20:31:26,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,437:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 20:31:26,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,460:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 20:31:26,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,578:INFO:Preparing preprocessing pipeline...
2025-03-20 20:31:26,578:INFO:Set up simple imputation.
2025-03-20 20:31:26,578:INFO:Set up removing outliers.
2025-03-20 20:31:26,578:INFO:Set up feature normalization.
2025-03-20 20:31:26,578:INFO:Set up feature selection.
2025-03-20 20:31:26,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,638:INFO:Set up column name cleaning.
2025-03-20 20:31:26,672:INFO:Finished creating preprocessing pipeline.
2025-03-20 20:31:26,679:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 20:31:26,679:INFO:Creating final display dataframe.
2025-03-20 20:31:26,770:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 13)
4        Transformed data shape        (17630, 3)
5   Transformed train set shape        (13957, 3)
6    Transformed test set shape         (3673, 3)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              a619
2025-03-20 20:31:26,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 20:31:26,892:INFO:setup() successfully completed in 1.06s...............
2025-03-20 20:31:26,893:INFO:Initializing create_model()
2025-03-20 20:31:26,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b9e8a90>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:31:26,893:INFO:Checking exceptions
2025-03-20 20:31:26,901:INFO:Importing libraries
2025-03-20 20:31:26,901:INFO:Copying training dataset
2025-03-20 20:31:26,910:INFO:Defining folds
2025-03-20 20:31:26,910:INFO:Declaring metric variables
2025-03-20 20:31:26,914:INFO:Importing untrained model
2025-03-20 20:31:26,916:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:31:26,919:INFO:Starting cross validation
2025-03-20 20:31:26,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 20:31:31,045:INFO:Calculating mean and std
2025-03-20 20:31:31,045:INFO:Creating metrics dataframe
2025-03-20 20:31:31,048:INFO:Finalizing model
2025-03-20 20:31:31,284:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000486 seconds.
2025-03-20 20:31:31,284:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:31:31,285:INFO:[LightGBM] [Info] Total Bins 2612
2025-03-20 20:31:31,285:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 12
2025-03-20 20:31:31,285:INFO:[LightGBM] [Info] Start training from score 7335.547252
2025-03-20 20:31:31,805:INFO:Uploading results into container
2025-03-20 20:31:31,806:INFO:Uploading model into container now
2025-03-20 20:31:31,811:INFO:_master_model_container: 1
2025-03-20 20:31:31,811:INFO:_display_container: 2
2025-03-20 20:31:31,811:INFO:OrthogonalMatchingPursuit()
2025-03-20 20:31:31,811:INFO:create_model() successfully completed......................................
2025-03-20 20:31:31,867:INFO:Initializing finalize_model()
2025-03-20 20:31:31,867:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b9e8a90>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 20:31:31,867:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 20:31:31,871:INFO:Initializing create_model()
2025-03-20 20:31:31,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b9e8a90>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 20:31:31,871:INFO:Checking exceptions
2025-03-20 20:31:31,872:INFO:Importing libraries
2025-03-20 20:31:31,872:INFO:Copying training dataset
2025-03-20 20:31:31,872:INFO:Defining folds
2025-03-20 20:31:31,872:INFO:Declaring metric variables
2025-03-20 20:31:31,872:INFO:Importing untrained model
2025-03-20 20:31:31,872:INFO:Declaring custom model
2025-03-20 20:31:31,873:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 20:31:31,876:INFO:Cross validation set to False
2025-03-20 20:31:31,876:INFO:Fitting Model
2025-03-20 20:31:32,132:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000645 seconds.
2025-03-20 20:31:32,132:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 20:31:32,132:INFO:[LightGBM] [Info] Total Bins 2614
2025-03-20 20:31:32,132:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 12
2025-03-20 20:31:32,133:INFO:[LightGBM] [Info] Start training from score 7337.542417
2025-03-20 20:31:32,673:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:31:32,673:INFO:create_model() successfully completed......................................
2025-03-20 20:31:32,722:INFO:_master_model_container: 1
2025-03-20 20:31:32,722:INFO:_display_container: 2
2025-03-20 20:31:32,729:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:31:32,729:INFO:finalize_model() successfully completed......................................
2025-03-20 20:31:32,799:INFO:Initializing save_model()
2025-03-20 20:31:32,799:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model.pkl, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_impute...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 20:31:32,799:INFO:Adding model into prep_pipe
2025-03-20 20:31:32,799:WARNING:Only Model saved as it was a pipeline.
2025-03-20 20:31:32,830:INFO:halfmarathon_model.pkl.pkl saved in current working directory
2025-03-20 20:31:32,837:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 20:31:32,837:INFO:save_model() successfully completed......................................
2025-03-20 20:32:23,366:INFO:Initializing load_model()
2025-03-20 20:32:23,367:INFO:load_model(model_name=halfmarathon_model, platform=None, authentication=None, verbose=True)
2025-03-20 20:32:25,171:INFO:Initializing predict_model()
2025-03-20 20:32:25,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e4699f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x33453f2e0>)
2025-03-20 20:32:25,172:INFO:Checking exceptions
2025-03-20 20:32:25,172:INFO:Preloading libraries
2025-03-20 20:32:25,172:INFO:Set up data.
2025-03-20 20:32:25,174:INFO:Set up index.
2025-03-20 20:32:39,610:INFO:Initializing predict_model()
2025-03-20 20:32:39,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33642a8c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x33453f640>)
2025-03-20 20:32:39,610:INFO:Checking exceptions
2025-03-20 20:32:39,610:INFO:Preloading libraries
2025-03-20 20:32:39,611:INFO:Set up data.
2025-03-20 20:32:39,612:INFO:Set up index.
2025-03-20 20:32:51,117:INFO:Initializing predict_model()
2025-03-20 20:32:51,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345f9630>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x33453fac0>)
2025-03-20 20:32:51,118:INFO:Checking exceptions
2025-03-20 20:32:51,118:INFO:Preloading libraries
2025-03-20 20:32:51,118:INFO:Set up data.
2025-03-20 20:32:51,120:INFO:Set up index.
2025-03-20 20:35:14,452:INFO:Initializing predict_model()
2025-03-20 20:35:14,453:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32e46a050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32e847e20>)
2025-03-20 20:35:14,453:INFO:Checking exceptions
2025-03-20 20:35:14,453:INFO:Preloading libraries
2025-03-20 20:35:14,453:INFO:Set up data.
2025-03-20 20:35:14,455:INFO:Set up index.
2025-03-20 20:35:32,475:INFO:Initializing predict_model()
2025-03-20 20:35:32,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345faa40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3369c6c20>)
2025-03-20 20:35:32,476:INFO:Checking exceptions
2025-03-20 20:35:32,476:INFO:Preloading libraries
2025-03-20 20:35:32,476:INFO:Set up data.
2025-03-20 20:35:32,478:INFO:Set up index.
2025-03-20 20:35:45,733:INFO:Initializing predict_model()
2025-03-20 20:35:45,734:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3342ab340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b0430>)
2025-03-20 20:35:45,734:INFO:Checking exceptions
2025-03-20 20:35:45,734:INFO:Preloading libraries
2025-03-20 20:35:45,734:INFO:Set up data.
2025-03-20 20:35:45,736:INFO:Set up index.
2025-03-20 20:36:09,325:INFO:Initializing predict_model()
2025-03-20 20:36:09,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345eaad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b0af0>)
2025-03-20 20:36:09,326:INFO:Checking exceptions
2025-03-20 20:36:09,326:INFO:Preloading libraries
2025-03-20 20:36:09,326:INFO:Set up data.
2025-03-20 20:36:09,328:INFO:Set up index.
2025-03-20 20:37:51,275:INFO:Initializing predict_model()
2025-03-20 20:37:51,276:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345a2830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b0ee0>)
2025-03-20 20:37:51,276:INFO:Checking exceptions
2025-03-20 20:37:51,276:INFO:Preloading libraries
2025-03-20 20:37:51,276:INFO:Set up data.
2025-03-20 20:37:51,278:INFO:Set up index.
2025-03-20 20:51:53,214:INFO:Initializing predict_model()
2025-03-20 20:51:53,214:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345a03a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b12d0>)
2025-03-20 20:51:53,215:INFO:Checking exceptions
2025-03-20 20:51:53,215:INFO:Preloading libraries
2025-03-20 20:51:53,215:INFO:Set up data.
2025-03-20 20:51:53,216:INFO:Set up index.
2025-03-20 20:52:02,099:INFO:Initializing predict_model()
2025-03-20 20:52:02,099:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334584df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1360>)
2025-03-20 20:52:02,099:INFO:Checking exceptions
2025-03-20 20:52:02,099:INFO:Preloading libraries
2025-03-20 20:52:02,099:INFO:Set up data.
2025-03-20 20:52:02,101:INFO:Set up index.
2025-03-20 20:52:02,887:INFO:Initializing predict_model()
2025-03-20 20:52:02,887:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334587910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b16c0>)
2025-03-20 20:52:02,887:INFO:Checking exceptions
2025-03-20 20:52:02,887:INFO:Preloading libraries
2025-03-20 20:52:02,887:INFO:Set up data.
2025-03-20 20:52:02,889:INFO:Set up index.
2025-03-20 20:52:03,508:INFO:Initializing predict_model()
2025-03-20 20:52:03,508:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345729b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1750>)
2025-03-20 20:52:03,508:INFO:Checking exceptions
2025-03-20 20:52:03,508:INFO:Preloading libraries
2025-03-20 20:52:03,508:INFO:Set up data.
2025-03-20 20:52:03,510:INFO:Set up index.
2025-03-20 20:52:04,168:INFO:Initializing predict_model()
2025-03-20 20:52:04,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345d2230>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1870>)
2025-03-20 20:52:04,168:INFO:Checking exceptions
2025-03-20 20:52:04,168:INFO:Preloading libraries
2025-03-20 20:52:04,168:INFO:Set up data.
2025-03-20 20:52:04,170:INFO:Set up index.
2025-03-20 20:52:57,300:INFO:Initializing predict_model()
2025-03-20 20:52:57,300:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334555cf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1d80>)
2025-03-20 20:52:57,300:INFO:Checking exceptions
2025-03-20 20:52:57,301:INFO:Preloading libraries
2025-03-20 20:52:57,301:INFO:Set up data.
2025-03-20 20:52:57,302:INFO:Set up index.
2025-03-20 20:52:58,301:INFO:Initializing predict_model()
2025-03-20 20:52:58,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334584bb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1c60>)
2025-03-20 20:52:58,301:INFO:Checking exceptions
2025-03-20 20:52:58,301:INFO:Preloading libraries
2025-03-20 20:52:58,302:INFO:Set up data.
2025-03-20 20:52:58,303:INFO:Set up index.
2025-03-20 20:52:59,009:INFO:Initializing predict_model()
2025-03-20 20:52:59,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345a0f10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1fc0>)
2025-03-20 20:52:59,009:INFO:Checking exceptions
2025-03-20 20:52:59,009:INFO:Preloading libraries
2025-03-20 20:52:59,010:INFO:Set up data.
2025-03-20 20:52:59,011:INFO:Set up index.
2025-03-20 20:52:59,701:INFO:Initializing predict_model()
2025-03-20 20:52:59,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334735030>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b20e0>)
2025-03-20 20:52:59,702:INFO:Checking exceptions
2025-03-20 20:52:59,702:INFO:Preloading libraries
2025-03-20 20:52:59,702:INFO:Set up data.
2025-03-20 20:52:59,703:INFO:Set up index.
2025-03-20 20:53:00,333:INFO:Initializing predict_model()
2025-03-20 20:53:00,333:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334735810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b1f30>)
2025-03-20 20:53:00,333:INFO:Checking exceptions
2025-03-20 20:53:00,334:INFO:Preloading libraries
2025-03-20 20:53:00,334:INFO:Set up data.
2025-03-20 20:53:00,335:INFO:Set up index.
2025-03-20 20:53:00,895:INFO:Initializing predict_model()
2025-03-20 20:53:00,895:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334734a30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2560>)
2025-03-20 20:53:00,895:INFO:Checking exceptions
2025-03-20 20:53:00,895:INFO:Preloading libraries
2025-03-20 20:53:00,896:INFO:Set up data.
2025-03-20 20:53:00,897:INFO:Set up index.
2025-03-20 20:53:21,277:INFO:Initializing predict_model()
2025-03-20 20:53:21,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33471e6b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2950>)
2025-03-20 20:53:21,277:INFO:Checking exceptions
2025-03-20 20:53:21,277:INFO:Preloading libraries
2025-03-20 20:53:21,278:INFO:Set up data.
2025-03-20 20:53:21,279:INFO:Set up index.
2025-03-20 20:53:22,307:INFO:Initializing predict_model()
2025-03-20 20:53:22,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33471f790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b28c0>)
2025-03-20 20:53:22,307:INFO:Checking exceptions
2025-03-20 20:53:22,307:INFO:Preloading libraries
2025-03-20 20:53:22,308:INFO:Set up data.
2025-03-20 20:53:22,309:INFO:Set up index.
2025-03-20 20:53:26,727:INFO:Initializing predict_model()
2025-03-20 20:53:26,727:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334734fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2b90>)
2025-03-20 20:53:26,727:INFO:Checking exceptions
2025-03-20 20:53:26,727:INFO:Preloading libraries
2025-03-20 20:53:26,727:INFO:Set up data.
2025-03-20 20:53:26,729:INFO:Set up index.
2025-03-20 20:53:27,445:INFO:Initializing predict_model()
2025-03-20 20:53:27,445:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347043a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2dd0>)
2025-03-20 20:53:27,445:INFO:Checking exceptions
2025-03-20 20:53:27,445:INFO:Preloading libraries
2025-03-20 20:53:27,446:INFO:Set up data.
2025-03-20 20:53:27,447:INFO:Set up index.
2025-03-20 20:53:30,282:INFO:Initializing predict_model()
2025-03-20 20:53:30,282:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334704c70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b31c0>)
2025-03-20 20:53:30,282:INFO:Checking exceptions
2025-03-20 20:53:30,282:INFO:Preloading libraries
2025-03-20 20:53:30,282:INFO:Set up data.
2025-03-20 20:53:30,284:INFO:Set up index.
2025-03-20 20:53:31,419:INFO:Initializing predict_model()
2025-03-20 20:53:31,419:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3345eaad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b30a0>)
2025-03-20 20:53:31,419:INFO:Checking exceptions
2025-03-20 20:53:31,419:INFO:Preloading libraries
2025-03-20 20:53:31,419:INFO:Set up data.
2025-03-20 20:53:31,421:INFO:Set up index.
2025-03-20 20:53:32,130:INFO:Initializing predict_model()
2025-03-20 20:53:32,130:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334573eb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2f80>)
2025-03-20 20:53:32,130:INFO:Checking exceptions
2025-03-20 20:53:32,130:INFO:Preloading libraries
2025-03-20 20:53:32,130:INFO:Set up data.
2025-03-20 20:53:32,132:INFO:Set up index.
2025-03-20 20:54:58,871:INFO:Initializing predict_model()
2025-03-20 20:54:58,871:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33478c400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347900d0>)
2025-03-20 20:54:58,871:INFO:Checking exceptions
2025-03-20 20:54:58,871:INFO:Preloading libraries
2025-03-20 20:54:58,872:INFO:Set up data.
2025-03-20 20:54:58,874:INFO:Set up index.
2025-03-20 20:56:39,688:INFO:Initializing predict_model()
2025-03-20 20:56:39,688:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33478c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2f80>)
2025-03-20 20:56:39,688:INFO:Checking exceptions
2025-03-20 20:56:39,689:INFO:Preloading libraries
2025-03-20 20:56:39,689:INFO:Set up data.
2025-03-20 20:56:39,690:INFO:Set up index.
2025-03-20 20:56:42,385:INFO:Initializing predict_model()
2025-03-20 20:56:42,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347880a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b2440>)
2025-03-20 20:56:42,385:INFO:Checking exceptions
2025-03-20 20:56:42,385:INFO:Preloading libraries
2025-03-20 20:56:42,386:INFO:Set up data.
2025-03-20 20:56:42,387:INFO:Set up index.
2025-03-20 20:56:44,860:INFO:Initializing predict_model()
2025-03-20 20:56:44,860:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33478dcc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3364235b0>)
2025-03-20 20:56:44,860:INFO:Checking exceptions
2025-03-20 20:56:44,860:INFO:Preloading libraries
2025-03-20 20:56:44,861:INFO:Set up data.
2025-03-20 20:56:44,862:INFO:Set up index.
2025-03-20 21:00:28,347:INFO:Initializing predict_model()
2025-03-20 21:00:28,347:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334789c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107205120>)
2025-03-20 21:00:28,347:INFO:Checking exceptions
2025-03-20 21:00:28,347:INFO:Preloading libraries
2025-03-20 21:00:28,348:INFO:Set up data.
2025-03-20 21:00:28,349:INFO:Set up index.
2025-03-20 21:00:32,274:INFO:Initializing predict_model()
2025-03-20 21:00:32,274:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33478ecb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347ac8b0>)
2025-03-20 21:00:32,274:INFO:Checking exceptions
2025-03-20 21:00:32,274:INFO:Preloading libraries
2025-03-20 21:00:32,275:INFO:Set up data.
2025-03-20 21:00:32,276:INFO:Set up index.
2025-03-20 21:00:33,190:INFO:Initializing predict_model()
2025-03-20 21:00:33,190:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c633b9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8310>)
2025-03-20 21:00:33,190:INFO:Checking exceptions
2025-03-20 21:00:33,190:INFO:Preloading libraries
2025-03-20 21:00:33,190:INFO:Set up data.
2025-03-20 21:00:33,192:INFO:Set up index.
2025-03-20 21:00:33,856:INFO:Initializing predict_model()
2025-03-20 21:00:33,856:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63392a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8280>)
2025-03-20 21:00:33,856:INFO:Checking exceptions
2025-03-20 21:00:33,856:INFO:Preloading libraries
2025-03-20 21:00:33,856:INFO:Set up data.
2025-03-20 21:00:33,858:INFO:Set up index.
2025-03-20 21:00:34,437:INFO:Initializing predict_model()
2025-03-20 21:00:34,437:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33476eb60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8670>)
2025-03-20 21:00:34,438:INFO:Checking exceptions
2025-03-20 21:00:34,438:INFO:Preloading libraries
2025-03-20 21:00:34,438:INFO:Set up data.
2025-03-20 21:00:34,440:INFO:Set up index.
2025-03-20 21:00:34,999:INFO:Initializing predict_model()
2025-03-20 21:00:34,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33476d570>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8280>)
2025-03-20 21:00:34,999:INFO:Checking exceptions
2025-03-20 21:00:35,000:INFO:Preloading libraries
2025-03-20 21:00:35,000:INFO:Set up data.
2025-03-20 21:00:35,002:INFO:Set up index.
2025-03-20 21:01:32,678:INFO:Initializing predict_model()
2025-03-20 21:01:32,678:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347373d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f91b0>)
2025-03-20 21:01:32,679:INFO:Checking exceptions
2025-03-20 21:01:32,679:INFO:Preloading libraries
2025-03-20 21:01:32,679:INFO:Set up data.
2025-03-20 21:01:32,680:INFO:Set up index.
2025-03-20 21:01:34,044:INFO:Initializing predict_model()
2025-03-20 21:01:34,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347c4bb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f9090>)
2025-03-20 21:01:34,044:INFO:Checking exceptions
2025-03-20 21:01:34,044:INFO:Preloading libraries
2025-03-20 21:01:34,045:INFO:Set up data.
2025-03-20 21:01:34,046:INFO:Set up index.
2025-03-20 21:01:35,045:INFO:Initializing predict_model()
2025-03-20 21:01:35,045:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347c4b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8f70>)
2025-03-20 21:01:35,045:INFO:Checking exceptions
2025-03-20 21:01:35,045:INFO:Preloading libraries
2025-03-20 21:01:35,045:INFO:Set up data.
2025-03-20 21:01:35,046:INFO:Set up index.
2025-03-20 21:02:52,759:INFO:Initializing predict_model()
2025-03-20 21:02:52,760:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334767250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8d30>)
2025-03-20 21:02:52,760:INFO:Checking exceptions
2025-03-20 21:02:52,760:INFO:Preloading libraries
2025-03-20 21:02:52,760:INFO:Set up data.
2025-03-20 21:02:52,761:INFO:Set up index.
2025-03-20 21:02:53,703:INFO:Initializing predict_model()
2025-03-20 21:02:53,703:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347c4340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8ca0>)
2025-03-20 21:02:53,703:INFO:Checking exceptions
2025-03-20 21:02:53,704:INFO:Preloading libraries
2025-03-20 21:02:53,704:INFO:Set up data.
2025-03-20 21:02:53,705:INFO:Set up index.
2025-03-20 21:02:54,328:INFO:Initializing predict_model()
2025-03-20 21:02:54,328:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63675b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f9510>)
2025-03-20 21:02:54,328:INFO:Checking exceptions
2025-03-20 21:02:54,329:INFO:Preloading libraries
2025-03-20 21:02:54,329:INFO:Set up data.
2025-03-20 21:02:54,330:INFO:Set up index.
2025-03-20 21:02:57,872:INFO:Initializing predict_model()
2025-03-20 21:02:57,872:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c633b9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f89d0>)
2025-03-20 21:02:57,872:INFO:Checking exceptions
2025-03-20 21:02:57,872:INFO:Preloading libraries
2025-03-20 21:02:57,872:INFO:Set up data.
2025-03-20 21:02:57,873:INFO:Set up index.
2025-03-20 21:04:22,853:INFO:Initializing predict_model()
2025-03-20 21:04:22,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c6370310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347fa0e0>)
2025-03-20 21:04:22,853:INFO:Checking exceptions
2025-03-20 21:04:22,853:INFO:Preloading libraries
2025-03-20 21:04:22,853:INFO:Set up data.
2025-03-20 21:04:22,855:INFO:Set up index.
2025-03-20 21:04:25,902:INFO:Initializing predict_model()
2025-03-20 21:04:25,902:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x334751570>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f9bd0>)
2025-03-20 21:04:25,902:INFO:Checking exceptions
2025-03-20 21:04:25,902:INFO:Preloading libraries
2025-03-20 21:04:25,902:INFO:Set up data.
2025-03-20 21:04:25,904:INFO:Set up index.
2025-03-20 21:04:26,692:INFO:Initializing predict_model()
2025-03-20 21:04:26,693:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63d3820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f9e10>)
2025-03-20 21:04:26,693:INFO:Checking exceptions
2025-03-20 21:04:26,693:INFO:Preloading libraries
2025-03-20 21:04:26,693:INFO:Set up data.
2025-03-20 21:04:26,695:INFO:Set up index.
2025-03-20 21:04:27,392:INFO:Initializing predict_model()
2025-03-20 21:04:27,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63d0d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f9990>)
2025-03-20 21:04:27,392:INFO:Checking exceptions
2025-03-20 21:04:27,392:INFO:Preloading libraries
2025-03-20 21:04:27,392:INFO:Set up data.
2025-03-20 21:04:27,394:INFO:Set up index.
2025-03-20 21:04:28,022:INFO:Initializing predict_model()
2025-03-20 21:04:28,023:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3347505b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8940>)
2025-03-20 21:04:28,023:INFO:Checking exceptions
2025-03-20 21:04:28,023:INFO:Preloading libraries
2025-03-20 21:04:28,023:INFO:Set up data.
2025-03-20 21:04:28,025:INFO:Set up index.
2025-03-20 21:07:06,165:INFO:Initializing predict_model()
2025-03-20 21:07:06,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63e95a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347fad40>)
2025-03-20 21:07:06,165:INFO:Checking exceptions
2025-03-20 21:07:06,165:INFO:Preloading libraries
2025-03-20 21:07:06,165:INFO:Set up data.
2025-03-20 21:07:06,166:INFO:Set up index.
2025-03-20 21:13:22,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:13:22,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:13:22,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:13:22,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:14:43,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:14:43,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:14:43,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:14:43,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:17:31,754:INFO:PyCaret RegressionExperiment
2025-03-20 21:17:31,754:INFO:Logging name: reg-default-name
2025-03-20 21:17:31,754:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 21:17:31,754:INFO:version 3.3.2
2025-03-20 21:17:31,754:INFO:Initializing setup()
2025-03-20 21:17:31,754:INFO:self.USI: bf0e
2025-03-20 21:17:31,755:INFO:self._variable_keys: {'X_train', 'target_param', 'transform_target_param', 'memory', '_ml_usecase', 'X', 'idx', 'n_jobs_param', 'y_train', '_available_plots', 'log_plots_param', 'html_param', 'USI', 'fold_groups_param', 'data', 'X_test', 'exp_name_log', 'logging_param', 'seed', 'gpu_param', 'y', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'exp_id', 'fold_shuffle_param', 'fold_generator'}
2025-03-20 21:17:31,755:INFO:Checking environment
2025-03-20 21:17:31,755:INFO:python_version: 3.10.16
2025-03-20 21:17:31,755:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 21:17:31,755:INFO:machine: arm64
2025-03-20 21:17:31,755:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 21:17:31,755:INFO:Memory: svmem(total=38654705664, available=12977618944, percent=66.4, used=16929898496, free=56672256, active=12895076352, inactive=12674760704, wired=4034822144)
2025-03-20 21:17:31,755:INFO:Physical Core: 11
2025-03-20 21:17:31,755:INFO:Logical Core: 11
2025-03-20 21:17:31,755:INFO:Checking libraries
2025-03-20 21:17:31,755:INFO:System:
2025-03-20 21:17:31,755:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 21:17:31,755:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 21:17:31,755:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 21:17:31,755:INFO:PyCaret required dependencies:
2025-03-20 21:17:31,797:INFO:                 pip: 25.0
2025-03-20 21:17:31,797:INFO:          setuptools: 77.0.1
2025-03-20 21:17:31,797:INFO:             pycaret: 3.3.2
2025-03-20 21:17:31,797:INFO:             IPython: 8.34.0
2025-03-20 21:17:31,797:INFO:          ipywidgets: 8.1.5
2025-03-20 21:17:31,797:INFO:                tqdm: 4.67.1
2025-03-20 21:17:31,797:INFO:               numpy: 1.26.4
2025-03-20 21:17:31,797:INFO:              pandas: 2.1.4
2025-03-20 21:17:31,797:INFO:              jinja2: 3.1.6
2025-03-20 21:17:31,797:INFO:               scipy: 1.11.4
2025-03-20 21:17:31,797:INFO:              joblib: 1.3.2
2025-03-20 21:17:31,797:INFO:             sklearn: 1.4.2
2025-03-20 21:17:31,797:INFO:                pyod: 2.0.3
2025-03-20 21:17:31,797:INFO:            imblearn: 0.13.0
2025-03-20 21:17:31,797:INFO:   category_encoders: 2.7.0
2025-03-20 21:17:31,797:INFO:            lightgbm: 4.6.0
2025-03-20 21:17:31,797:INFO:               numba: 0.61.0
2025-03-20 21:17:31,797:INFO:            requests: 2.32.3
2025-03-20 21:17:31,797:INFO:          matplotlib: 3.7.5
2025-03-20 21:17:31,797:INFO:          scikitplot: 0.3.7
2025-03-20 21:17:31,797:INFO:         yellowbrick: 1.5
2025-03-20 21:17:31,797:INFO:              plotly: 5.24.1
2025-03-20 21:17:31,797:INFO:    plotly-resampler: Not installed
2025-03-20 21:17:31,797:INFO:             kaleido: 0.2.1
2025-03-20 21:17:31,797:INFO:           schemdraw: 0.15
2025-03-20 21:17:31,797:INFO:         statsmodels: 0.14.4
2025-03-20 21:17:31,797:INFO:              sktime: 0.26.0
2025-03-20 21:17:31,797:INFO:               tbats: 1.1.3
2025-03-20 21:17:31,797:INFO:            pmdarima: 2.0.4
2025-03-20 21:17:31,797:INFO:              psutil: 7.0.0
2025-03-20 21:17:31,797:INFO:          markupsafe: 3.0.2
2025-03-20 21:17:31,797:INFO:             pickle5: Not installed
2025-03-20 21:17:31,797:INFO:         cloudpickle: 3.1.1
2025-03-20 21:17:31,797:INFO:         deprecation: 2.1.0
2025-03-20 21:17:31,797:INFO:              xxhash: 3.5.0
2025-03-20 21:17:31,797:INFO:           wurlitzer: 3.1.1
2025-03-20 21:17:31,797:INFO:PyCaret optional dependencies:
2025-03-20 21:17:31,804:INFO:                shap: Not installed
2025-03-20 21:17:31,804:INFO:           interpret: Not installed
2025-03-20 21:17:31,804:INFO:                umap: Not installed
2025-03-20 21:17:31,804:INFO:     ydata_profiling: Not installed
2025-03-20 21:17:31,804:INFO:  explainerdashboard: Not installed
2025-03-20 21:17:31,804:INFO:             autoviz: Not installed
2025-03-20 21:17:31,804:INFO:           fairlearn: Not installed
2025-03-20 21:17:31,804:INFO:          deepchecks: Not installed
2025-03-20 21:17:31,804:INFO:             xgboost: Not installed
2025-03-20 21:17:31,804:INFO:            catboost: Not installed
2025-03-20 21:17:31,804:INFO:              kmodes: Not installed
2025-03-20 21:17:31,804:INFO:             mlxtend: Not installed
2025-03-20 21:17:31,804:INFO:       statsforecast: Not installed
2025-03-20 21:17:31,804:INFO:        tune_sklearn: Not installed
2025-03-20 21:17:31,804:INFO:                 ray: Not installed
2025-03-20 21:17:31,804:INFO:            hyperopt: Not installed
2025-03-20 21:17:31,805:INFO:              optuna: Not installed
2025-03-20 21:17:31,805:INFO:               skopt: Not installed
2025-03-20 21:17:31,805:INFO:              mlflow: Not installed
2025-03-20 21:17:31,805:INFO:              gradio: Not installed
2025-03-20 21:17:31,805:INFO:             fastapi: Not installed
2025-03-20 21:17:31,805:INFO:             uvicorn: Not installed
2025-03-20 21:17:31,805:INFO:              m2cgen: Not installed
2025-03-20 21:17:31,805:INFO:           evidently: Not installed
2025-03-20 21:17:31,805:INFO:               fugue: Not installed
2025-03-20 21:17:31,805:INFO:           streamlit: 1.43.2
2025-03-20 21:17:31,805:INFO:             prophet: Not installed
2025-03-20 21:17:31,805:INFO:None
2025-03-20 21:17:31,805:INFO:Set up data.
2025-03-20 21:17:31,807:INFO:Set up folding strategy.
2025-03-20 21:17:31,807:INFO:Set up train/test split.
2025-03-20 21:17:31,809:INFO:Set up index.
2025-03-20 21:17:31,809:INFO:Assigning column types.
2025-03-20 21:17:31,811:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 21:17:31,811:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,813:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,816:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:31,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:31,870:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,872:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,874:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,904:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:31,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:31,927:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 21:17:31,929:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,932:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:31,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:31,989:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:17:31,991:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,043:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,043:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 21:17:32,048:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,078:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,105:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,157:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 21:17:32,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,247:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,269:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 21:17:32,303:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:17:32,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,380:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 21:17:32,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,494:INFO:Preparing preprocessing pipeline...
2025-03-20 21:17:32,494:INFO:Set up simple imputation.
2025-03-20 21:17:32,494:INFO:Set up removing outliers.
2025-03-20 21:17:32,494:INFO:Set up feature normalization.
2025-03-20 21:17:32,494:INFO:Set up feature selection.
2025-03-20 21:17:32,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:17:32,552:INFO:Set up column name cleaning.
2025-03-20 21:18:20,255:INFO:PyCaret RegressionExperiment
2025-03-20 21:18:20,255:INFO:Logging name: reg-default-name
2025-03-20 21:18:20,256:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 21:18:20,256:INFO:version 3.3.2
2025-03-20 21:18:20,256:INFO:Initializing setup()
2025-03-20 21:18:20,256:INFO:self.USI: 93c3
2025-03-20 21:18:20,256:INFO:self._variable_keys: {'X_train', 'target_param', 'transform_target_param', 'memory', '_ml_usecase', 'X', 'idx', 'n_jobs_param', 'y_train', '_available_plots', 'log_plots_param', 'html_param', 'USI', 'fold_groups_param', 'data', 'X_test', 'exp_name_log', 'logging_param', 'seed', 'gpu_param', 'y', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'exp_id', 'fold_shuffle_param', 'fold_generator'}
2025-03-20 21:18:20,256:INFO:Checking environment
2025-03-20 21:18:20,256:INFO:python_version: 3.10.16
2025-03-20 21:18:20,256:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 21:18:20,256:INFO:machine: arm64
2025-03-20 21:18:20,256:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 21:18:20,256:INFO:Memory: svmem(total=38654705664, available=13106790400, percent=66.1, used=16807903232, free=186253312, active=12829868032, inactive=12676939776, wired=3978035200)
2025-03-20 21:18:20,256:INFO:Physical Core: 11
2025-03-20 21:18:20,256:INFO:Logical Core: 11
2025-03-20 21:18:20,256:INFO:Checking libraries
2025-03-20 21:18:20,256:INFO:System:
2025-03-20 21:18:20,256:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 21:18:20,256:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 21:18:20,256:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 21:18:20,256:INFO:PyCaret required dependencies:
2025-03-20 21:18:20,256:INFO:                 pip: 25.0
2025-03-20 21:18:20,256:INFO:          setuptools: 77.0.1
2025-03-20 21:18:20,256:INFO:             pycaret: 3.3.2
2025-03-20 21:18:20,256:INFO:             IPython: 8.34.0
2025-03-20 21:18:20,256:INFO:          ipywidgets: 8.1.5
2025-03-20 21:18:20,256:INFO:                tqdm: 4.67.1
2025-03-20 21:18:20,256:INFO:               numpy: 1.26.4
2025-03-20 21:18:20,256:INFO:              pandas: 2.1.4
2025-03-20 21:18:20,256:INFO:              jinja2: 3.1.6
2025-03-20 21:18:20,256:INFO:               scipy: 1.11.4
2025-03-20 21:18:20,256:INFO:              joblib: 1.3.2
2025-03-20 21:18:20,256:INFO:             sklearn: 1.4.2
2025-03-20 21:18:20,256:INFO:                pyod: 2.0.3
2025-03-20 21:18:20,256:INFO:            imblearn: 0.13.0
2025-03-20 21:18:20,256:INFO:   category_encoders: 2.7.0
2025-03-20 21:18:20,256:INFO:            lightgbm: 4.6.0
2025-03-20 21:18:20,256:INFO:               numba: 0.61.0
2025-03-20 21:18:20,256:INFO:            requests: 2.32.3
2025-03-20 21:18:20,256:INFO:          matplotlib: 3.7.5
2025-03-20 21:18:20,256:INFO:          scikitplot: 0.3.7
2025-03-20 21:18:20,256:INFO:         yellowbrick: 1.5
2025-03-20 21:18:20,256:INFO:              plotly: 5.24.1
2025-03-20 21:18:20,256:INFO:    plotly-resampler: Not installed
2025-03-20 21:18:20,256:INFO:             kaleido: 0.2.1
2025-03-20 21:18:20,256:INFO:           schemdraw: 0.15
2025-03-20 21:18:20,256:INFO:         statsmodels: 0.14.4
2025-03-20 21:18:20,256:INFO:              sktime: 0.26.0
2025-03-20 21:18:20,256:INFO:               tbats: 1.1.3
2025-03-20 21:18:20,256:INFO:            pmdarima: 2.0.4
2025-03-20 21:18:20,256:INFO:              psutil: 7.0.0
2025-03-20 21:18:20,256:INFO:          markupsafe: 3.0.2
2025-03-20 21:18:20,256:INFO:             pickle5: Not installed
2025-03-20 21:18:20,256:INFO:         cloudpickle: 3.1.1
2025-03-20 21:18:20,256:INFO:         deprecation: 2.1.0
2025-03-20 21:18:20,256:INFO:              xxhash: 3.5.0
2025-03-20 21:18:20,256:INFO:           wurlitzer: 3.1.1
2025-03-20 21:18:20,256:INFO:PyCaret optional dependencies:
2025-03-20 21:18:20,257:INFO:                shap: Not installed
2025-03-20 21:18:20,257:INFO:           interpret: Not installed
2025-03-20 21:18:20,257:INFO:                umap: Not installed
2025-03-20 21:18:20,257:INFO:     ydata_profiling: Not installed
2025-03-20 21:18:20,257:INFO:  explainerdashboard: Not installed
2025-03-20 21:18:20,257:INFO:             autoviz: Not installed
2025-03-20 21:18:20,257:INFO:           fairlearn: Not installed
2025-03-20 21:18:20,257:INFO:          deepchecks: Not installed
2025-03-20 21:18:20,257:INFO:             xgboost: Not installed
2025-03-20 21:18:20,257:INFO:            catboost: Not installed
2025-03-20 21:18:20,257:INFO:              kmodes: Not installed
2025-03-20 21:18:20,257:INFO:             mlxtend: Not installed
2025-03-20 21:18:20,257:INFO:       statsforecast: Not installed
2025-03-20 21:18:20,257:INFO:        tune_sklearn: Not installed
2025-03-20 21:18:20,257:INFO:                 ray: Not installed
2025-03-20 21:18:20,257:INFO:            hyperopt: Not installed
2025-03-20 21:18:20,257:INFO:              optuna: Not installed
2025-03-20 21:18:20,257:INFO:               skopt: Not installed
2025-03-20 21:18:20,257:INFO:              mlflow: Not installed
2025-03-20 21:18:20,257:INFO:              gradio: Not installed
2025-03-20 21:18:20,257:INFO:             fastapi: Not installed
2025-03-20 21:18:20,257:INFO:             uvicorn: Not installed
2025-03-20 21:18:20,257:INFO:              m2cgen: Not installed
2025-03-20 21:18:20,257:INFO:           evidently: Not installed
2025-03-20 21:18:20,257:INFO:               fugue: Not installed
2025-03-20 21:18:20,257:INFO:           streamlit: 1.43.2
2025-03-20 21:18:20,257:INFO:             prophet: Not installed
2025-03-20 21:18:20,257:INFO:None
2025-03-20 21:18:20,257:INFO:Set up data.
2025-03-20 21:18:20,259:INFO:Set up folding strategy.
2025-03-20 21:18:20,259:INFO:Set up train/test split.
2025-03-20 21:18:20,261:INFO:Set up index.
2025-03-20 21:18:20,261:INFO:Assigning column types.
2025-03-20 21:18:20,263:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 21:18:20,263:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,266:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,268:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,297:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,320:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,323:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,325:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,377:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 21:18:20,380:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,382:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,412:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,436:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,439:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,469:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,496:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 21:18:20,500:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,532:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,555:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,560:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,590:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,614:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 21:18:20,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,670:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,728:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 21:18:20,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,820:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:18:20,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,843:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 21:18:20,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:20,959:INFO:Preparing preprocessing pipeline...
2025-03-20 21:18:20,959:INFO:Set up simple imputation.
2025-03-20 21:18:20,959:INFO:Set up removing outliers.
2025-03-20 21:18:20,959:INFO:Set up feature normalization.
2025-03-20 21:18:20,959:INFO:Set up feature selection.
2025-03-20 21:18:21,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:21,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:21,018:INFO:Set up column name cleaning.
2025-03-20 21:18:21,782:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:21,783:INFO:Finished creating preprocessing pipeline.
2025-03-20 21:18:21,790:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=0,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 21:18:21,790:INFO:Creating final display dataframe.
2025-03-20 21:18:22,092:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:22,170:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:22,241:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:22,243:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 4)
4        Transformed data shape        (17630, 1)
5   Transformed train set shape        (13957, 1)
6    Transformed test set shape         (3673, 1)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              93c3
2025-03-20 21:18:22,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:22,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:22,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:22,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:18:22,363:INFO:setup() successfully completed in 2.11s...............
2025-03-20 21:18:22,363:INFO:Initializing create_model()
2025-03-20 21:18:22,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x127c718a0>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 21:18:22,363:INFO:Checking exceptions
2025-03-20 21:18:22,381:INFO:Importing libraries
2025-03-20 21:18:22,382:INFO:Copying training dataset
2025-03-20 21:18:22,389:INFO:Defining folds
2025-03-20 21:18:22,389:INFO:Declaring metric variables
2025-03-20 21:18:22,392:INFO:Importing untrained model
2025-03-20 21:18:22,395:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 21:18:22,402:INFO:Starting cross validation
2025-03-20 21:18:22,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 21:18:25,735:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000454 seconds.
2025-03-20 21:18:25,736:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,736:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:18:25,736:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 3
2025-03-20 21:18:25,736:INFO:[LightGBM] [Info] Start training from score 7345.539650
2025-03-20 21:18:25,741:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000833 seconds.
2025-03-20 21:18:25,742:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,742:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:18:25,742:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:25,743:INFO:[LightGBM] [Info] Start training from score 7339.902874
2025-03-20 21:18:25,752:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000917 seconds.
2025-03-20 21:18:25,752:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,752:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:18:25,752:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 3
2025-03-20 21:18:25,754:INFO:[LightGBM] [Info] Start training from score 7348.756131
2025-03-20 21:18:25,770:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001256 seconds.
2025-03-20 21:18:25,770:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,771:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:18:25,771:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:25,771:INFO:[LightGBM] [Info] Start training from score 7357.778680
2025-03-20 21:18:25,778:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001040 seconds.
2025-03-20 21:18:25,778:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,778:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:18:25,779:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:25,779:INFO:[LightGBM] [Info] Start training from score 7351.494467
2025-03-20 21:18:25,796:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001611 seconds.
2025-03-20 21:18:25,796:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,796:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:18:25,796:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:25,797:INFO:[LightGBM] [Info] Start training from score 7356.929305
2025-03-20 21:18:25,847:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001061 seconds.
2025-03-20 21:18:25,847:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,847:INFO:[LightGBM] [Info] Total Bins 312
2025-03-20 21:18:25,847:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:25,848:INFO:[LightGBM] [Info] Start training from score 7347.949447
2025-03-20 21:18:25,970:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000402 seconds.
2025-03-20 21:18:25,970:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:25,970:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:18:25,970:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:25,970:INFO:[LightGBM] [Info] Start training from score 7358.660377
2025-03-20 21:18:26,092:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000379 seconds.
2025-03-20 21:18:26,092:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:26,092:INFO:[LightGBM] [Info] Total Bins 310
2025-03-20 21:18:26,092:INFO:[LightGBM] [Info] Number of data points in the train set: 12562, number of used features: 3
2025-03-20 21:18:26,092:INFO:[LightGBM] [Info] Start training from score 7347.252587
2025-03-20 21:18:26,155:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000433 seconds.
2025-03-20 21:18:26,155:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:18:26,156:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:18:26,156:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:18:26,156:INFO:[LightGBM] [Info] Start training from score 7355.784492
2025-03-20 21:18:29,184:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,191:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,223:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,281:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,332:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,355:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,381:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,392:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,432:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:18:29,485:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:29,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:20:29,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:20:29,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:20:29,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-20 21:20:32,577:INFO:PyCaret RegressionExperiment
2025-03-20 21:20:32,577:INFO:Logging name: reg-default-name
2025-03-20 21:20:32,577:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 21:20:32,577:INFO:version 3.3.2
2025-03-20 21:20:32,577:INFO:Initializing setup()
2025-03-20 21:20:32,577:INFO:self.USI: 1fb6
2025-03-20 21:20:32,577:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 21:20:32,577:INFO:Checking environment
2025-03-20 21:20:32,577:INFO:python_version: 3.10.16
2025-03-20 21:20:32,577:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 21:20:32,578:INFO:machine: arm64
2025-03-20 21:20:32,578:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 21:20:32,578:INFO:Memory: svmem(total=38654705664, available=13586661376, percent=64.9, used=16150265856, free=1429536768, active=12073385984, inactive=12046712832, wired=4076879872)
2025-03-20 21:20:32,578:INFO:Physical Core: 11
2025-03-20 21:20:32,578:INFO:Logical Core: 11
2025-03-20 21:20:32,578:INFO:Checking libraries
2025-03-20 21:20:32,578:INFO:System:
2025-03-20 21:20:32,578:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 21:20:32,578:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 21:20:32,578:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 21:20:32,578:INFO:PyCaret required dependencies:
2025-03-20 21:20:32,619:INFO:                 pip: 25.0
2025-03-20 21:20:32,619:INFO:          setuptools: 77.0.1
2025-03-20 21:20:32,619:INFO:             pycaret: 3.3.2
2025-03-20 21:20:32,619:INFO:             IPython: 8.34.0
2025-03-20 21:20:32,619:INFO:          ipywidgets: 8.1.5
2025-03-20 21:20:32,619:INFO:                tqdm: 4.67.1
2025-03-20 21:20:32,619:INFO:               numpy: 1.26.4
2025-03-20 21:20:32,619:INFO:              pandas: 2.1.4
2025-03-20 21:20:32,619:INFO:              jinja2: 3.1.6
2025-03-20 21:20:32,619:INFO:               scipy: 1.11.4
2025-03-20 21:20:32,620:INFO:              joblib: 1.3.2
2025-03-20 21:20:32,620:INFO:             sklearn: 1.4.2
2025-03-20 21:20:32,620:INFO:                pyod: 2.0.3
2025-03-20 21:20:32,620:INFO:            imblearn: 0.13.0
2025-03-20 21:20:32,620:INFO:   category_encoders: 2.7.0
2025-03-20 21:20:32,620:INFO:            lightgbm: 4.6.0
2025-03-20 21:20:32,620:INFO:               numba: 0.61.0
2025-03-20 21:20:32,620:INFO:            requests: 2.32.3
2025-03-20 21:20:32,620:INFO:          matplotlib: 3.7.5
2025-03-20 21:20:32,620:INFO:          scikitplot: 0.3.7
2025-03-20 21:20:32,620:INFO:         yellowbrick: 1.5
2025-03-20 21:20:32,620:INFO:              plotly: 5.24.1
2025-03-20 21:20:32,620:INFO:    plotly-resampler: Not installed
2025-03-20 21:20:32,620:INFO:             kaleido: 0.2.1
2025-03-20 21:20:32,620:INFO:           schemdraw: 0.15
2025-03-20 21:20:32,620:INFO:         statsmodels: 0.14.4
2025-03-20 21:20:32,620:INFO:              sktime: 0.26.0
2025-03-20 21:20:32,620:INFO:               tbats: 1.1.3
2025-03-20 21:20:32,620:INFO:            pmdarima: 2.0.4
2025-03-20 21:20:32,620:INFO:              psutil: 7.0.0
2025-03-20 21:20:32,620:INFO:          markupsafe: 3.0.2
2025-03-20 21:20:32,620:INFO:             pickle5: Not installed
2025-03-20 21:20:32,620:INFO:         cloudpickle: 3.1.1
2025-03-20 21:20:32,620:INFO:         deprecation: 2.1.0
2025-03-20 21:20:32,620:INFO:              xxhash: 3.5.0
2025-03-20 21:20:32,620:INFO:           wurlitzer: 3.1.1
2025-03-20 21:20:32,620:INFO:PyCaret optional dependencies:
2025-03-20 21:20:32,627:INFO:                shap: Not installed
2025-03-20 21:20:32,627:INFO:           interpret: Not installed
2025-03-20 21:20:32,627:INFO:                umap: Not installed
2025-03-20 21:20:32,627:INFO:     ydata_profiling: Not installed
2025-03-20 21:20:32,627:INFO:  explainerdashboard: Not installed
2025-03-20 21:20:32,627:INFO:             autoviz: Not installed
2025-03-20 21:20:32,627:INFO:           fairlearn: Not installed
2025-03-20 21:20:32,627:INFO:          deepchecks: Not installed
2025-03-20 21:20:32,627:INFO:             xgboost: Not installed
2025-03-20 21:20:32,627:INFO:            catboost: Not installed
2025-03-20 21:20:32,627:INFO:              kmodes: Not installed
2025-03-20 21:20:32,627:INFO:             mlxtend: Not installed
2025-03-20 21:20:32,627:INFO:       statsforecast: Not installed
2025-03-20 21:20:32,627:INFO:        tune_sklearn: Not installed
2025-03-20 21:20:32,627:INFO:                 ray: Not installed
2025-03-20 21:20:32,627:INFO:            hyperopt: Not installed
2025-03-20 21:20:32,627:INFO:              optuna: Not installed
2025-03-20 21:20:32,628:INFO:               skopt: Not installed
2025-03-20 21:20:32,628:INFO:              mlflow: Not installed
2025-03-20 21:20:32,628:INFO:              gradio: Not installed
2025-03-20 21:20:32,628:INFO:             fastapi: Not installed
2025-03-20 21:20:32,628:INFO:             uvicorn: Not installed
2025-03-20 21:20:32,628:INFO:              m2cgen: Not installed
2025-03-20 21:20:32,628:INFO:           evidently: Not installed
2025-03-20 21:20:32,628:INFO:               fugue: Not installed
2025-03-20 21:20:32,628:INFO:           streamlit: 1.43.2
2025-03-20 21:20:32,628:INFO:             prophet: Not installed
2025-03-20 21:20:32,628:INFO:None
2025-03-20 21:20:32,628:INFO:Set up data.
2025-03-20 21:20:32,630:INFO:Set up folding strategy.
2025-03-20 21:20:32,631:INFO:Set up train/test split.
2025-03-20 21:20:32,633:INFO:Set up index.
2025-03-20 21:20:32,633:INFO:Assigning column types.
2025-03-20 21:20:32,634:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 21:20:32,634:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,637:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,639:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,696:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,698:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,701:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,754:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 21:20:32,757:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,790:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,817:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,820:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,850:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,874:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 21:20:32,879:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,909:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,937:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:32,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:32,990:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 21:20:33,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:33,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:33,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:33,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 21:20:33,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,104:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 21:20:33,139:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:33,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,196:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 21:20:33,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,219:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 21:20:33,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,334:INFO:Preparing preprocessing pipeline...
2025-03-20 21:20:33,334:INFO:Set up simple imputation.
2025-03-20 21:20:33,335:INFO:Set up removing outliers.
2025-03-20 21:20:33,335:INFO:Set up feature normalization.
2025-03-20 21:20:33,335:INFO:Set up feature selection.
2025-03-20 21:20:33,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,392:INFO:Set up column name cleaning.
2025-03-20 21:20:33,423:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:33,424:INFO:Finished creating preprocessing pipeline.
2025-03-20 21:20:33,431:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=0,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 21:20:33,431:INFO:Creating final display dataframe.
2025-03-20 21:20:33,447:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:33,463:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:33,481:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:33,496:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:33,499:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 4)
4        Transformed data shape        (17630, 1)
5   Transformed train set shape        (13957, 1)
6    Transformed test set shape         (3673, 1)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              1fb6
2025-03-20 21:20:33,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 21:20:33,619:INFO:setup() successfully completed in 1.04s...............
2025-03-20 21:20:33,619:INFO:Initializing create_model()
2025-03-20 21:20:33,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x128debc40>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 21:20:33,619:INFO:Checking exceptions
2025-03-20 21:20:33,635:INFO:Importing libraries
2025-03-20 21:20:33,636:INFO:Copying training dataset
2025-03-20 21:20:33,644:INFO:Defining folds
2025-03-20 21:20:33,644:INFO:Declaring metric variables
2025-03-20 21:20:33,646:INFO:Importing untrained model
2025-03-20 21:20:33,649:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 21:20:33,654:INFO:Starting cross validation
2025-03-20 21:20:33,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 21:20:36,798:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001279 seconds.
2025-03-20 21:20:36,799:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 21:20:36,799:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 21:20:36,799:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:20:36,799:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 3
2025-03-20 21:20:36,799:INFO:[LightGBM] [Info] Start training from score 7348.756131
2025-03-20 21:20:36,806:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000698 seconds.
2025-03-20 21:20:36,806:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:36,806:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:20:36,806:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:36,807:INFO:[LightGBM] [Info] Start training from score 7357.778680
2025-03-20 21:20:36,816:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000652 seconds.
2025-03-20 21:20:36,816:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:36,816:INFO:[LightGBM] [Info] Total Bins 312
2025-03-20 21:20:36,817:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:36,817:INFO:[LightGBM] [Info] Start training from score 7347.949447
2025-03-20 21:20:36,862:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000856 seconds.
2025-03-20 21:20:36,862:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:36,862:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:20:36,862:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:36,864:INFO:[LightGBM] [Info] Start training from score 7339.902874
2025-03-20 21:20:36,874:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.004365 seconds.
2025-03-20 21:20:36,875:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:36,875:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:20:36,875:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 3
2025-03-20 21:20:36,879:INFO:[LightGBM] [Info] Start training from score 7345.539650
2025-03-20 21:20:36,887:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.008260 seconds.
2025-03-20 21:20:36,887:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:36,887:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:20:36,888:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:36,893:INFO:[LightGBM] [Info] Start training from score 7356.929305
2025-03-20 21:20:36,980:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000382 seconds.
2025-03-20 21:20:36,980:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:36,980:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:20:36,980:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:36,981:INFO:[LightGBM] [Info] Start training from score 7351.494467
2025-03-20 21:20:37,102:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000388 seconds.
2025-03-20 21:20:37,102:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:37,102:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 21:20:37,102:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:37,102:INFO:[LightGBM] [Info] Start training from score 7355.784492
2025-03-20 21:20:37,117:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000359 seconds.
2025-03-20 21:20:37,117:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:37,117:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 21:20:37,117:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 21:20:37,118:INFO:[LightGBM] [Info] Start training from score 7358.660377
2025-03-20 21:20:37,233:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000436 seconds.
2025-03-20 21:20:37,233:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 21:20:37,233:INFO:[LightGBM] [Info] Total Bins 310
2025-03-20 21:20:37,233:INFO:[LightGBM] [Info] Number of data points in the train set: 12562, number of used features: 3
2025-03-20 21:20:37,233:INFO:[LightGBM] [Info] Start training from score 7347.252587
2025-03-20 21:20:40,178:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,256:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,334:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,386:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,420:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,466:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,490:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,529:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,539:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:20:40,547:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 21:23:34,699:INFO:Initializing predict_model()
2025-03-20 21:23:34,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63e9a20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347faf80>)
2025-03-20 21:23:34,699:INFO:Checking exceptions
2025-03-20 21:23:34,699:INFO:Preloading libraries
2025-03-20 21:23:34,699:INFO:Set up data.
2025-03-20 21:23:34,700:INFO:Set up index.
2025-03-20 21:23:35,914:INFO:Initializing predict_model()
2025-03-20 21:23:35,914:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63f8eb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347fa7a0>)
2025-03-20 21:23:35,915:INFO:Checking exceptions
2025-03-20 21:23:35,915:INFO:Preloading libraries
2025-03-20 21:23:35,915:INFO:Set up data.
2025-03-20 21:23:35,916:INFO:Set up index.
2025-03-20 21:23:36,556:INFO:Initializing predict_model()
2025-03-20 21:23:36,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33478aa70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347fa440>)
2025-03-20 21:23:36,556:INFO:Checking exceptions
2025-03-20 21:23:36,556:INFO:Preloading libraries
2025-03-20 21:23:36,557:INFO:Set up data.
2025-03-20 21:23:36,558:INFO:Set up index.
2025-03-20 21:25:24,089:INFO:Initializing predict_model()
2025-03-20 21:25:24,090:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63fbac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8d30>)
2025-03-20 21:25:24,091:INFO:Checking exceptions
2025-03-20 21:25:24,091:INFO:Preloading libraries
2025-03-20 21:25:24,091:INFO:Set up data.
2025-03-20 21:25:24,092:INFO:Set up index.
2025-03-20 21:25:28,909:INFO:Initializing predict_model()
2025-03-20 21:25:28,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c635fb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347fb250>)
2025-03-20 21:25:28,910:INFO:Checking exceptions
2025-03-20 21:25:28,910:INFO:Preloading libraries
2025-03-20 21:25:28,910:INFO:Set up data.
2025-03-20 21:25:28,911:INFO:Set up index.
2025-03-20 21:28:32,760:INFO:Initializing predict_model()
2025-03-20 21:28:32,761:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c639e230>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3347f8d30>)
2025-03-20 21:28:32,761:INFO:Checking exceptions
2025-03-20 21:28:32,761:INFO:Preloading libraries
2025-03-20 21:28:32,761:INFO:Set up data.
2025-03-20 21:28:32,764:INFO:Set up index.
2025-03-20 21:28:36,794:INFO:Initializing predict_model()
2025-03-20 21:28:36,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c639e080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10725f9a0>)
2025-03-20 21:28:36,794:INFO:Checking exceptions
2025-03-20 21:28:36,794:INFO:Preloading libraries
2025-03-20 21:28:36,794:INFO:Set up data.
2025-03-20 21:28:36,797:INFO:Set up index.
2025-03-20 21:28:37,813:INFO:Initializing predict_model()
2025-03-20 21:28:37,813:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63b35e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3345b3910>)
2025-03-20 21:28:37,813:INFO:Checking exceptions
2025-03-20 21:28:37,813:INFO:Preloading libraries
2025-03-20 21:28:37,813:INFO:Set up data.
2025-03-20 21:28:37,815:INFO:Set up index.
2025-03-20 21:28:38,611:INFO:Initializing predict_model()
2025-03-20 21:28:38,611:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63b1900>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378e0160>)
2025-03-20 21:28:38,611:INFO:Checking exceptions
2025-03-20 21:28:38,611:INFO:Preloading libraries
2025-03-20 21:28:38,611:INFO:Set up data.
2025-03-20 21:28:38,613:INFO:Set up index.
2025-03-20 21:28:39,410:INFO:Initializing predict_model()
2025-03-20 21:28:39,410:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c6371f00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d4280>)
2025-03-20 21:28:39,410:INFO:Checking exceptions
2025-03-20 21:28:39,410:INFO:Preloading libraries
2025-03-20 21:28:39,411:INFO:Set up data.
2025-03-20 21:28:39,413:INFO:Set up index.
2025-03-20 21:28:40,388:INFO:Initializing predict_model()
2025-03-20 21:28:40,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c63b1420>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d44c0>)
2025-03-20 21:28:40,388:INFO:Checking exceptions
2025-03-20 21:28:40,388:INFO:Preloading libraries
2025-03-20 21:28:40,388:INFO:Set up data.
2025-03-20 21:28:40,390:INFO:Set up index.
2025-03-20 21:28:41,132:INFO:Initializing predict_model()
2025-03-20 21:28:41,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3c639e050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d4310>)
2025-03-20 21:28:41,132:INFO:Checking exceptions
2025-03-20 21:28:41,132:INFO:Preloading libraries
2025-03-20 21:28:41,132:INFO:Set up data.
2025-03-20 21:28:41,134:INFO:Set up index.
2025-03-20 21:33:31,617:INFO:Initializing predict_model()
2025-03-20 21:33:31,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378bdf90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d4e50>)
2025-03-20 21:33:31,617:INFO:Checking exceptions
2025-03-20 21:33:31,617:INFO:Preloading libraries
2025-03-20 21:33:31,617:INFO:Set up data.
2025-03-20 21:33:31,619:INFO:Set up index.
2025-03-20 21:34:14,642:INFO:Initializing predict_model()
2025-03-20 21:34:14,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378bdb40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d51b0>)
2025-03-20 21:34:14,642:INFO:Checking exceptions
2025-03-20 21:34:14,642:INFO:Preloading libraries
2025-03-20 21:34:14,642:INFO:Set up data.
2025-03-20 21:34:14,644:INFO:Set up index.
2025-03-20 21:34:15,541:INFO:Initializing predict_model()
2025-03-20 21:34:15,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378bd6f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d53f0>)
2025-03-20 21:34:15,541:INFO:Checking exceptions
2025-03-20 21:34:15,541:INFO:Preloading libraries
2025-03-20 21:34:15,542:INFO:Set up data.
2025-03-20 21:34:15,544:INFO:Set up index.
2025-03-20 21:34:16,478:INFO:Initializing predict_model()
2025-03-20 21:34:16,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378c03a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d4a60>)
2025-03-20 21:34:16,478:INFO:Checking exceptions
2025-03-20 21:34:16,478:INFO:Preloading libraries
2025-03-20 21:34:16,479:INFO:Set up data.
2025-03-20 21:34:16,480:INFO:Set up index.
2025-03-20 21:34:17,457:INFO:Initializing predict_model()
2025-03-20 21:34:17,457:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378c07f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d4940>)
2025-03-20 21:34:17,457:INFO:Checking exceptions
2025-03-20 21:34:17,457:INFO:Preloading libraries
2025-03-20 21:34:17,458:INFO:Set up data.
2025-03-20 21:34:17,459:INFO:Set up index.
2025-03-20 21:34:18,128:INFO:Initializing predict_model()
2025-03-20 21:34:18,128:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378bc220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d49d0>)
2025-03-20 21:34:18,128:INFO:Checking exceptions
2025-03-20 21:34:18,128:INFO:Preloading libraries
2025-03-20 21:34:18,128:INFO:Set up data.
2025-03-20 21:34:18,130:INFO:Set up index.
2025-03-20 21:34:20,182:INFO:Initializing predict_model()
2025-03-20 21:34:20,182:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378bffa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d4310>)
2025-03-20 21:34:20,182:INFO:Checking exceptions
2025-03-20 21:34:20,183:INFO:Preloading libraries
2025-03-20 21:34:20,183:INFO:Set up data.
2025-03-20 21:34:20,184:INFO:Set up index.
2025-03-20 21:34:20,372:INFO:Initializing predict_model()
2025-03-20 21:34:20,372:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3378e6fe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d45e0>)
2025-03-20 21:34:20,372:INFO:Checking exceptions
2025-03-20 21:34:20,372:INFO:Preloading libraries
2025-03-20 21:34:20,372:INFO:Set up data.
2025-03-20 21:34:20,375:INFO:Set up index.
2025-03-20 21:34:23,486:INFO:Initializing predict_model()
2025-03-20 21:34:23,486:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x337890670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d5870>)
2025-03-20 21:34:23,486:INFO:Checking exceptions
2025-03-20 21:34:23,487:INFO:Preloading libraries
2025-03-20 21:34:23,487:INFO:Set up data.
2025-03-20 21:34:23,488:INFO:Set up index.
2025-03-20 21:34:24,295:INFO:Initializing predict_model()
2025-03-20 21:34:24,295:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x337890070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d5ab0>)
2025-03-20 21:34:24,295:INFO:Checking exceptions
2025-03-20 21:34:24,295:INFO:Preloading libraries
2025-03-20 21:34:24,295:INFO:Set up data.
2025-03-20 21:34:24,297:INFO:Set up index.
2025-03-20 21:34:24,923:INFO:Initializing predict_model()
2025-03-20 21:34:24,923:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x337890fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d5990>)
2025-03-20 21:34:24,923:INFO:Checking exceptions
2025-03-20 21:34:24,923:INFO:Preloading libraries
2025-03-20 21:34:24,923:INFO:Set up data.
2025-03-20 21:34:24,925:INFO:Set up index.
2025-03-20 21:34:28,562:INFO:Initializing predict_model()
2025-03-20 21:34:28,562:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x337883b20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3378d5e10>)
2025-03-20 21:34:28,562:INFO:Checking exceptions
2025-03-20 21:34:28,562:INFO:Preloading libraries
2025-03-20 21:34:28,562:INFO:Set up data.
2025-03-20 21:34:28,565:INFO:Set up index.
2025-03-20 22:21:35,187:INFO:PyCaret RegressionExperiment
2025-03-20 22:21:35,187:INFO:Logging name: reg-default-name
2025-03-20 22:21:35,187:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:21:35,187:INFO:version 3.3.2
2025-03-20 22:21:35,187:INFO:Initializing setup()
2025-03-20 22:21:35,187:INFO:self.USI: 55fa
2025-03-20 22:21:35,187:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:21:35,187:INFO:Checking environment
2025-03-20 22:21:35,187:INFO:python_version: 3.10.16
2025-03-20 22:21:35,187:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:21:35,187:INFO:machine: arm64
2025-03-20 22:21:35,187:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:21:35,187:INFO:Memory: svmem(total=38654705664, available=13169754112, percent=65.9, used=16683401216, free=171163648, active=12743737344, inactive=12974276608, wired=3939663872)
2025-03-20 22:21:35,187:INFO:Physical Core: 11
2025-03-20 22:21:35,187:INFO:Logical Core: 11
2025-03-20 22:21:35,187:INFO:Checking libraries
2025-03-20 22:21:35,187:INFO:System:
2025-03-20 22:21:35,187:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:21:35,187:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:21:35,187:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:21:35,187:INFO:PyCaret required dependencies:
2025-03-20 22:21:35,187:INFO:                 pip: 25.0
2025-03-20 22:21:35,187:INFO:          setuptools: 77.0.1
2025-03-20 22:21:35,187:INFO:             pycaret: 3.3.2
2025-03-20 22:21:35,187:INFO:             IPython: 8.34.0
2025-03-20 22:21:35,187:INFO:          ipywidgets: 8.1.5
2025-03-20 22:21:35,187:INFO:                tqdm: 4.67.1
2025-03-20 22:21:35,187:INFO:               numpy: 1.26.4
2025-03-20 22:21:35,187:INFO:              pandas: 2.1.4
2025-03-20 22:21:35,187:INFO:              jinja2: 3.1.6
2025-03-20 22:21:35,187:INFO:               scipy: 1.11.4
2025-03-20 22:21:35,187:INFO:              joblib: 1.3.2
2025-03-20 22:21:35,187:INFO:             sklearn: 1.4.2
2025-03-20 22:21:35,187:INFO:                pyod: 2.0.3
2025-03-20 22:21:35,188:INFO:            imblearn: 0.13.0
2025-03-20 22:21:35,188:INFO:   category_encoders: 2.7.0
2025-03-20 22:21:35,188:INFO:            lightgbm: 4.6.0
2025-03-20 22:21:35,188:INFO:               numba: 0.61.0
2025-03-20 22:21:35,188:INFO:            requests: 2.32.3
2025-03-20 22:21:35,188:INFO:          matplotlib: 3.7.5
2025-03-20 22:21:35,188:INFO:          scikitplot: 0.3.7
2025-03-20 22:21:35,188:INFO:         yellowbrick: 1.5
2025-03-20 22:21:35,188:INFO:              plotly: 5.24.1
2025-03-20 22:21:35,188:INFO:    plotly-resampler: Not installed
2025-03-20 22:21:35,188:INFO:             kaleido: 0.2.1
2025-03-20 22:21:35,188:INFO:           schemdraw: 0.15
2025-03-20 22:21:35,188:INFO:         statsmodels: 0.14.4
2025-03-20 22:21:35,188:INFO:              sktime: 0.26.0
2025-03-20 22:21:35,188:INFO:               tbats: 1.1.3
2025-03-20 22:21:35,188:INFO:            pmdarima: 2.0.4
2025-03-20 22:21:35,188:INFO:              psutil: 7.0.0
2025-03-20 22:21:35,188:INFO:          markupsafe: 3.0.2
2025-03-20 22:21:35,188:INFO:             pickle5: Not installed
2025-03-20 22:21:35,188:INFO:         cloudpickle: 3.1.1
2025-03-20 22:21:35,188:INFO:         deprecation: 2.1.0
2025-03-20 22:21:35,188:INFO:              xxhash: 3.5.0
2025-03-20 22:21:35,188:INFO:           wurlitzer: 3.1.1
2025-03-20 22:21:35,188:INFO:PyCaret optional dependencies:
2025-03-20 22:21:35,188:INFO:                shap: Not installed
2025-03-20 22:21:35,188:INFO:           interpret: Not installed
2025-03-20 22:21:35,188:INFO:                umap: Not installed
2025-03-20 22:21:35,188:INFO:     ydata_profiling: Not installed
2025-03-20 22:21:35,188:INFO:  explainerdashboard: Not installed
2025-03-20 22:21:35,188:INFO:             autoviz: Not installed
2025-03-20 22:21:35,188:INFO:           fairlearn: Not installed
2025-03-20 22:21:35,188:INFO:          deepchecks: Not installed
2025-03-20 22:21:35,188:INFO:             xgboost: Not installed
2025-03-20 22:21:35,188:INFO:            catboost: Not installed
2025-03-20 22:21:35,188:INFO:              kmodes: Not installed
2025-03-20 22:21:35,188:INFO:             mlxtend: Not installed
2025-03-20 22:21:35,188:INFO:       statsforecast: Not installed
2025-03-20 22:21:35,188:INFO:        tune_sklearn: Not installed
2025-03-20 22:21:35,188:INFO:                 ray: Not installed
2025-03-20 22:21:35,188:INFO:            hyperopt: Not installed
2025-03-20 22:21:35,188:INFO:              optuna: Not installed
2025-03-20 22:21:35,188:INFO:               skopt: Not installed
2025-03-20 22:21:35,188:INFO:              mlflow: Not installed
2025-03-20 22:21:35,188:INFO:              gradio: Not installed
2025-03-20 22:21:35,188:INFO:             fastapi: Not installed
2025-03-20 22:21:35,188:INFO:             uvicorn: Not installed
2025-03-20 22:21:35,188:INFO:              m2cgen: Not installed
2025-03-20 22:21:35,188:INFO:           evidently: Not installed
2025-03-20 22:21:35,188:INFO:               fugue: Not installed
2025-03-20 22:21:35,188:INFO:           streamlit: 1.43.2
2025-03-20 22:21:35,188:INFO:             prophet: Not installed
2025-03-20 22:21:35,188:INFO:None
2025-03-20 22:21:35,188:INFO:Set up data.
2025-03-20 22:21:35,191:INFO:Set up folding strategy.
2025-03-20 22:21:35,191:INFO:Set up train/test split.
2025-03-20 22:21:35,195:INFO:Set up index.
2025-03-20 22:21:35,195:INFO:Assigning column types.
2025-03-20 22:21:35,197:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:21:35,197:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,200:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,203:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,234:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,257:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,260:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,262:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,292:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,316:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:21:35,318:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,320:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,351:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,376:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,378:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,409:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,431:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:21:35,436:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,467:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,494:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,524:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,547:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:21:35,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,640:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,665:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:21:35,700:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:21:35,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,780:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:21:35,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,896:INFO:Preparing preprocessing pipeline...
2025-03-20 22:21:35,896:INFO:Set up simple imputation.
2025-03-20 22:21:35,896:INFO:Set up removing outliers.
2025-03-20 22:21:35,896:INFO:Set up feature normalization.
2025-03-20 22:21:35,896:INFO:Set up feature selection.
2025-03-20 22:21:35,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:35,954:INFO:Set up column name cleaning.
2025-03-20 22:21:36,742:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:21:36,749:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequen...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:21:36,749:INFO:Creating final display dataframe.
2025-03-20 22:21:37,214:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 7)
4        Transformed data shape        (17630, 2)
5   Transformed train set shape        (13957, 2)
6    Transformed test set shape         (3673, 2)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              55fa
2025-03-20 22:21:37,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:37,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:37,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:37,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:21:37,338:INFO:setup() successfully completed in 2.16s...............
2025-03-20 22:23:21,414:INFO:Initializing create_model()
2025-03-20 22:23:21,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:23:21,414:INFO:Checking exceptions
2025-03-20 22:23:21,424:INFO:Importing libraries
2025-03-20 22:23:21,424:INFO:Copying training dataset
2025-03-20 22:23:21,432:INFO:Defining folds
2025-03-20 22:23:21,432:INFO:Declaring metric variables
2025-03-20 22:23:21,435:INFO:Importing untrained model
2025-03-20 22:23:21,450:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:23:21,472:INFO:Starting cross validation
2025-03-20 22:23:21,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:23:24,581:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002501 seconds.
2025-03-20 22:23:24,581:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,581:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002236 seconds.
2025-03-20 22:23:24,581:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,581:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000704 seconds.
2025-03-20 22:23:24,581:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 22:23:24,581:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 22:23:24,581:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,581:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,581:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,582:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 6
2025-03-20 22:23:24,582:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,582:INFO:
2025-03-20 22:23:24,582:INFO:[LightGBM] [Info] Start training from score 7360.465409
2025-03-20 22:23:24,582:INFO:[LightGBM] [Info] Start training from score 7341.638694
2025-03-20 22:23:24,582:INFO:[LightGBM] [Info] Start training from score 7356.216304
2025-03-20 22:23:24,585:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001157 seconds.
2025-03-20 22:23:24,585:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,585:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,586:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,586:INFO:[LightGBM] [Info] Start training from score 7363.621209
2025-03-20 22:23:24,601:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002627 seconds.
2025-03-20 22:23:24,601:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,602:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,602:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002659 seconds.
2025-03-20 22:23:24,603:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,603:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 6
2025-03-20 22:23:24,604:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,604:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,605:INFO:[LightGBM] [Info] Start training from score 7350.176592
2025-03-20 22:23:24,606:INFO:[LightGBM] [Info] Start training from score 7358.433723
2025-03-20 22:23:24,607:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001508 seconds.
2025-03-20 22:23:24,607:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,607:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,608:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,610:INFO:[LightGBM] [Info] Start training from score 7354.377358
2025-03-20 22:23:24,734:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000506 seconds.
2025-03-20 22:23:24,734:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,734:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,734:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,734:INFO:[LightGBM] [Info] Start training from score 7364.001592
2025-03-20 22:23:24,851:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000456 seconds.
2025-03-20 22:23:24,851:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,851:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,851:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,851:INFO:[LightGBM] [Info] Start training from score 7349.230396
2025-03-20 22:23:24,985:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000452 seconds.
2025-03-20 22:23:24,985:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:24,985:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:24,985:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 6
2025-03-20 22:23:24,985:INFO:[LightGBM] [Info] Start training from score 7362.685773
2025-03-20 22:23:28,390:INFO:Calculating mean and std
2025-03-20 22:23:28,391:INFO:Creating metrics dataframe
2025-03-20 22:23:28,395:INFO:Finalizing model
2025-03-20 22:23:28,632:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000345 seconds.
2025-03-20 22:23:28,632:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:23:28,632:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:23:28,632:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 6
2025-03-20 22:23:28,632:INFO:[LightGBM] [Info] Start training from score 7348.479616
2025-03-20 22:23:29,043:INFO:Uploading results into container
2025-03-20 22:23:29,044:INFO:Uploading model into container now
2025-03-20 22:23:29,049:INFO:_master_model_container: 1
2025-03-20 22:23:29,049:INFO:_display_container: 2
2025-03-20 22:23:29,050:INFO:OrthogonalMatchingPursuit()
2025-03-20 22:23:29,050:INFO:create_model() successfully completed......................................
2025-03-20 22:23:29,151:INFO:Initializing tune_model()
2025-03-20 22:23:29,151:INFO:tune_model(estimator=OrthogonalMatchingPursuit(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>)
2025-03-20 22:23:29,151:INFO:Checking exceptions
2025-03-20 22:23:29,160:INFO:Copying training dataset
2025-03-20 22:23:29,165:INFO:Checking base model
2025-03-20 22:23:29,165:INFO:Base model : Orthogonal Matching Pursuit
2025-03-20 22:23:29,167:INFO:Declaring metric variables
2025-03-20 22:23:29,168:INFO:Defining Hyperparameters
2025-03-20 22:23:29,296:INFO:Tuning with n_jobs=-1
2025-03-20 22:23:29,296:INFO:Initializing RandomizedSearchCV
2025-03-20 22:23:49,844:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:49,939:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:49,982:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:50,038:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:53,848:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:54,019:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:54,094:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:54,182:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:54,194:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:23:54,393:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:993: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 982, in _score
    scores = scorer(estimator, X_test, y_test, **score_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 253, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 286, in predict
    return self._decision_function(X)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 270, in _decision_function
    return safe_sparse_dot(X, self.coef_.T, dense_output=True) + self.intercept_
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/extmath.py", line 208, in safe_sparse_dot
    ret = a @ b
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

  warnings.warn(

2025-03-20 22:24:08,098:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:547: FitFailedWarning: 
90 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
90 fits failed with the following error:
Traceback (most recent call last):
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_omp.py", line 780, in fit
    coef_, self.n_iter_ = orthogonal_mp_gram(
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/linear_model/_omp.py", line 584, in orthogonal_mp_gram
    raise ValueError(
ValueError: The number of atoms cannot be more than the number of features

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-03-20 22:24:08,100:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/model_selection/_search.py:1051: UserWarning: One or more of the test scores are non-finite: [nan nan nan nan nan nan nan nan nan nan]
  warnings.warn(

2025-03-20 22:24:08,100:INFO:best_params: {'actual_estimator__n_nonzero_coefs': 2, 'actual_estimator__fit_intercept': True}
2025-03-20 22:24:08,101:INFO:Hyperparameter search completed
2025-03-20 22:24:08,101:INFO:SubProcess create_model() called ==================================
2025-03-20 22:24:08,101:INFO:Initializing create_model()
2025-03-20 22:24:08,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30f2ee170>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_nonzero_coefs': 2, 'fit_intercept': True})
2025-03-20 22:24:08,101:INFO:Checking exceptions
2025-03-20 22:24:08,101:INFO:Importing libraries
2025-03-20 22:24:08,101:INFO:Copying training dataset
2025-03-20 22:24:08,107:INFO:Defining folds
2025-03-20 22:24:08,107:INFO:Declaring metric variables
2025-03-20 22:24:08,109:INFO:Importing untrained model
2025-03-20 22:24:08,109:INFO:Declaring custom model
2025-03-20 22:24:08,111:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:24:08,114:INFO:Starting cross validation
2025-03-20 22:24:08,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:25:23,310:INFO:Initializing create_model()
2025-03-20 22:25:23,311:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>, estimator=lasso, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:25:23,311:INFO:Checking exceptions
2025-03-20 22:25:23,320:INFO:Importing libraries
2025-03-20 22:25:23,320:INFO:Copying training dataset
2025-03-20 22:25:23,329:INFO:Defining folds
2025-03-20 22:25:23,329:INFO:Declaring metric variables
2025-03-20 22:25:23,333:INFO:Importing untrained model
2025-03-20 22:25:23,335:INFO:Lasso Regression Imported successfully
2025-03-20 22:25:23,339:INFO:Starting cross validation
2025-03-20 22:25:23,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:25:27,482:INFO:Calculating mean and std
2025-03-20 22:25:27,483:INFO:Creating metrics dataframe
2025-03-20 22:25:27,486:INFO:Finalizing model
2025-03-20 22:25:27,702:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000416 seconds.
2025-03-20 22:25:27,702:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:25:27,702:INFO:[LightGBM] [Info] Total Bins 1082
2025-03-20 22:25:27,702:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 6
2025-03-20 22:25:27,702:INFO:[LightGBM] [Info] Start training from score 7348.479616
2025-03-20 22:25:28,247:INFO:Uploading results into container
2025-03-20 22:25:28,248:INFO:Uploading model into container now
2025-03-20 22:25:28,289:INFO:_master_model_container: 2
2025-03-20 22:25:28,289:INFO:_display_container: 3
2025-03-20 22:25:28,289:INFO:Lasso(random_state=42)
2025-03-20 22:25:28,289:INFO:create_model() successfully completed......................................
2025-03-20 22:25:28,414:INFO:Initializing finalize_model()
2025-03-20 22:25:28,415:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>, estimator=Lasso(random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:25:28,415:INFO:Finalizing Lasso(random_state=42)
2025-03-20 22:25:28,418:INFO:Initializing create_model()
2025-03-20 22:25:28,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>, estimator=Lasso(random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:25:28,418:INFO:Checking exceptions
2025-03-20 22:25:28,419:INFO:Importing libraries
2025-03-20 22:25:28,420:INFO:Copying training dataset
2025-03-20 22:25:28,420:INFO:Defining folds
2025-03-20 22:25:28,421:INFO:Declaring metric variables
2025-03-20 22:25:28,421:INFO:Importing untrained model
2025-03-20 22:25:28,421:INFO:Declaring custom model
2025-03-20 22:25:28,421:INFO:Lasso Regression Imported successfully
2025-03-20 22:25:28,435:INFO:Cross validation set to False
2025-03-20 22:25:28,435:INFO:Fitting Model
2025-03-20 22:25:28,703:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000355 seconds.
2025-03-20 22:25:28,703:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:25:28,703:INFO:[LightGBM] [Info] Total Bins 1083
2025-03-20 22:25:28,703:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 6
2025-03-20 22:25:28,703:INFO:[LightGBM] [Info] Start training from score 7364.501376
2025-03-20 22:25:29,238:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer...veOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Lasso(random_state=42))])
2025-03-20 22:25:29,238:INFO:create_model() successfully completed......................................
2025-03-20 22:25:29,359:INFO:_master_model_container: 2
2025-03-20 22:25:29,359:INFO:_display_container: 3
2025-03-20 22:25:29,368:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer...veOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Lasso(random_state=42))])
2025-03-20 22:25:29,368:INFO:finalize_model() successfully completed......................................
2025-03-20 22:25:29,536:INFO:Initializing save_model()
2025-03-20 22:25:29,536:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer...veOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Lasso(random_state=42))]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequen...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:25:29,536:INFO:Adding model into prep_pipe
2025-03-20 22:25:29,536:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:25:29,565:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 22:25:29,572:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer...veOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Lasso(random_state=42))])
2025-03-20 22:25:29,572:INFO:save_model() successfully completed......................................
2025-03-20 22:26:38,587:INFO:Initializing predict_model()
2025-03-20 22:26:38,587:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f6a7f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer...veOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Lasso(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13f6dc1f0>)
2025-03-20 22:26:38,587:INFO:Checking exceptions
2025-03-20 22:26:38,587:INFO:Preloading libraries
2025-03-20 22:26:38,589:INFO:Set up data.
2025-03-20 22:26:38,590:INFO:Set up index.
2025-03-20 22:29:15,948:INFO:PyCaret RegressionExperiment
2025-03-20 22:29:15,948:INFO:Logging name: reg-default-name
2025-03-20 22:29:15,948:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:29:15,948:INFO:version 3.3.2
2025-03-20 22:29:15,948:INFO:Initializing setup()
2025-03-20 22:29:15,948:INFO:self.USI: 180b
2025-03-20 22:29:15,948:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:29:15,948:INFO:Checking environment
2025-03-20 22:29:15,948:INFO:python_version: 3.10.16
2025-03-20 22:29:15,948:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:29:15,948:INFO:machine: arm64
2025-03-20 22:29:15,948:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:29:15,948:INFO:Memory: svmem(total=38654705664, available=13152387072, percent=66.0, used=16511057920, free=321880064, active=12786974720, inactive=12784992256, wired=3724083200)
2025-03-20 22:29:15,948:INFO:Physical Core: 11
2025-03-20 22:29:15,948:INFO:Logical Core: 11
2025-03-20 22:29:15,948:INFO:Checking libraries
2025-03-20 22:29:15,948:INFO:System:
2025-03-20 22:29:15,948:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:29:15,948:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:29:15,948:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:29:15,948:INFO:PyCaret required dependencies:
2025-03-20 22:29:15,948:INFO:                 pip: 25.0
2025-03-20 22:29:15,948:INFO:          setuptools: 77.0.1
2025-03-20 22:29:15,948:INFO:             pycaret: 3.3.2
2025-03-20 22:29:15,948:INFO:             IPython: 8.34.0
2025-03-20 22:29:15,948:INFO:          ipywidgets: 8.1.5
2025-03-20 22:29:15,948:INFO:                tqdm: 4.67.1
2025-03-20 22:29:15,948:INFO:               numpy: 1.26.4
2025-03-20 22:29:15,948:INFO:              pandas: 2.1.4
2025-03-20 22:29:15,948:INFO:              jinja2: 3.1.6
2025-03-20 22:29:15,948:INFO:               scipy: 1.11.4
2025-03-20 22:29:15,948:INFO:              joblib: 1.3.2
2025-03-20 22:29:15,948:INFO:             sklearn: 1.4.2
2025-03-20 22:29:15,948:INFO:                pyod: 2.0.3
2025-03-20 22:29:15,948:INFO:            imblearn: 0.13.0
2025-03-20 22:29:15,948:INFO:   category_encoders: 2.7.0
2025-03-20 22:29:15,948:INFO:            lightgbm: 4.6.0
2025-03-20 22:29:15,948:INFO:               numba: 0.61.0
2025-03-20 22:29:15,948:INFO:            requests: 2.32.3
2025-03-20 22:29:15,948:INFO:          matplotlib: 3.7.5
2025-03-20 22:29:15,948:INFO:          scikitplot: 0.3.7
2025-03-20 22:29:15,948:INFO:         yellowbrick: 1.5
2025-03-20 22:29:15,948:INFO:              plotly: 5.24.1
2025-03-20 22:29:15,948:INFO:    plotly-resampler: Not installed
2025-03-20 22:29:15,949:INFO:             kaleido: 0.2.1
2025-03-20 22:29:15,949:INFO:           schemdraw: 0.15
2025-03-20 22:29:15,949:INFO:         statsmodels: 0.14.4
2025-03-20 22:29:15,949:INFO:              sktime: 0.26.0
2025-03-20 22:29:15,949:INFO:               tbats: 1.1.3
2025-03-20 22:29:15,949:INFO:            pmdarima: 2.0.4
2025-03-20 22:29:15,949:INFO:              psutil: 7.0.0
2025-03-20 22:29:15,949:INFO:          markupsafe: 3.0.2
2025-03-20 22:29:15,949:INFO:             pickle5: Not installed
2025-03-20 22:29:15,949:INFO:         cloudpickle: 3.1.1
2025-03-20 22:29:15,949:INFO:         deprecation: 2.1.0
2025-03-20 22:29:15,949:INFO:              xxhash: 3.5.0
2025-03-20 22:29:15,949:INFO:           wurlitzer: 3.1.1
2025-03-20 22:29:15,949:INFO:PyCaret optional dependencies:
2025-03-20 22:29:15,949:INFO:                shap: Not installed
2025-03-20 22:29:15,949:INFO:           interpret: Not installed
2025-03-20 22:29:15,949:INFO:                umap: Not installed
2025-03-20 22:29:15,949:INFO:     ydata_profiling: Not installed
2025-03-20 22:29:15,949:INFO:  explainerdashboard: Not installed
2025-03-20 22:29:15,949:INFO:             autoviz: Not installed
2025-03-20 22:29:15,949:INFO:           fairlearn: Not installed
2025-03-20 22:29:15,949:INFO:          deepchecks: Not installed
2025-03-20 22:29:15,949:INFO:             xgboost: Not installed
2025-03-20 22:29:15,949:INFO:            catboost: Not installed
2025-03-20 22:29:15,949:INFO:              kmodes: Not installed
2025-03-20 22:29:15,949:INFO:             mlxtend: Not installed
2025-03-20 22:29:15,949:INFO:       statsforecast: Not installed
2025-03-20 22:29:15,949:INFO:        tune_sklearn: Not installed
2025-03-20 22:29:15,949:INFO:                 ray: Not installed
2025-03-20 22:29:15,949:INFO:            hyperopt: Not installed
2025-03-20 22:29:15,949:INFO:              optuna: Not installed
2025-03-20 22:29:15,949:INFO:               skopt: Not installed
2025-03-20 22:29:15,949:INFO:              mlflow: Not installed
2025-03-20 22:29:15,949:INFO:              gradio: Not installed
2025-03-20 22:29:15,949:INFO:             fastapi: Not installed
2025-03-20 22:29:15,949:INFO:             uvicorn: Not installed
2025-03-20 22:29:15,949:INFO:              m2cgen: Not installed
2025-03-20 22:29:15,949:INFO:           evidently: Not installed
2025-03-20 22:29:15,949:INFO:               fugue: Not installed
2025-03-20 22:29:15,950:INFO:           streamlit: 1.43.2
2025-03-20 22:29:15,950:INFO:             prophet: Not installed
2025-03-20 22:29:15,950:INFO:None
2025-03-20 22:29:15,950:INFO:Set up data.
2025-03-20 22:30:51,037:INFO:PyCaret RegressionExperiment
2025-03-20 22:30:51,037:INFO:Logging name: reg-default-name
2025-03-20 22:30:51,037:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:30:51,037:INFO:version 3.3.2
2025-03-20 22:30:51,037:INFO:Initializing setup()
2025-03-20 22:30:51,037:INFO:self.USI: 13d7
2025-03-20 22:30:51,037:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:30:51,037:INFO:Checking environment
2025-03-20 22:30:51,037:INFO:python_version: 3.10.16
2025-03-20 22:30:51,037:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:30:51,037:INFO:machine: arm64
2025-03-20 22:30:51,037:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:30:51,038:INFO:Memory: svmem(total=38654705664, available=13845725184, percent=64.2, used=15820029952, free=1687322624, active=12101566464, inactive=12111446016, wired=3718463488)
2025-03-20 22:30:51,038:INFO:Physical Core: 11
2025-03-20 22:30:51,038:INFO:Logical Core: 11
2025-03-20 22:30:51,038:INFO:Checking libraries
2025-03-20 22:30:51,038:INFO:System:
2025-03-20 22:30:51,038:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:30:51,038:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:30:51,038:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:30:51,038:INFO:PyCaret required dependencies:
2025-03-20 22:30:51,038:INFO:                 pip: 25.0
2025-03-20 22:30:51,038:INFO:          setuptools: 77.0.1
2025-03-20 22:30:51,038:INFO:             pycaret: 3.3.2
2025-03-20 22:30:51,038:INFO:             IPython: 8.34.0
2025-03-20 22:30:51,038:INFO:          ipywidgets: 8.1.5
2025-03-20 22:30:51,038:INFO:                tqdm: 4.67.1
2025-03-20 22:30:51,038:INFO:               numpy: 1.26.4
2025-03-20 22:30:51,038:INFO:              pandas: 2.1.4
2025-03-20 22:30:51,038:INFO:              jinja2: 3.1.6
2025-03-20 22:30:51,038:INFO:               scipy: 1.11.4
2025-03-20 22:30:51,038:INFO:              joblib: 1.3.2
2025-03-20 22:30:51,038:INFO:             sklearn: 1.4.2
2025-03-20 22:30:51,038:INFO:                pyod: 2.0.3
2025-03-20 22:30:51,038:INFO:            imblearn: 0.13.0
2025-03-20 22:30:51,038:INFO:   category_encoders: 2.7.0
2025-03-20 22:30:51,038:INFO:            lightgbm: 4.6.0
2025-03-20 22:30:51,038:INFO:               numba: 0.61.0
2025-03-20 22:30:51,038:INFO:            requests: 2.32.3
2025-03-20 22:30:51,038:INFO:          matplotlib: 3.7.5
2025-03-20 22:30:51,038:INFO:          scikitplot: 0.3.7
2025-03-20 22:30:51,038:INFO:         yellowbrick: 1.5
2025-03-20 22:30:51,038:INFO:              plotly: 5.24.1
2025-03-20 22:30:51,038:INFO:    plotly-resampler: Not installed
2025-03-20 22:30:51,038:INFO:             kaleido: 0.2.1
2025-03-20 22:30:51,038:INFO:           schemdraw: 0.15
2025-03-20 22:30:51,038:INFO:         statsmodels: 0.14.4
2025-03-20 22:30:51,038:INFO:              sktime: 0.26.0
2025-03-20 22:30:51,038:INFO:               tbats: 1.1.3
2025-03-20 22:30:51,038:INFO:            pmdarima: 2.0.4
2025-03-20 22:30:51,038:INFO:              psutil: 7.0.0
2025-03-20 22:30:51,038:INFO:          markupsafe: 3.0.2
2025-03-20 22:30:51,038:INFO:             pickle5: Not installed
2025-03-20 22:30:51,038:INFO:         cloudpickle: 3.1.1
2025-03-20 22:30:51,038:INFO:         deprecation: 2.1.0
2025-03-20 22:30:51,038:INFO:              xxhash: 3.5.0
2025-03-20 22:30:51,038:INFO:           wurlitzer: 3.1.1
2025-03-20 22:30:51,038:INFO:PyCaret optional dependencies:
2025-03-20 22:30:51,038:INFO:                shap: Not installed
2025-03-20 22:30:51,038:INFO:           interpret: Not installed
2025-03-20 22:30:51,038:INFO:                umap: Not installed
2025-03-20 22:30:51,038:INFO:     ydata_profiling: Not installed
2025-03-20 22:30:51,038:INFO:  explainerdashboard: Not installed
2025-03-20 22:30:51,038:INFO:             autoviz: Not installed
2025-03-20 22:30:51,039:INFO:           fairlearn: Not installed
2025-03-20 22:30:51,039:INFO:          deepchecks: Not installed
2025-03-20 22:30:51,039:INFO:             xgboost: Not installed
2025-03-20 22:30:51,039:INFO:            catboost: Not installed
2025-03-20 22:30:51,039:INFO:              kmodes: Not installed
2025-03-20 22:30:51,039:INFO:             mlxtend: Not installed
2025-03-20 22:30:51,039:INFO:       statsforecast: Not installed
2025-03-20 22:30:51,039:INFO:        tune_sklearn: Not installed
2025-03-20 22:30:51,039:INFO:                 ray: Not installed
2025-03-20 22:30:51,039:INFO:            hyperopt: Not installed
2025-03-20 22:30:51,039:INFO:              optuna: Not installed
2025-03-20 22:30:51,039:INFO:               skopt: Not installed
2025-03-20 22:30:51,039:INFO:              mlflow: Not installed
2025-03-20 22:30:51,039:INFO:              gradio: Not installed
2025-03-20 22:30:51,039:INFO:             fastapi: Not installed
2025-03-20 22:30:51,039:INFO:             uvicorn: Not installed
2025-03-20 22:30:51,039:INFO:              m2cgen: Not installed
2025-03-20 22:30:51,039:INFO:           evidently: Not installed
2025-03-20 22:30:51,039:INFO:               fugue: Not installed
2025-03-20 22:30:51,039:INFO:           streamlit: 1.43.2
2025-03-20 22:30:51,039:INFO:             prophet: Not installed
2025-03-20 22:30:51,039:INFO:None
2025-03-20 22:30:51,039:INFO:Set up data.
2025-03-20 22:30:51,041:INFO:Set up folding strategy.
2025-03-20 22:30:51,041:INFO:Set up train/test split.
2025-03-20 22:30:51,044:INFO:Set up index.
2025-03-20 22:30:51,044:INFO:Assigning column types.
2025-03-20 22:30:51,046:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:30:51,046:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,048:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,050:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,080:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,104:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,107:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,109:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,161:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:30:51,163:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,166:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,195:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,217:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,220:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,223:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,253:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,276:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:30:51,280:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,332:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,337:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,366:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,389:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:30:51,423:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,479:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,501:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:30:51,535:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,592:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:30:51,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,614:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:30:51,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,726:INFO:Preparing preprocessing pipeline...
2025-03-20 22:30:51,726:INFO:Set up simple imputation.
2025-03-20 22:30:51,726:INFO:Set up removing outliers.
2025-03-20 22:30:51,726:INFO:Set up feature normalization.
2025-03-20 22:30:51,726:INFO:Set up feature selection.
2025-03-20 22:30:51,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,783:INFO:Set up column name cleaning.
2025-03-20 22:30:51,808:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:51,810:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:30:51,816:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=0,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:30:51,816:INFO:Creating final display dataframe.
2025-03-20 22:30:51,834:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:51,850:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:51,869:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:51,884:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:51,886:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 4)
4        Transformed data shape        (17630, 1)
5   Transformed train set shape        (13957, 1)
6    Transformed test set shape         (3673, 1)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              13d7
2025-03-20 22:30:51,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:51,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:52,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:52,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:30:52,003:INFO:setup() successfully completed in 0.97s...............
2025-03-20 22:30:52,003:INFO:Initializing create_model()
2025-03-20 22:30:52,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x12f909660>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:30:52,004:INFO:Checking exceptions
2025-03-20 22:30:52,014:INFO:Importing libraries
2025-03-20 22:30:52,014:INFO:Copying training dataset
2025-03-20 22:30:52,030:INFO:Defining folds
2025-03-20 22:30:52,031:INFO:Declaring metric variables
2025-03-20 22:30:52,039:INFO:Importing untrained model
2025-03-20 22:30:52,046:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:30:52,052:INFO:Starting cross validation
2025-03-20 22:30:52,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:30:53,243:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:53,493:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:54,186:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:54,976:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000448 seconds.
2025-03-20 22:30:54,977:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:54,977:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 22:30:54,977:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:54,977:INFO:[LightGBM] [Info] Start training from score 7339.902874
2025-03-20 22:30:54,977:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000888 seconds.
2025-03-20 22:30:54,977:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:54,977:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 22:30:54,977:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:54,978:INFO:[LightGBM] [Info] Start training from score 7351.494467
2025-03-20 22:30:54,981:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000704 seconds.
2025-03-20 22:30:54,982:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:54,982:INFO:[LightGBM] [Info] Total Bins 312
2025-03-20 22:30:54,982:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:54,982:INFO:[LightGBM] [Info] Start training from score 7347.949447
2025-03-20 22:30:54,985:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000964 seconds.
2025-03-20 22:30:54,985:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:54,985:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 22:30:54,986:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:54,987:INFO:[LightGBM] [Info] Start training from score 7356.929305
2025-03-20 22:30:55,001:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000681 seconds.
2025-03-20 22:30:55,001:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:55,001:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 22:30:55,001:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:55,002:INFO:[LightGBM] [Info] Start training from score 7357.778680
2025-03-20 22:30:55,002:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000798 seconds.
2025-03-20 22:30:55,002:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:55,002:INFO:[LightGBM] [Info] Total Bins 311
2025-03-20 22:30:55,002:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:55,003:INFO:[LightGBM] [Info] Start training from score 7358.660377
2025-03-20 22:30:55,149:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000445 seconds.
2025-03-20 22:30:55,149:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:30:55,149:INFO:[LightGBM] [Info] Total Bins 309
2025-03-20 22:30:55,149:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 3
2025-03-20 22:30:55,150:INFO:[LightGBM] [Info] Start training from score 7355.784492
2025-03-20 22:30:57,306:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:57,361:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:57,493:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:57,516:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:57,551:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:57,572:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:30:57,600:WARNING:/opt/miniconda3/envs/polmaraton/lib/python3.10/site-packages/sklearn/feature_selection/_base.py:121: UserWarning: No features were selected: either the data is too noisy or the selection test too strict.
  warnings.warn(

2025-03-20 22:31:44,558:INFO:PyCaret RegressionExperiment
2025-03-20 22:31:44,558:INFO:Logging name: reg-default-name
2025-03-20 22:31:44,558:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:31:44,558:INFO:version 3.3.2
2025-03-20 22:31:44,558:INFO:Initializing setup()
2025-03-20 22:31:44,558:INFO:self.USI: 0800
2025-03-20 22:31:44,558:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:31:44,559:INFO:Checking environment
2025-03-20 22:31:44,559:INFO:python_version: 3.10.16
2025-03-20 22:31:44,559:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:31:44,559:INFO:machine: arm64
2025-03-20 22:31:44,559:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:31:44,559:INFO:Memory: svmem(total=38654705664, available=13152075776, percent=66.0, used=16515727360, free=387940352, active=12780290048, inactive=12719013888, wired=3735437312)
2025-03-20 22:31:44,559:INFO:Physical Core: 11
2025-03-20 22:31:44,559:INFO:Logical Core: 11
2025-03-20 22:31:44,559:INFO:Checking libraries
2025-03-20 22:31:44,559:INFO:System:
2025-03-20 22:31:44,559:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:31:44,559:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:31:44,559:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:31:44,559:INFO:PyCaret required dependencies:
2025-03-20 22:31:44,559:INFO:                 pip: 25.0
2025-03-20 22:31:44,559:INFO:          setuptools: 77.0.1
2025-03-20 22:31:44,559:INFO:             pycaret: 3.3.2
2025-03-20 22:31:44,559:INFO:             IPython: 8.34.0
2025-03-20 22:31:44,559:INFO:          ipywidgets: 8.1.5
2025-03-20 22:31:44,559:INFO:                tqdm: 4.67.1
2025-03-20 22:31:44,559:INFO:               numpy: 1.26.4
2025-03-20 22:31:44,559:INFO:              pandas: 2.1.4
2025-03-20 22:31:44,559:INFO:              jinja2: 3.1.6
2025-03-20 22:31:44,559:INFO:               scipy: 1.11.4
2025-03-20 22:31:44,559:INFO:              joblib: 1.3.2
2025-03-20 22:31:44,559:INFO:             sklearn: 1.4.2
2025-03-20 22:31:44,559:INFO:                pyod: 2.0.3
2025-03-20 22:31:44,559:INFO:            imblearn: 0.13.0
2025-03-20 22:31:44,559:INFO:   category_encoders: 2.7.0
2025-03-20 22:31:44,559:INFO:            lightgbm: 4.6.0
2025-03-20 22:31:44,559:INFO:               numba: 0.61.0
2025-03-20 22:31:44,559:INFO:            requests: 2.32.3
2025-03-20 22:31:44,559:INFO:          matplotlib: 3.7.5
2025-03-20 22:31:44,559:INFO:          scikitplot: 0.3.7
2025-03-20 22:31:44,559:INFO:         yellowbrick: 1.5
2025-03-20 22:31:44,559:INFO:              plotly: 5.24.1
2025-03-20 22:31:44,559:INFO:    plotly-resampler: Not installed
2025-03-20 22:31:44,559:INFO:             kaleido: 0.2.1
2025-03-20 22:31:44,559:INFO:           schemdraw: 0.15
2025-03-20 22:31:44,559:INFO:         statsmodels: 0.14.4
2025-03-20 22:31:44,559:INFO:              sktime: 0.26.0
2025-03-20 22:31:44,559:INFO:               tbats: 1.1.3
2025-03-20 22:31:44,559:INFO:            pmdarima: 2.0.4
2025-03-20 22:31:44,559:INFO:              psutil: 7.0.0
2025-03-20 22:31:44,559:INFO:          markupsafe: 3.0.2
2025-03-20 22:31:44,559:INFO:             pickle5: Not installed
2025-03-20 22:31:44,559:INFO:         cloudpickle: 3.1.1
2025-03-20 22:31:44,559:INFO:         deprecation: 2.1.0
2025-03-20 22:31:44,559:INFO:              xxhash: 3.5.0
2025-03-20 22:31:44,559:INFO:           wurlitzer: 3.1.1
2025-03-20 22:31:44,559:INFO:PyCaret optional dependencies:
2025-03-20 22:31:44,559:INFO:                shap: Not installed
2025-03-20 22:31:44,559:INFO:           interpret: Not installed
2025-03-20 22:31:44,559:INFO:                umap: Not installed
2025-03-20 22:31:44,559:INFO:     ydata_profiling: Not installed
2025-03-20 22:31:44,559:INFO:  explainerdashboard: Not installed
2025-03-20 22:31:44,559:INFO:             autoviz: Not installed
2025-03-20 22:31:44,559:INFO:           fairlearn: Not installed
2025-03-20 22:31:44,559:INFO:          deepchecks: Not installed
2025-03-20 22:31:44,560:INFO:             xgboost: Not installed
2025-03-20 22:31:44,560:INFO:            catboost: Not installed
2025-03-20 22:31:44,560:INFO:              kmodes: Not installed
2025-03-20 22:31:44,560:INFO:             mlxtend: Not installed
2025-03-20 22:31:44,560:INFO:       statsforecast: Not installed
2025-03-20 22:31:44,560:INFO:        tune_sklearn: Not installed
2025-03-20 22:31:44,560:INFO:                 ray: Not installed
2025-03-20 22:31:44,560:INFO:            hyperopt: Not installed
2025-03-20 22:31:44,560:INFO:              optuna: Not installed
2025-03-20 22:31:44,560:INFO:               skopt: Not installed
2025-03-20 22:31:44,560:INFO:              mlflow: Not installed
2025-03-20 22:31:44,560:INFO:              gradio: Not installed
2025-03-20 22:31:44,560:INFO:             fastapi: Not installed
2025-03-20 22:31:44,560:INFO:             uvicorn: Not installed
2025-03-20 22:31:44,560:INFO:              m2cgen: Not installed
2025-03-20 22:31:44,560:INFO:           evidently: Not installed
2025-03-20 22:31:44,560:INFO:               fugue: Not installed
2025-03-20 22:31:44,560:INFO:           streamlit: 1.43.2
2025-03-20 22:31:44,560:INFO:             prophet: Not installed
2025-03-20 22:31:44,560:INFO:None
2025-03-20 22:31:44,560:INFO:Set up data.
2025-03-20 22:31:44,562:INFO:Set up folding strategy.
2025-03-20 22:31:44,562:INFO:Set up train/test split.
2025-03-20 22:31:44,565:INFO:Set up index.
2025-03-20 22:31:44,565:INFO:Assigning column types.
2025-03-20 22:31:44,567:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:31:44,567:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,569:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,572:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,625:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,628:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,630:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,681:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,682:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:31:44,684:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,687:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,741:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,743:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,773:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,796:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:31:44,800:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,851:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,857:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,907:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,908:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:31:44,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:44,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:44,997:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:45,019:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:31:45,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,019:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:31:45,053:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:45,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,108:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:31:45,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,131:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:31:45,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,241:INFO:Preparing preprocessing pipeline...
2025-03-20 22:31:45,241:INFO:Set up simple imputation.
2025-03-20 22:31:45,241:INFO:Set up removing outliers.
2025-03-20 22:31:45,241:INFO:Set up feature normalization.
2025-03-20 22:31:45,242:INFO:Set up column name cleaning.
2025-03-20 22:31:45,259:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:31:45,262:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:31:45,262:INFO:Creating final display dataframe.
2025-03-20 22:31:45,305:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 4)
4        Transformed data shape        (17630, 4)
5   Transformed train set shape        (13957, 4)
6    Transformed test set shape         (3673, 4)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              0800
2025-03-20 22:31:45,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:31:45,425:INFO:setup() successfully completed in 0.87s...............
2025-03-20 22:31:45,425:INFO:Initializing create_model()
2025-03-20 22:31:45,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30fee0370>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:31:45,425:INFO:Checking exceptions
2025-03-20 22:31:45,432:INFO:Importing libraries
2025-03-20 22:31:45,432:INFO:Copying training dataset
2025-03-20 22:31:45,437:INFO:Defining folds
2025-03-20 22:31:45,437:INFO:Declaring metric variables
2025-03-20 22:31:45,439:INFO:Importing untrained model
2025-03-20 22:31:45,441:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:31:45,444:INFO:Starting cross validation
2025-03-20 22:31:45,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:31:46,825:INFO:Calculating mean and std
2025-03-20 22:31:46,826:INFO:Creating metrics dataframe
2025-03-20 22:31:46,830:INFO:Finalizing model
2025-03-20 22:31:47,101:INFO:Uploading results into container
2025-03-20 22:31:47,101:INFO:Uploading model into container now
2025-03-20 22:31:47,120:INFO:_master_model_container: 1
2025-03-20 22:31:47,120:INFO:_display_container: 2
2025-03-20 22:31:47,121:INFO:OrthogonalMatchingPursuit()
2025-03-20 22:31:47,121:INFO:create_model() successfully completed......................................
2025-03-20 22:31:47,296:INFO:Initializing finalize_model()
2025-03-20 22:31:47,296:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30fee0370>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:31:47,296:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 22:31:47,298:INFO:Initializing create_model()
2025-03-20 22:31:47,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30fee0370>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:31:47,298:INFO:Checking exceptions
2025-03-20 22:31:47,299:INFO:Importing libraries
2025-03-20 22:31:47,299:INFO:Copying training dataset
2025-03-20 22:31:47,299:INFO:Defining folds
2025-03-20 22:31:47,299:INFO:Declaring metric variables
2025-03-20 22:31:47,300:INFO:Importing untrained model
2025-03-20 22:31:47,300:INFO:Declaring custom model
2025-03-20 22:31:47,300:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:31:47,301:INFO:Cross validation set to False
2025-03-20 22:31:47,301:INFO:Fitting Model
2025-03-20 22:31:47,574:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 22:31:47,574:INFO:create_model() successfully completed......................................
2025-03-20 22:31:47,651:INFO:_master_model_container: 1
2025-03-20 22:31:47,652:INFO:_display_container: 2
2025-03-20 22:31:47,655:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 22:31:47,655:INFO:finalize_model() successfully completed......................................
2025-03-20 22:31:47,748:INFO:Initializing save_model()
2025-03-20 22:31:47,748:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:31:47,748:INFO:Adding model into prep_pipe
2025-03-20 22:31:47,748:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:31:47,774:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 22:31:47,778:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 22:31:47,778:INFO:save_model() successfully completed......................................
2025-03-20 22:35:07,952:INFO:PyCaret RegressionExperiment
2025-03-20 22:35:07,952:INFO:Logging name: reg-default-name
2025-03-20 22:35:07,952:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:35:07,952:INFO:version 3.3.2
2025-03-20 22:35:07,952:INFO:Initializing setup()
2025-03-20 22:35:07,952:INFO:self.USI: 6572
2025-03-20 22:35:07,952:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:35:07,952:INFO:Checking environment
2025-03-20 22:35:07,952:INFO:python_version: 3.10.16
2025-03-20 22:35:07,952:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:35:07,952:INFO:machine: arm64
2025-03-20 22:35:07,952:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:35:07,952:INFO:Memory: svmem(total=38654705664, available=13059375104, percent=66.2, used=16650272768, free=122339328, active=12903317504, inactive=12881068032, wired=3746955264)
2025-03-20 22:35:07,952:INFO:Physical Core: 11
2025-03-20 22:35:07,952:INFO:Logical Core: 11
2025-03-20 22:35:07,952:INFO:Checking libraries
2025-03-20 22:35:07,952:INFO:System:
2025-03-20 22:35:07,952:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:35:07,952:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:35:07,952:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:35:07,952:INFO:PyCaret required dependencies:
2025-03-20 22:35:07,952:INFO:                 pip: 25.0
2025-03-20 22:35:07,953:INFO:          setuptools: 77.0.1
2025-03-20 22:35:07,953:INFO:             pycaret: 3.3.2
2025-03-20 22:35:07,953:INFO:             IPython: 8.34.0
2025-03-20 22:35:07,953:INFO:          ipywidgets: 8.1.5
2025-03-20 22:35:07,953:INFO:                tqdm: 4.67.1
2025-03-20 22:35:07,953:INFO:               numpy: 1.26.4
2025-03-20 22:35:07,953:INFO:              pandas: 2.1.4
2025-03-20 22:35:07,953:INFO:              jinja2: 3.1.6
2025-03-20 22:35:07,953:INFO:               scipy: 1.11.4
2025-03-20 22:35:07,953:INFO:              joblib: 1.3.2
2025-03-20 22:35:07,953:INFO:             sklearn: 1.4.2
2025-03-20 22:35:07,953:INFO:                pyod: 2.0.3
2025-03-20 22:35:07,953:INFO:            imblearn: 0.13.0
2025-03-20 22:35:07,953:INFO:   category_encoders: 2.7.0
2025-03-20 22:35:07,953:INFO:            lightgbm: 4.6.0
2025-03-20 22:35:07,953:INFO:               numba: 0.61.0
2025-03-20 22:35:07,953:INFO:            requests: 2.32.3
2025-03-20 22:35:07,953:INFO:          matplotlib: 3.7.5
2025-03-20 22:35:07,953:INFO:          scikitplot: 0.3.7
2025-03-20 22:35:07,953:INFO:         yellowbrick: 1.5
2025-03-20 22:35:07,953:INFO:              plotly: 5.24.1
2025-03-20 22:35:07,953:INFO:    plotly-resampler: Not installed
2025-03-20 22:35:07,953:INFO:             kaleido: 0.2.1
2025-03-20 22:35:07,954:INFO:           schemdraw: 0.15
2025-03-20 22:35:07,954:INFO:         statsmodels: 0.14.4
2025-03-20 22:35:07,954:INFO:              sktime: 0.26.0
2025-03-20 22:35:07,954:INFO:               tbats: 1.1.3
2025-03-20 22:35:07,954:INFO:            pmdarima: 2.0.4
2025-03-20 22:35:07,954:INFO:              psutil: 7.0.0
2025-03-20 22:35:07,954:INFO:          markupsafe: 3.0.2
2025-03-20 22:35:07,954:INFO:             pickle5: Not installed
2025-03-20 22:35:07,954:INFO:         cloudpickle: 3.1.1
2025-03-20 22:35:07,954:INFO:         deprecation: 2.1.0
2025-03-20 22:35:07,954:INFO:              xxhash: 3.5.0
2025-03-20 22:35:07,954:INFO:           wurlitzer: 3.1.1
2025-03-20 22:35:07,954:INFO:PyCaret optional dependencies:
2025-03-20 22:35:07,954:INFO:                shap: Not installed
2025-03-20 22:35:07,954:INFO:           interpret: Not installed
2025-03-20 22:35:07,954:INFO:                umap: Not installed
2025-03-20 22:35:07,954:INFO:     ydata_profiling: Not installed
2025-03-20 22:35:07,954:INFO:  explainerdashboard: Not installed
2025-03-20 22:35:07,954:INFO:             autoviz: Not installed
2025-03-20 22:35:07,954:INFO:           fairlearn: Not installed
2025-03-20 22:35:07,954:INFO:          deepchecks: Not installed
2025-03-20 22:35:07,954:INFO:             xgboost: Not installed
2025-03-20 22:35:07,954:INFO:            catboost: Not installed
2025-03-20 22:35:07,954:INFO:              kmodes: Not installed
2025-03-20 22:35:07,954:INFO:             mlxtend: Not installed
2025-03-20 22:35:07,954:INFO:       statsforecast: Not installed
2025-03-20 22:35:07,954:INFO:        tune_sklearn: Not installed
2025-03-20 22:35:07,955:INFO:                 ray: Not installed
2025-03-20 22:35:07,955:INFO:            hyperopt: Not installed
2025-03-20 22:35:07,955:INFO:              optuna: Not installed
2025-03-20 22:35:07,955:INFO:               skopt: Not installed
2025-03-20 22:35:07,955:INFO:              mlflow: Not installed
2025-03-20 22:35:07,955:INFO:              gradio: Not installed
2025-03-20 22:35:07,955:INFO:             fastapi: Not installed
2025-03-20 22:35:07,955:INFO:             uvicorn: Not installed
2025-03-20 22:35:07,955:INFO:              m2cgen: Not installed
2025-03-20 22:35:07,955:INFO:           evidently: Not installed
2025-03-20 22:35:07,955:INFO:               fugue: Not installed
2025-03-20 22:35:07,955:INFO:           streamlit: 1.43.2
2025-03-20 22:35:07,955:INFO:             prophet: Not installed
2025-03-20 22:35:07,955:INFO:None
2025-03-20 22:35:07,955:INFO:Set up data.
2025-03-20 22:35:07,958:INFO:Set up folding strategy.
2025-03-20 22:35:07,958:INFO:Set up train/test split.
2025-03-20 22:35:07,961:INFO:Set up index.
2025-03-20 22:35:07,962:INFO:Assigning column types.
2025-03-20 22:35:07,965:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:35:07,965:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:35:07,967:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:35:07,970:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,001:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,029:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,031:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,033:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,086:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,087:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:35:08,089:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,122:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,146:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,149:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,202:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:35:08,207:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,237:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,264:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,294:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,317:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:35:08,352:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,409:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,432:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:35:08,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,524:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:35:08,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,547:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:35:08,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,660:INFO:Preparing preprocessing pipeline...
2025-03-20 22:35:08,660:INFO:Set up simple imputation.
2025-03-20 22:35:08,660:INFO:Set up removing outliers.
2025-03-20 22:35:08,660:INFO:Set up feature normalization.
2025-03-20 22:35:08,660:INFO:Set up feature selection.
2025-03-20 22:35:08,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,717:INFO:Set up column name cleaning.
2025-03-20 22:35:08,745:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:35:08,752:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequen...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:35:08,752:INFO:Creating final display dataframe.
2025-03-20 22:35:08,827:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 7)
4        Transformed data shape        (17630, 2)
5   Transformed train set shape        (13957, 2)
6    Transformed test set shape         (3673, 2)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              6572
2025-03-20 22:35:08,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:35:08,945:INFO:setup() successfully completed in 1.0s...............
2025-03-20 22:37:05,602:INFO:PyCaret RegressionExperiment
2025-03-20 22:37:05,602:INFO:Logging name: reg-default-name
2025-03-20 22:37:05,602:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:37:05,602:INFO:version 3.3.2
2025-03-20 22:37:05,602:INFO:Initializing setup()
2025-03-20 22:37:05,602:INFO:self.USI: 0200
2025-03-20 22:37:05,602:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:37:05,603:INFO:Checking environment
2025-03-20 22:37:05,603:INFO:python_version: 3.10.16
2025-03-20 22:37:05,603:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:37:05,603:INFO:machine: arm64
2025-03-20 22:37:05,603:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:37:05,603:INFO:Memory: svmem(total=38654705664, available=13934067712, percent=64.0, used=15780347904, free=1876639744, active=12008062976, inactive=11996315648, wired=3772284928)
2025-03-20 22:37:05,603:INFO:Physical Core: 11
2025-03-20 22:37:05,603:INFO:Logical Core: 11
2025-03-20 22:37:05,603:INFO:Checking libraries
2025-03-20 22:37:05,603:INFO:System:
2025-03-20 22:37:05,603:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:37:05,603:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:37:05,603:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:37:05,603:INFO:PyCaret required dependencies:
2025-03-20 22:37:05,604:INFO:                 pip: 25.0
2025-03-20 22:37:05,604:INFO:          setuptools: 77.0.1
2025-03-20 22:37:05,604:INFO:             pycaret: 3.3.2
2025-03-20 22:37:05,604:INFO:             IPython: 8.34.0
2025-03-20 22:37:05,604:INFO:          ipywidgets: 8.1.5
2025-03-20 22:37:05,604:INFO:                tqdm: 4.67.1
2025-03-20 22:37:05,604:INFO:               numpy: 1.26.4
2025-03-20 22:37:05,604:INFO:              pandas: 2.1.4
2025-03-20 22:37:05,604:INFO:              jinja2: 3.1.6
2025-03-20 22:37:05,604:INFO:               scipy: 1.11.4
2025-03-20 22:37:05,604:INFO:              joblib: 1.3.2
2025-03-20 22:37:05,604:INFO:             sklearn: 1.4.2
2025-03-20 22:37:05,604:INFO:                pyod: 2.0.3
2025-03-20 22:37:05,604:INFO:            imblearn: 0.13.0
2025-03-20 22:37:05,604:INFO:   category_encoders: 2.7.0
2025-03-20 22:37:05,604:INFO:            lightgbm: 4.6.0
2025-03-20 22:37:05,604:INFO:               numba: 0.61.0
2025-03-20 22:37:05,604:INFO:            requests: 2.32.3
2025-03-20 22:37:05,604:INFO:          matplotlib: 3.7.5
2025-03-20 22:37:05,604:INFO:          scikitplot: 0.3.7
2025-03-20 22:37:05,605:INFO:         yellowbrick: 1.5
2025-03-20 22:37:05,605:INFO:              plotly: 5.24.1
2025-03-20 22:37:05,605:INFO:    plotly-resampler: Not installed
2025-03-20 22:37:05,605:INFO:             kaleido: 0.2.1
2025-03-20 22:37:05,605:INFO:           schemdraw: 0.15
2025-03-20 22:37:05,605:INFO:         statsmodels: 0.14.4
2025-03-20 22:37:05,605:INFO:              sktime: 0.26.0
2025-03-20 22:37:05,605:INFO:               tbats: 1.1.3
2025-03-20 22:37:05,605:INFO:            pmdarima: 2.0.4
2025-03-20 22:37:05,605:INFO:              psutil: 7.0.0
2025-03-20 22:37:05,605:INFO:          markupsafe: 3.0.2
2025-03-20 22:37:05,605:INFO:             pickle5: Not installed
2025-03-20 22:37:05,605:INFO:         cloudpickle: 3.1.1
2025-03-20 22:37:05,605:INFO:         deprecation: 2.1.0
2025-03-20 22:37:05,605:INFO:              xxhash: 3.5.0
2025-03-20 22:37:05,605:INFO:           wurlitzer: 3.1.1
2025-03-20 22:37:05,605:INFO:PyCaret optional dependencies:
2025-03-20 22:37:05,605:INFO:                shap: Not installed
2025-03-20 22:37:05,605:INFO:           interpret: Not installed
2025-03-20 22:37:05,605:INFO:                umap: Not installed
2025-03-20 22:37:05,605:INFO:     ydata_profiling: Not installed
2025-03-20 22:37:05,605:INFO:  explainerdashboard: Not installed
2025-03-20 22:37:05,605:INFO:             autoviz: Not installed
2025-03-20 22:37:05,605:INFO:           fairlearn: Not installed
2025-03-20 22:37:05,605:INFO:          deepchecks: Not installed
2025-03-20 22:37:05,605:INFO:             xgboost: Not installed
2025-03-20 22:37:05,605:INFO:            catboost: Not installed
2025-03-20 22:37:05,605:INFO:              kmodes: Not installed
2025-03-20 22:37:05,605:INFO:             mlxtend: Not installed
2025-03-20 22:37:05,605:INFO:       statsforecast: Not installed
2025-03-20 22:37:05,605:INFO:        tune_sklearn: Not installed
2025-03-20 22:37:05,605:INFO:                 ray: Not installed
2025-03-20 22:37:05,605:INFO:            hyperopt: Not installed
2025-03-20 22:37:05,605:INFO:              optuna: Not installed
2025-03-20 22:37:05,605:INFO:               skopt: Not installed
2025-03-20 22:37:05,605:INFO:              mlflow: Not installed
2025-03-20 22:37:05,605:INFO:              gradio: Not installed
2025-03-20 22:37:05,605:INFO:             fastapi: Not installed
2025-03-20 22:37:05,605:INFO:             uvicorn: Not installed
2025-03-20 22:37:05,605:INFO:              m2cgen: Not installed
2025-03-20 22:37:05,605:INFO:           evidently: Not installed
2025-03-20 22:37:05,605:INFO:               fugue: Not installed
2025-03-20 22:37:05,605:INFO:           streamlit: 1.43.2
2025-03-20 22:37:05,605:INFO:             prophet: Not installed
2025-03-20 22:37:05,605:INFO:None
2025-03-20 22:37:05,605:INFO:Set up data.
2025-03-20 22:37:05,609:INFO:Set up folding strategy.
2025-03-20 22:37:05,609:INFO:Set up train/test split.
2025-03-20 22:37:05,612:INFO:Set up index.
2025-03-20 22:37:05,613:INFO:Assigning column types.
2025-03-20 22:37:05,617:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:37:05,618:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,620:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,622:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,694:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,696:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,698:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,702:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,735:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,758:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:37:05,760:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,762:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,793:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,852:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,875:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:37:05,879:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,910:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,937:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,968:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:05,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:05,990:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:37:06,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:06,051:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:06,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:06,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:37:06,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,109:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:37:06,145:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:06,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:37:06,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,224:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:37:06,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,339:INFO:Preparing preprocessing pipeline...
2025-03-20 22:37:06,339:INFO:Set up simple imputation.
2025-03-20 22:37:06,339:INFO:Set up removing outliers.
2025-03-20 22:37:06,339:INFO:Set up feature normalization.
2025-03-20 22:37:06,339:INFO:Set up feature selection.
2025-03-20 22:37:06,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:06,398:INFO:Set up column name cleaning.
2025-03-20 22:37:07,207:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:37:07,214:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transf...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:37:07,214:INFO:Creating final display dataframe.
2025-03-20 22:37:07,689:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (18365, 10)
4        Transformed data shape        (17630, 2)
5   Transformed train set shape        (13957, 2)
6    Transformed test set shape         (3673, 2)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              0200
2025-03-20 22:37:07,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:07,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:07,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:07,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:37:07,812:INFO:setup() successfully completed in 2.21s...............
2025-03-20 22:38:14,006:INFO:Initializing create_model()
2025-03-20 22:38:14,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b4240d0>, estimator=omp, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:38:14,006:INFO:Checking exceptions
2025-03-20 22:38:14,018:INFO:Importing libraries
2025-03-20 22:38:14,018:INFO:Copying training dataset
2025-03-20 22:38:14,028:INFO:Defining folds
2025-03-20 22:38:14,028:INFO:Declaring metric variables
2025-03-20 22:38:14,032:INFO:Importing untrained model
2025-03-20 22:38:14,035:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:38:14,042:INFO:Starting cross validation
2025-03-20 22:38:14,053:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:38:16,902:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000753 seconds.
2025-03-20 22:38:16,903:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,903:INFO:[LightGBM] [Info] Total Bins 1848
2025-03-20 22:38:16,903:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:16,903:INFO:[LightGBM] [Info] Start training from score 7361.456333
2025-03-20 22:38:16,922:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000703 seconds.
2025-03-20 22:38:16,922:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-03-20 22:38:16,922:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-03-20 22:38:16,922:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,923:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 9
2025-03-20 22:38:16,923:INFO:[LightGBM] [Info] Start training from score 7349.827070
2025-03-20 22:38:16,928:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002713 seconds.
2025-03-20 22:38:16,928:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,928:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,928:INFO:[LightGBM] [Info] Number of data points in the train set: 12560, number of used features: 9
2025-03-20 22:38:16,930:INFO:[LightGBM] [Info] Start training from score 7351.678105
2025-03-20 22:38:16,933:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001252 seconds.
2025-03-20 22:38:16,934:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,934:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,934:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:16,934:INFO:[LightGBM] [Info] Start training from score 7351.402118
2025-03-20 22:38:16,961:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001312 seconds.
2025-03-20 22:38:16,961:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,961:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,962:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:16,963:INFO:[LightGBM] [Info] Start training from score 7363.058037
2025-03-20 22:38:16,978:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002245 seconds.
2025-03-20 22:38:16,978:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,978:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,978:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:16,980:INFO:[LightGBM] [Info] Start training from score 7356.691983
2025-03-20 22:38:16,983:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002638 seconds.
2025-03-20 22:38:16,984:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,984:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,984:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:16,985:INFO:[LightGBM] [Info] Start training from score 7362.145609
2025-03-20 22:38:16,988:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002214 seconds.
2025-03-20 22:38:16,988:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:16,988:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:16,988:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:16,989:INFO:[LightGBM] [Info] Start training from score 7345.984078
2025-03-20 22:38:17,014:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001684 seconds.
2025-03-20 22:38:17,014:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:17,014:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:17,014:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001502 seconds.
2025-03-20 22:38:17,014:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:17,014:INFO:[LightGBM] [Info] Total Bins 1847
2025-03-20 22:38:17,014:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:17,015:INFO:[LightGBM] [Info] Number of data points in the train set: 12561, number of used features: 9
2025-03-20 22:38:17,015:INFO:[LightGBM] [Info] Start training from score 7350.290900
2025-03-20 22:38:17,016:INFO:[LightGBM] [Info] Start training from score 7352.336040
2025-03-20 22:38:20,765:INFO:Calculating mean and std
2025-03-20 22:38:20,766:INFO:Creating metrics dataframe
2025-03-20 22:38:20,771:INFO:Finalizing model
2025-03-20 22:38:21,001:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000426 seconds.
2025-03-20 22:38:21,001:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:21,001:INFO:[LightGBM] [Info] Total Bins 1848
2025-03-20 22:38:21,001:INFO:[LightGBM] [Info] Number of data points in the train set: 13957, number of used features: 9
2025-03-20 22:38:21,001:INFO:[LightGBM] [Info] Start training from score 7349.536218
2025-03-20 22:38:21,518:INFO:Uploading results into container
2025-03-20 22:38:21,519:INFO:Uploading model into container now
2025-03-20 22:38:21,525:INFO:_master_model_container: 1
2025-03-20 22:38:21,525:INFO:_display_container: 2
2025-03-20 22:38:21,525:INFO:OrthogonalMatchingPursuit()
2025-03-20 22:38:21,525:INFO:create_model() successfully completed......................................
2025-03-20 22:38:50,454:INFO:Initializing finalize_model()
2025-03-20 22:38:50,455:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b4240d0>, estimator=OrthogonalMatchingPursuit(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:38:50,455:INFO:Finalizing OrthogonalMatchingPursuit()
2025-03-20 22:38:50,459:INFO:Initializing create_model()
2025-03-20 22:38:50,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b4240d0>, estimator=OrthogonalMatchingPursuit(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:38:50,459:INFO:Checking exceptions
2025-03-20 22:38:50,460:INFO:Importing libraries
2025-03-20 22:38:50,460:INFO:Copying training dataset
2025-03-20 22:38:50,461:INFO:Defining folds
2025-03-20 22:38:50,461:INFO:Declaring metric variables
2025-03-20 22:38:50,461:INFO:Importing untrained model
2025-03-20 22:38:50,461:INFO:Declaring custom model
2025-03-20 22:38:50,461:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-20 22:38:50,471:INFO:Cross validation set to False
2025-03-20 22:38:50,471:INFO:Fitting Model
2025-03-20 22:38:50,722:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000435 seconds.
2025-03-20 22:38:50,723:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-20 22:38:50,723:INFO:[LightGBM] [Info] Total Bins 1848
2025-03-20 22:38:50,723:INFO:[LightGBM] [Info] Number of data points in the train set: 17446, number of used features: 9
2025-03-20 22:38:50,723:INFO:[LightGBM] [Info] Start training from score 7358.259085
2025-03-20 22:38:51,257:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 22:38:51,258:INFO:create_model() successfully completed......................................
2025-03-20 22:38:51,337:INFO:_master_model_container: 1
2025-03-20 22:38:51,337:INFO:_display_container: 2
2025-03-20 22:38:51,345:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 22:38:51,345:INFO:finalize_model() successfully completed......................................
2025-03-20 22:38:51,445:INFO:Initializing save_model()
2025-03-20 22:38:51,445:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), model_name=halfmarathon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transf...
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:38:51,445:INFO:Adding model into prep_pipe
2025-03-20 22:38:51,445:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:38:51,478:INFO:halfmarathon_model.pkl saved in current working directory
2025-03-20 22:38:51,485:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())])
2025-03-20 22:38:51,485:INFO:save_model() successfully completed......................................
2025-03-20 22:39:04,100:INFO:Initializing predict_model()
2025-03-20 22:39:04,101:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x32b4240d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fd1e7a0>)
2025-03-20 22:39:04,101:INFO:Checking exceptions
2025-03-20 22:39:04,101:INFO:Preloading libraries
2025-03-20 22:39:04,103:INFO:Set up data.
2025-03-20 22:39:04,107:INFO:Set up index.
2025-03-20 22:43:55,348:INFO:PyCaret RegressionExperiment
2025-03-20 22:43:55,348:INFO:Logging name: reg-default-name
2025-03-20 22:43:55,348:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:43:55,348:INFO:version 3.3.2
2025-03-20 22:43:55,348:INFO:Initializing setup()
2025-03-20 22:43:55,348:INFO:self.USI: dba7
2025-03-20 22:43:55,348:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:43:55,348:INFO:Checking environment
2025-03-20 22:43:55,348:INFO:python_version: 3.10.16
2025-03-20 22:43:55,348:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:43:55,348:INFO:machine: arm64
2025-03-20 22:43:55,348:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:43:55,348:INFO:Memory: svmem(total=38654705664, available=14010351616, percent=63.8, used=15710126080, free=1876721664, active=12008505344, inactive=12051988480, wired=3701620736)
2025-03-20 22:43:55,349:INFO:Physical Core: 11
2025-03-20 22:43:55,349:INFO:Logical Core: 11
2025-03-20 22:43:55,349:INFO:Checking libraries
2025-03-20 22:43:55,349:INFO:System:
2025-03-20 22:43:55,349:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:43:55,349:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:43:55,349:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:43:55,349:INFO:PyCaret required dependencies:
2025-03-20 22:43:55,349:INFO:                 pip: 25.0
2025-03-20 22:43:55,349:INFO:          setuptools: 77.0.1
2025-03-20 22:43:55,349:INFO:             pycaret: 3.3.2
2025-03-20 22:43:55,349:INFO:             IPython: 8.34.0
2025-03-20 22:43:55,349:INFO:          ipywidgets: 8.1.5
2025-03-20 22:43:55,349:INFO:                tqdm: 4.67.1
2025-03-20 22:43:55,349:INFO:               numpy: 1.26.4
2025-03-20 22:43:55,349:INFO:              pandas: 2.1.4
2025-03-20 22:43:55,349:INFO:              jinja2: 3.1.6
2025-03-20 22:43:55,349:INFO:               scipy: 1.11.4
2025-03-20 22:43:55,349:INFO:              joblib: 1.3.2
2025-03-20 22:43:55,349:INFO:             sklearn: 1.4.2
2025-03-20 22:43:55,349:INFO:                pyod: 2.0.3
2025-03-20 22:43:55,349:INFO:            imblearn: 0.13.0
2025-03-20 22:43:55,349:INFO:   category_encoders: 2.7.0
2025-03-20 22:43:55,349:INFO:            lightgbm: 4.6.0
2025-03-20 22:43:55,349:INFO:               numba: 0.61.0
2025-03-20 22:43:55,349:INFO:            requests: 2.32.3
2025-03-20 22:43:55,349:INFO:          matplotlib: 3.7.5
2025-03-20 22:43:55,349:INFO:          scikitplot: 0.3.7
2025-03-20 22:43:55,349:INFO:         yellowbrick: 1.5
2025-03-20 22:43:55,349:INFO:              plotly: 5.24.1
2025-03-20 22:43:55,349:INFO:    plotly-resampler: Not installed
2025-03-20 22:43:55,350:INFO:             kaleido: 0.2.1
2025-03-20 22:43:55,350:INFO:           schemdraw: 0.15
2025-03-20 22:43:55,350:INFO:         statsmodels: 0.14.4
2025-03-20 22:43:55,350:INFO:              sktime: 0.26.0
2025-03-20 22:43:55,350:INFO:               tbats: 1.1.3
2025-03-20 22:43:55,350:INFO:            pmdarima: 2.0.4
2025-03-20 22:43:55,350:INFO:              psutil: 7.0.0
2025-03-20 22:43:55,350:INFO:          markupsafe: 3.0.2
2025-03-20 22:43:55,350:INFO:             pickle5: Not installed
2025-03-20 22:43:55,350:INFO:         cloudpickle: 3.1.1
2025-03-20 22:43:55,350:INFO:         deprecation: 2.1.0
2025-03-20 22:43:55,350:INFO:              xxhash: 3.5.0
2025-03-20 22:43:55,350:INFO:           wurlitzer: 3.1.1
2025-03-20 22:43:55,350:INFO:PyCaret optional dependencies:
2025-03-20 22:43:55,350:INFO:                shap: Not installed
2025-03-20 22:43:55,350:INFO:           interpret: Not installed
2025-03-20 22:43:55,350:INFO:                umap: Not installed
2025-03-20 22:43:55,350:INFO:     ydata_profiling: Not installed
2025-03-20 22:43:55,350:INFO:  explainerdashboard: Not installed
2025-03-20 22:43:55,350:INFO:             autoviz: Not installed
2025-03-20 22:43:55,350:INFO:           fairlearn: Not installed
2025-03-20 22:43:55,350:INFO:          deepchecks: Not installed
2025-03-20 22:43:55,350:INFO:             xgboost: Not installed
2025-03-20 22:43:55,350:INFO:            catboost: Not installed
2025-03-20 22:43:55,350:INFO:              kmodes: Not installed
2025-03-20 22:43:55,350:INFO:             mlxtend: Not installed
2025-03-20 22:43:55,350:INFO:       statsforecast: Not installed
2025-03-20 22:43:55,350:INFO:        tune_sklearn: Not installed
2025-03-20 22:43:55,350:INFO:                 ray: Not installed
2025-03-20 22:43:55,350:INFO:            hyperopt: Not installed
2025-03-20 22:43:55,350:INFO:              optuna: Not installed
2025-03-20 22:43:55,350:INFO:               skopt: Not installed
2025-03-20 22:43:55,350:INFO:              mlflow: Not installed
2025-03-20 22:43:55,350:INFO:              gradio: Not installed
2025-03-20 22:43:55,350:INFO:             fastapi: Not installed
2025-03-20 22:43:55,350:INFO:             uvicorn: Not installed
2025-03-20 22:43:55,350:INFO:              m2cgen: Not installed
2025-03-20 22:43:55,350:INFO:           evidently: Not installed
2025-03-20 22:43:55,350:INFO:               fugue: Not installed
2025-03-20 22:43:55,350:INFO:           streamlit: 1.43.2
2025-03-20 22:43:55,350:INFO:             prophet: Not installed
2025-03-20 22:43:55,350:INFO:None
2025-03-20 22:43:55,350:INFO:Set up data.
2025-03-20 22:43:55,352:INFO:Set up folding strategy.
2025-03-20 22:43:55,352:INFO:Set up train/test split.
2025-03-20 22:43:55,354:INFO:Set up index.
2025-03-20 22:43:55,355:INFO:Assigning column types.
2025-03-20 22:43:55,357:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:43:55,357:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,360:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,362:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,415:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,449:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,471:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,472:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:43:55,474:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,477:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,506:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,531:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,533:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,562:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,585:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,585:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:43:55,590:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,619:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,646:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,675:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,696:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,697:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:43:55,730:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,752:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,809:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:43:55,842:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:55,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,923:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:43:55,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:55,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,034:INFO:Preparing preprocessing pipeline...
2025-03-20 22:43:56,034:INFO:Set up simple imputation.
2025-03-20 22:43:56,035:INFO:Set up column name cleaning.
2025-03-20 22:43:56,045:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:43:56,047:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:43:56,047:INFO:Creating final display dataframe.
2025-03-20 22:43:56,078:INFO:Setup _display_container:                     Description             Value
0                    Session id              7894
1                        Target        10_km_Czas
2                   Target type        Regression
3           Original data shape        (18365, 4)
4        Transformed data shape        (18365, 4)
5   Transformed train set shape        (12855, 4)
6    Transformed test set shape         (5510, 4)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              dba7
2025-03-20 22:43:56,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:56,190:INFO:setup() successfully completed in 0.85s...............
2025-03-20 22:43:56,190:INFO:Initializing create_model()
2025-03-20 22:43:56,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f330b50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:43:56,190:INFO:Checking exceptions
2025-03-20 22:43:56,197:INFO:Importing libraries
2025-03-20 22:43:56,197:INFO:Copying training dataset
2025-03-20 22:43:56,201:INFO:Defining folds
2025-03-20 22:43:56,202:INFO:Declaring metric variables
2025-03-20 22:43:56,203:INFO:Importing untrained model
2025-03-20 22:43:56,205:INFO:Linear Regression Imported successfully
2025-03-20 22:43:56,210:INFO:Starting cross validation
2025-03-20 22:43:56,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:43:58,903:INFO:Calculating mean and std
2025-03-20 22:43:58,905:INFO:Creating metrics dataframe
2025-03-20 22:43:58,909:INFO:Finalizing model
2025-03-20 22:43:58,966:INFO:Uploading results into container
2025-03-20 22:43:58,967:INFO:Uploading model into container now
2025-03-20 22:43:58,999:INFO:_master_model_container: 1
2025-03-20 22:43:59,000:INFO:_display_container: 2
2025-03-20 22:43:59,000:INFO:LinearRegression(n_jobs=-1)
2025-03-20 22:43:59,000:INFO:create_model() successfully completed......................................
2025-03-20 22:43:59,189:INFO:Initializing finalize_model()
2025-03-20 22:43:59,189:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f330b50>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:43:59,190:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 22:43:59,192:INFO:Initializing create_model()
2025-03-20 22:43:59,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f330b50>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:43:59,192:INFO:Checking exceptions
2025-03-20 22:43:59,193:INFO:Importing libraries
2025-03-20 22:43:59,193:INFO:Copying training dataset
2025-03-20 22:43:59,193:INFO:Defining folds
2025-03-20 22:43:59,193:INFO:Declaring metric variables
2025-03-20 22:43:59,193:INFO:Importing untrained model
2025-03-20 22:43:59,193:INFO:Declaring custom model
2025-03-20 22:43:59,193:INFO:Linear Regression Imported successfully
2025-03-20 22:43:59,194:INFO:Cross validation set to False
2025-03-20 22:43:59,194:INFO:Fitting Model
2025-03-20 22:43:59,201:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:43:59,201:INFO:create_model() successfully completed......................................
2025-03-20 22:43:59,290:INFO:_master_model_container: 1
2025-03-20 22:43:59,290:INFO:_display_container: 2
2025-03-20 22:43:59,293:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:43:59,293:INFO:finalize_model() successfully completed......................................
2025-03-20 22:43:59,389:INFO:Initializing save_model()
2025-03-20 22:43:59,389:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=model_10km, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:43:59,389:INFO:Adding model into prep_pipe
2025-03-20 22:43:59,389:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:43:59,390:INFO:model_10km.pkl saved in current working directory
2025-03-20 22:43:59,393:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:43:59,393:INFO:save_model() successfully completed......................................
2025-03-20 22:43:59,488:INFO:PyCaret RegressionExperiment
2025-03-20 22:43:59,488:INFO:Logging name: reg-default-name
2025-03-20 22:43:59,488:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:43:59,488:INFO:version 3.3.2
2025-03-20 22:43:59,488:INFO:Initializing setup()
2025-03-20 22:43:59,488:INFO:self.USI: 8952
2025-03-20 22:43:59,488:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:43:59,488:INFO:Checking environment
2025-03-20 22:43:59,488:INFO:python_version: 3.10.16
2025-03-20 22:43:59,488:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:43:59,488:INFO:machine: arm64
2025-03-20 22:43:59,488:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:43:59,488:INFO:Memory: svmem(total=38654705664, available=13027950592, percent=66.3, used=16697556992, free=349126656, active=13003882496, inactive=12597149696, wired=3693674496)
2025-03-20 22:43:59,488:INFO:Physical Core: 11
2025-03-20 22:43:59,488:INFO:Logical Core: 11
2025-03-20 22:43:59,488:INFO:Checking libraries
2025-03-20 22:43:59,488:INFO:System:
2025-03-20 22:43:59,489:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:43:59,489:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:43:59,489:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:43:59,489:INFO:PyCaret required dependencies:
2025-03-20 22:43:59,489:INFO:                 pip: 25.0
2025-03-20 22:43:59,489:INFO:          setuptools: 77.0.1
2025-03-20 22:43:59,489:INFO:             pycaret: 3.3.2
2025-03-20 22:43:59,489:INFO:             IPython: 8.34.0
2025-03-20 22:43:59,489:INFO:          ipywidgets: 8.1.5
2025-03-20 22:43:59,489:INFO:                tqdm: 4.67.1
2025-03-20 22:43:59,489:INFO:               numpy: 1.26.4
2025-03-20 22:43:59,489:INFO:              pandas: 2.1.4
2025-03-20 22:43:59,489:INFO:              jinja2: 3.1.6
2025-03-20 22:43:59,489:INFO:               scipy: 1.11.4
2025-03-20 22:43:59,489:INFO:              joblib: 1.3.2
2025-03-20 22:43:59,489:INFO:             sklearn: 1.4.2
2025-03-20 22:43:59,489:INFO:                pyod: 2.0.3
2025-03-20 22:43:59,489:INFO:            imblearn: 0.13.0
2025-03-20 22:43:59,489:INFO:   category_encoders: 2.7.0
2025-03-20 22:43:59,489:INFO:            lightgbm: 4.6.0
2025-03-20 22:43:59,489:INFO:               numba: 0.61.0
2025-03-20 22:43:59,489:INFO:            requests: 2.32.3
2025-03-20 22:43:59,489:INFO:          matplotlib: 3.7.5
2025-03-20 22:43:59,489:INFO:          scikitplot: 0.3.7
2025-03-20 22:43:59,489:INFO:         yellowbrick: 1.5
2025-03-20 22:43:59,489:INFO:              plotly: 5.24.1
2025-03-20 22:43:59,489:INFO:    plotly-resampler: Not installed
2025-03-20 22:43:59,489:INFO:             kaleido: 0.2.1
2025-03-20 22:43:59,489:INFO:           schemdraw: 0.15
2025-03-20 22:43:59,489:INFO:         statsmodels: 0.14.4
2025-03-20 22:43:59,489:INFO:              sktime: 0.26.0
2025-03-20 22:43:59,489:INFO:               tbats: 1.1.3
2025-03-20 22:43:59,489:INFO:            pmdarima: 2.0.4
2025-03-20 22:43:59,489:INFO:              psutil: 7.0.0
2025-03-20 22:43:59,489:INFO:          markupsafe: 3.0.2
2025-03-20 22:43:59,489:INFO:             pickle5: Not installed
2025-03-20 22:43:59,489:INFO:         cloudpickle: 3.1.1
2025-03-20 22:43:59,489:INFO:         deprecation: 2.1.0
2025-03-20 22:43:59,489:INFO:              xxhash: 3.5.0
2025-03-20 22:43:59,489:INFO:           wurlitzer: 3.1.1
2025-03-20 22:43:59,489:INFO:PyCaret optional dependencies:
2025-03-20 22:43:59,489:INFO:                shap: Not installed
2025-03-20 22:43:59,489:INFO:           interpret: Not installed
2025-03-20 22:43:59,489:INFO:                umap: Not installed
2025-03-20 22:43:59,489:INFO:     ydata_profiling: Not installed
2025-03-20 22:43:59,489:INFO:  explainerdashboard: Not installed
2025-03-20 22:43:59,489:INFO:             autoviz: Not installed
2025-03-20 22:43:59,489:INFO:           fairlearn: Not installed
2025-03-20 22:43:59,489:INFO:          deepchecks: Not installed
2025-03-20 22:43:59,489:INFO:             xgboost: Not installed
2025-03-20 22:43:59,489:INFO:            catboost: Not installed
2025-03-20 22:43:59,489:INFO:              kmodes: Not installed
2025-03-20 22:43:59,489:INFO:             mlxtend: Not installed
2025-03-20 22:43:59,489:INFO:       statsforecast: Not installed
2025-03-20 22:43:59,489:INFO:        tune_sklearn: Not installed
2025-03-20 22:43:59,489:INFO:                 ray: Not installed
2025-03-20 22:43:59,489:INFO:            hyperopt: Not installed
2025-03-20 22:43:59,489:INFO:              optuna: Not installed
2025-03-20 22:43:59,489:INFO:               skopt: Not installed
2025-03-20 22:43:59,489:INFO:              mlflow: Not installed
2025-03-20 22:43:59,489:INFO:              gradio: Not installed
2025-03-20 22:43:59,489:INFO:             fastapi: Not installed
2025-03-20 22:43:59,489:INFO:             uvicorn: Not installed
2025-03-20 22:43:59,489:INFO:              m2cgen: Not installed
2025-03-20 22:43:59,489:INFO:           evidently: Not installed
2025-03-20 22:43:59,489:INFO:               fugue: Not installed
2025-03-20 22:43:59,489:INFO:           streamlit: 1.43.2
2025-03-20 22:43:59,489:INFO:             prophet: Not installed
2025-03-20 22:43:59,490:INFO:None
2025-03-20 22:43:59,490:INFO:Set up data.
2025-03-20 22:43:59,492:INFO:Set up folding strategy.
2025-03-20 22:43:59,492:INFO:Set up train/test split.
2025-03-20 22:43:59,494:INFO:Set up index.
2025-03-20 22:43:59,495:INFO:Assigning column types.
2025-03-20 22:43:59,497:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:43:59,497:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,499:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,554:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,557:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,559:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,611:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,612:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:43:59,614:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,617:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,673:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,676:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,706:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,729:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:43:59,733:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,791:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,820:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,843:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:43:59,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:43:59,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:43:59,957:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:43:59,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:00,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,048:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:00,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,071:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:44:00,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,185:INFO:Preparing preprocessing pipeline...
2025-03-20 22:44:00,185:INFO:Set up simple imputation.
2025-03-20 22:44:00,185:INFO:Set up column name cleaning.
2025-03-20 22:44:00,196:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:44:00,199:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:44:00,199:INFO:Creating final display dataframe.
2025-03-20 22:44:00,233:INFO:Setup _display_container:                     Description             Value
0                    Session id              2144
1                        Target        15_km_Czas
2                   Target type        Regression
3           Original data shape        (18365, 5)
4        Transformed data shape        (18365, 5)
5   Transformed train set shape        (12855, 5)
6    Transformed test set shape         (5510, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              8952
2025-03-20 22:44:00,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:00,350:INFO:setup() successfully completed in 0.86s...............
2025-03-20 22:44:00,350:INFO:Initializing create_model()
2025-03-20 22:44:00,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f7e8460>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:44:00,350:INFO:Checking exceptions
2025-03-20 22:44:00,357:INFO:Importing libraries
2025-03-20 22:44:00,358:INFO:Copying training dataset
2025-03-20 22:44:00,363:INFO:Defining folds
2025-03-20 22:44:00,363:INFO:Declaring metric variables
2025-03-20 22:44:00,364:INFO:Importing untrained model
2025-03-20 22:44:00,367:INFO:Linear Regression Imported successfully
2025-03-20 22:44:00,372:INFO:Starting cross validation
2025-03-20 22:44:00,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:44:01,363:INFO:Calculating mean and std
2025-03-20 22:44:01,364:INFO:Creating metrics dataframe
2025-03-20 22:44:01,366:INFO:Finalizing model
2025-03-20 22:44:01,377:INFO:Uploading results into container
2025-03-20 22:44:01,377:INFO:Uploading model into container now
2025-03-20 22:44:01,402:INFO:_master_model_container: 1
2025-03-20 22:44:01,402:INFO:_display_container: 2
2025-03-20 22:44:01,403:INFO:LinearRegression(n_jobs=-1)
2025-03-20 22:44:01,403:INFO:create_model() successfully completed......................................
2025-03-20 22:44:01,496:INFO:Initializing finalize_model()
2025-03-20 22:44:01,496:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f7e8460>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:44:01,496:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 22:44:01,499:INFO:Initializing create_model()
2025-03-20 22:44:01,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f7e8460>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:44:01,499:INFO:Checking exceptions
2025-03-20 22:44:01,500:INFO:Importing libraries
2025-03-20 22:44:01,500:INFO:Copying training dataset
2025-03-20 22:44:01,500:INFO:Defining folds
2025-03-20 22:44:01,500:INFO:Declaring metric variables
2025-03-20 22:44:01,501:INFO:Importing untrained model
2025-03-20 22:44:01,501:INFO:Declaring custom model
2025-03-20 22:44:01,501:INFO:Linear Regression Imported successfully
2025-03-20 22:44:01,501:INFO:Cross validation set to False
2025-03-20 22:44:01,501:INFO:Fitting Model
2025-03-20 22:44:01,509:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:01,509:INFO:create_model() successfully completed......................................
2025-03-20 22:44:01,599:INFO:_master_model_container: 1
2025-03-20 22:44:01,599:INFO:_display_container: 2
2025-03-20 22:44:01,602:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:01,602:INFO:finalize_model() successfully completed......................................
2025-03-20 22:44:01,701:INFO:Initializing save_model()
2025-03-20 22:44:01,702:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=model_15km, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:44:01,702:INFO:Adding model into prep_pipe
2025-03-20 22:44:01,702:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:44:01,703:INFO:model_15km.pkl saved in current working directory
2025-03-20 22:44:01,705:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:01,706:INFO:save_model() successfully completed......................................
2025-03-20 22:44:01,814:INFO:PyCaret RegressionExperiment
2025-03-20 22:44:01,814:INFO:Logging name: reg-default-name
2025-03-20 22:44:01,814:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:44:01,814:INFO:version 3.3.2
2025-03-20 22:44:01,814:INFO:Initializing setup()
2025-03-20 22:44:01,814:INFO:self.USI: 5719
2025-03-20 22:44:01,814:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:44:01,814:INFO:Checking environment
2025-03-20 22:44:01,814:INFO:python_version: 3.10.16
2025-03-20 22:44:01,814:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:44:01,814:INFO:machine: arm64
2025-03-20 22:44:01,814:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:44:01,814:INFO:Memory: svmem(total=38654705664, available=13126828032, percent=66.0, used=16595566592, free=200769536, active=12946210816, inactive=12844335104, wired=3649355776)
2025-03-20 22:44:01,814:INFO:Physical Core: 11
2025-03-20 22:44:01,814:INFO:Logical Core: 11
2025-03-20 22:44:01,814:INFO:Checking libraries
2025-03-20 22:44:01,814:INFO:System:
2025-03-20 22:44:01,815:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:44:01,815:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:44:01,815:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:44:01,815:INFO:PyCaret required dependencies:
2025-03-20 22:44:01,815:INFO:                 pip: 25.0
2025-03-20 22:44:01,815:INFO:          setuptools: 77.0.1
2025-03-20 22:44:01,815:INFO:             pycaret: 3.3.2
2025-03-20 22:44:01,815:INFO:             IPython: 8.34.0
2025-03-20 22:44:01,815:INFO:          ipywidgets: 8.1.5
2025-03-20 22:44:01,815:INFO:                tqdm: 4.67.1
2025-03-20 22:44:01,815:INFO:               numpy: 1.26.4
2025-03-20 22:44:01,815:INFO:              pandas: 2.1.4
2025-03-20 22:44:01,815:INFO:              jinja2: 3.1.6
2025-03-20 22:44:01,815:INFO:               scipy: 1.11.4
2025-03-20 22:44:01,815:INFO:              joblib: 1.3.2
2025-03-20 22:44:01,815:INFO:             sklearn: 1.4.2
2025-03-20 22:44:01,815:INFO:                pyod: 2.0.3
2025-03-20 22:44:01,815:INFO:            imblearn: 0.13.0
2025-03-20 22:44:01,815:INFO:   category_encoders: 2.7.0
2025-03-20 22:44:01,815:INFO:            lightgbm: 4.6.0
2025-03-20 22:44:01,815:INFO:               numba: 0.61.0
2025-03-20 22:44:01,815:INFO:            requests: 2.32.3
2025-03-20 22:44:01,815:INFO:          matplotlib: 3.7.5
2025-03-20 22:44:01,815:INFO:          scikitplot: 0.3.7
2025-03-20 22:44:01,815:INFO:         yellowbrick: 1.5
2025-03-20 22:44:01,815:INFO:              plotly: 5.24.1
2025-03-20 22:44:01,815:INFO:    plotly-resampler: Not installed
2025-03-20 22:44:01,815:INFO:             kaleido: 0.2.1
2025-03-20 22:44:01,815:INFO:           schemdraw: 0.15
2025-03-20 22:44:01,815:INFO:         statsmodels: 0.14.4
2025-03-20 22:44:01,815:INFO:              sktime: 0.26.0
2025-03-20 22:44:01,815:INFO:               tbats: 1.1.3
2025-03-20 22:44:01,815:INFO:            pmdarima: 2.0.4
2025-03-20 22:44:01,815:INFO:              psutil: 7.0.0
2025-03-20 22:44:01,815:INFO:          markupsafe: 3.0.2
2025-03-20 22:44:01,815:INFO:             pickle5: Not installed
2025-03-20 22:44:01,815:INFO:         cloudpickle: 3.1.1
2025-03-20 22:44:01,815:INFO:         deprecation: 2.1.0
2025-03-20 22:44:01,815:INFO:              xxhash: 3.5.0
2025-03-20 22:44:01,815:INFO:           wurlitzer: 3.1.1
2025-03-20 22:44:01,815:INFO:PyCaret optional dependencies:
2025-03-20 22:44:01,815:INFO:                shap: Not installed
2025-03-20 22:44:01,815:INFO:           interpret: Not installed
2025-03-20 22:44:01,815:INFO:                umap: Not installed
2025-03-20 22:44:01,815:INFO:     ydata_profiling: Not installed
2025-03-20 22:44:01,815:INFO:  explainerdashboard: Not installed
2025-03-20 22:44:01,815:INFO:             autoviz: Not installed
2025-03-20 22:44:01,815:INFO:           fairlearn: Not installed
2025-03-20 22:44:01,815:INFO:          deepchecks: Not installed
2025-03-20 22:44:01,815:INFO:             xgboost: Not installed
2025-03-20 22:44:01,815:INFO:            catboost: Not installed
2025-03-20 22:44:01,815:INFO:              kmodes: Not installed
2025-03-20 22:44:01,815:INFO:             mlxtend: Not installed
2025-03-20 22:44:01,815:INFO:       statsforecast: Not installed
2025-03-20 22:44:01,815:INFO:        tune_sklearn: Not installed
2025-03-20 22:44:01,815:INFO:                 ray: Not installed
2025-03-20 22:44:01,815:INFO:            hyperopt: Not installed
2025-03-20 22:44:01,815:INFO:              optuna: Not installed
2025-03-20 22:44:01,815:INFO:               skopt: Not installed
2025-03-20 22:44:01,815:INFO:              mlflow: Not installed
2025-03-20 22:44:01,815:INFO:              gradio: Not installed
2025-03-20 22:44:01,815:INFO:             fastapi: Not installed
2025-03-20 22:44:01,815:INFO:             uvicorn: Not installed
2025-03-20 22:44:01,815:INFO:              m2cgen: Not installed
2025-03-20 22:44:01,815:INFO:           evidently: Not installed
2025-03-20 22:44:01,816:INFO:               fugue: Not installed
2025-03-20 22:44:01,816:INFO:           streamlit: 1.43.2
2025-03-20 22:44:01,816:INFO:             prophet: Not installed
2025-03-20 22:44:01,816:INFO:None
2025-03-20 22:44:01,816:INFO:Set up data.
2025-03-20 22:44:01,819:INFO:Set up folding strategy.
2025-03-20 22:44:01,819:INFO:Set up train/test split.
2025-03-20 22:44:01,821:INFO:Set up index.
2025-03-20 22:44:01,822:INFO:Assigning column types.
2025-03-20 22:44:01,824:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:44:01,824:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,826:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,828:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,858:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:01,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:01,881:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,883:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,885:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,915:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:01,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:01,938:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:44:01,940:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,943:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,974:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:01,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:01,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,000:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,002:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,032:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,054:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:44:02,058:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,166:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,166:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:44:02,200:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,256:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,278:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:44:02,313:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,369:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:02,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,392:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:44:02,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,505:INFO:Preparing preprocessing pipeline...
2025-03-20 22:44:02,505:INFO:Set up simple imputation.
2025-03-20 22:44:02,506:INFO:Set up column name cleaning.
2025-03-20 22:44:02,518:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:44:02,520:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:44:02,520:INFO:Creating final display dataframe.
2025-03-20 22:44:02,556:INFO:Setup _display_container:                     Description             Value
0                    Session id              5147
1                        Target        20_km_Czas
2                   Target type        Regression
3           Original data shape        (18365, 6)
4        Transformed data shape        (18365, 6)
5   Transformed train set shape        (12855, 6)
6    Transformed test set shape         (5510, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              5719
2025-03-20 22:44:02,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:02,674:INFO:setup() successfully completed in 0.86s...............
2025-03-20 22:44:02,674:INFO:Initializing create_model()
2025-03-20 22:44:02,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33e9a9fc0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:44:02,674:INFO:Checking exceptions
2025-03-20 22:44:02,681:INFO:Importing libraries
2025-03-20 22:44:02,681:INFO:Copying training dataset
2025-03-20 22:44:02,686:INFO:Defining folds
2025-03-20 22:44:02,686:INFO:Declaring metric variables
2025-03-20 22:44:02,688:INFO:Importing untrained model
2025-03-20 22:44:02,691:INFO:Linear Regression Imported successfully
2025-03-20 22:44:02,696:INFO:Starting cross validation
2025-03-20 22:44:02,697:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:44:02,754:INFO:Calculating mean and std
2025-03-20 22:44:02,754:INFO:Creating metrics dataframe
2025-03-20 22:44:02,757:INFO:Finalizing model
2025-03-20 22:44:02,766:INFO:Uploading results into container
2025-03-20 22:44:02,766:INFO:Uploading model into container now
2025-03-20 22:44:02,773:INFO:_master_model_container: 1
2025-03-20 22:44:02,773:INFO:_display_container: 2
2025-03-20 22:44:02,773:INFO:LinearRegression(n_jobs=-1)
2025-03-20 22:44:02,773:INFO:create_model() successfully completed......................................
2025-03-20 22:44:02,860:INFO:Initializing finalize_model()
2025-03-20 22:44:02,860:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33e9a9fc0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:44:02,860:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 22:44:02,862:INFO:Initializing create_model()
2025-03-20 22:44:02,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33e9a9fc0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:44:02,862:INFO:Checking exceptions
2025-03-20 22:44:02,863:INFO:Importing libraries
2025-03-20 22:44:02,863:INFO:Copying training dataset
2025-03-20 22:44:02,864:INFO:Defining folds
2025-03-20 22:44:02,864:INFO:Declaring metric variables
2025-03-20 22:44:02,864:INFO:Importing untrained model
2025-03-20 22:44:02,864:INFO:Declaring custom model
2025-03-20 22:44:02,864:INFO:Linear Regression Imported successfully
2025-03-20 22:44:02,864:INFO:Cross validation set to False
2025-03-20 22:44:02,864:INFO:Fitting Model
2025-03-20 22:44:02,873:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:02,873:INFO:create_model() successfully completed......................................
2025-03-20 22:44:02,961:INFO:_master_model_container: 1
2025-03-20 22:44:02,961:INFO:_display_container: 2
2025-03-20 22:44:02,963:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:02,963:INFO:finalize_model() successfully completed......................................
2025-03-20 22:44:03,061:INFO:Initializing save_model()
2025-03-20 22:44:03,061:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=model_20km, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:44:03,061:INFO:Adding model into prep_pipe
2025-03-20 22:44:03,061:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:44:03,063:INFO:model_20km.pkl saved in current working directory
2025-03-20 22:44:03,065:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:03,065:INFO:save_model() successfully completed......................................
2025-03-20 22:44:03,164:INFO:PyCaret RegressionExperiment
2025-03-20 22:44:03,164:INFO:Logging name: reg-default-name
2025-03-20 22:44:03,164:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-20 22:44:03,164:INFO:version 3.3.2
2025-03-20 22:44:03,165:INFO:Initializing setup()
2025-03-20 22:44:03,165:INFO:self.USI: 4a97
2025-03-20 22:44:03,165:INFO:self._variable_keys: {'target_param', 'pipeline', 'seed', 'log_plots_param', 'memory', 'exp_name_log', 'fold_generator', 'y', 'fold_shuffle_param', 'gpu_param', '_available_plots', 'y_test', 'idx', 'n_jobs_param', 'y_train', 'exp_id', '_ml_usecase', 'logging_param', 'X_test', 'X', 'X_train', 'transform_target_param', 'data', 'fold_groups_param', 'gpu_n_jobs_param', 'html_param', 'USI'}
2025-03-20 22:44:03,165:INFO:Checking environment
2025-03-20 22:44:03,165:INFO:python_version: 3.10.16
2025-03-20 22:44:03,165:INFO:python_build: ('main', 'Dec 11 2024 10:22:29')
2025-03-20 22:44:03,165:INFO:machine: arm64
2025-03-20 22:44:03,165:INFO:platform: macOS-14.6-arm64-arm-64bit
2025-03-20 22:44:03,165:INFO:Memory: svmem(total=38654705664, available=13097861120, percent=66.1, used=16621584384, free=169328640, active=12951011328, inactive=12846792704, wired=3670573056)
2025-03-20 22:44:03,165:INFO:Physical Core: 11
2025-03-20 22:44:03,165:INFO:Logical Core: 11
2025-03-20 22:44:03,165:INFO:Checking libraries
2025-03-20 22:44:03,165:INFO:System:
2025-03-20 22:44:03,165:INFO:    python: 3.10.16 (main, Dec 11 2024, 10:22:29) [Clang 14.0.6 ]
2025-03-20 22:44:03,165:INFO:executable: /opt/miniconda3/envs/polmaraton/bin/python
2025-03-20 22:44:03,165:INFO:   machine: macOS-14.6-arm64-arm-64bit
2025-03-20 22:44:03,165:INFO:PyCaret required dependencies:
2025-03-20 22:44:03,165:INFO:                 pip: 25.0
2025-03-20 22:44:03,165:INFO:          setuptools: 77.0.1
2025-03-20 22:44:03,165:INFO:             pycaret: 3.3.2
2025-03-20 22:44:03,165:INFO:             IPython: 8.34.0
2025-03-20 22:44:03,165:INFO:          ipywidgets: 8.1.5
2025-03-20 22:44:03,165:INFO:                tqdm: 4.67.1
2025-03-20 22:44:03,165:INFO:               numpy: 1.26.4
2025-03-20 22:44:03,165:INFO:              pandas: 2.1.4
2025-03-20 22:44:03,165:INFO:              jinja2: 3.1.6
2025-03-20 22:44:03,165:INFO:               scipy: 1.11.4
2025-03-20 22:44:03,165:INFO:              joblib: 1.3.2
2025-03-20 22:44:03,165:INFO:             sklearn: 1.4.2
2025-03-20 22:44:03,165:INFO:                pyod: 2.0.3
2025-03-20 22:44:03,165:INFO:            imblearn: 0.13.0
2025-03-20 22:44:03,165:INFO:   category_encoders: 2.7.0
2025-03-20 22:44:03,165:INFO:            lightgbm: 4.6.0
2025-03-20 22:44:03,165:INFO:               numba: 0.61.0
2025-03-20 22:44:03,165:INFO:            requests: 2.32.3
2025-03-20 22:44:03,165:INFO:          matplotlib: 3.7.5
2025-03-20 22:44:03,165:INFO:          scikitplot: 0.3.7
2025-03-20 22:44:03,165:INFO:         yellowbrick: 1.5
2025-03-20 22:44:03,165:INFO:              plotly: 5.24.1
2025-03-20 22:44:03,165:INFO:    plotly-resampler: Not installed
2025-03-20 22:44:03,165:INFO:             kaleido: 0.2.1
2025-03-20 22:44:03,165:INFO:           schemdraw: 0.15
2025-03-20 22:44:03,165:INFO:         statsmodels: 0.14.4
2025-03-20 22:44:03,165:INFO:              sktime: 0.26.0
2025-03-20 22:44:03,165:INFO:               tbats: 1.1.3
2025-03-20 22:44:03,165:INFO:            pmdarima: 2.0.4
2025-03-20 22:44:03,165:INFO:              psutil: 7.0.0
2025-03-20 22:44:03,165:INFO:          markupsafe: 3.0.2
2025-03-20 22:44:03,165:INFO:             pickle5: Not installed
2025-03-20 22:44:03,165:INFO:         cloudpickle: 3.1.1
2025-03-20 22:44:03,165:INFO:         deprecation: 2.1.0
2025-03-20 22:44:03,165:INFO:              xxhash: 3.5.0
2025-03-20 22:44:03,165:INFO:           wurlitzer: 3.1.1
2025-03-20 22:44:03,165:INFO:PyCaret optional dependencies:
2025-03-20 22:44:03,165:INFO:                shap: Not installed
2025-03-20 22:44:03,165:INFO:           interpret: Not installed
2025-03-20 22:44:03,165:INFO:                umap: Not installed
2025-03-20 22:44:03,165:INFO:     ydata_profiling: Not installed
2025-03-20 22:44:03,165:INFO:  explainerdashboard: Not installed
2025-03-20 22:44:03,166:INFO:             autoviz: Not installed
2025-03-20 22:44:03,166:INFO:           fairlearn: Not installed
2025-03-20 22:44:03,166:INFO:          deepchecks: Not installed
2025-03-20 22:44:03,166:INFO:             xgboost: Not installed
2025-03-20 22:44:03,166:INFO:            catboost: Not installed
2025-03-20 22:44:03,166:INFO:              kmodes: Not installed
2025-03-20 22:44:03,166:INFO:             mlxtend: Not installed
2025-03-20 22:44:03,166:INFO:       statsforecast: Not installed
2025-03-20 22:44:03,166:INFO:        tune_sklearn: Not installed
2025-03-20 22:44:03,166:INFO:                 ray: Not installed
2025-03-20 22:44:03,166:INFO:            hyperopt: Not installed
2025-03-20 22:44:03,166:INFO:              optuna: Not installed
2025-03-20 22:44:03,166:INFO:               skopt: Not installed
2025-03-20 22:44:03,166:INFO:              mlflow: Not installed
2025-03-20 22:44:03,166:INFO:              gradio: Not installed
2025-03-20 22:44:03,166:INFO:             fastapi: Not installed
2025-03-20 22:44:03,166:INFO:             uvicorn: Not installed
2025-03-20 22:44:03,166:INFO:              m2cgen: Not installed
2025-03-20 22:44:03,166:INFO:           evidently: Not installed
2025-03-20 22:44:03,166:INFO:               fugue: Not installed
2025-03-20 22:44:03,166:INFO:           streamlit: 1.43.2
2025-03-20 22:44:03,166:INFO:             prophet: Not installed
2025-03-20 22:44:03,166:INFO:None
2025-03-20 22:44:03,166:INFO:Set up data.
2025-03-20 22:44:03,169:INFO:Set up folding strategy.
2025-03-20 22:44:03,169:INFO:Set up train/test split.
2025-03-20 22:44:03,172:INFO:Set up index.
2025-03-20 22:44:03,172:INFO:Assigning column types.
2025-03-20 22:44:03,175:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-20 22:44:03,175:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,178:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,180:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,211:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,234:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,235:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,237:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,240:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,293:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-20 22:44:03,295:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,298:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,350:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,353:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,355:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,408:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,409:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-20 22:44:03,413:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,526:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-20 22:44:03,561:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,617:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,640:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-20 22:44:03,674:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-20 22:44:03,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,755:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-20 22:44:03,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,869:INFO:Preparing preprocessing pipeline...
2025-03-20 22:44:03,869:INFO:Set up simple imputation.
2025-03-20 22:44:03,870:INFO:Set up column name cleaning.
2025-03-20 22:44:03,883:INFO:Finished creating preprocessing pipeline.
2025-03-20 22:44:03,885:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-20 22:44:03,885:INFO:Creating final display dataframe.
2025-03-20 22:44:03,924:INFO:Setup _display_container:                     Description             Value
0                    Session id              2367
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (18365, 7)
4        Transformed data shape        (18365, 7)
5   Transformed train set shape        (12855, 7)
6    Transformed test set shape         (5510, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              4a97
2025-03-20 22:44:03,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:03,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:04,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:04,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-20 22:44:04,042:INFO:setup() successfully completed in 0.88s...............
2025-03-20 22:44:04,042:INFO:Initializing create_model()
2025-03-20 22:44:04,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33a63ada0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:44:04,042:INFO:Checking exceptions
2025-03-20 22:44:04,049:INFO:Importing libraries
2025-03-20 22:44:04,049:INFO:Copying training dataset
2025-03-20 22:44:04,055:INFO:Defining folds
2025-03-20 22:44:04,055:INFO:Declaring metric variables
2025-03-20 22:44:04,057:INFO:Importing untrained model
2025-03-20 22:44:04,059:INFO:Linear Regression Imported successfully
2025-03-20 22:44:04,064:INFO:Starting cross validation
2025-03-20 22:44:04,065:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-20 22:44:04,149:INFO:Calculating mean and std
2025-03-20 22:44:04,149:INFO:Creating metrics dataframe
2025-03-20 22:44:04,151:INFO:Finalizing model
2025-03-20 22:44:04,160:INFO:Uploading results into container
2025-03-20 22:44:04,161:INFO:Uploading model into container now
2025-03-20 22:44:04,167:INFO:_master_model_container: 1
2025-03-20 22:44:04,167:INFO:_display_container: 2
2025-03-20 22:44:04,168:INFO:LinearRegression(n_jobs=-1)
2025-03-20 22:44:04,168:INFO:create_model() successfully completed......................................
2025-03-20 22:44:04,255:INFO:Initializing finalize_model()
2025-03-20 22:44:04,255:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33a63ada0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-20 22:44:04,256:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-20 22:44:04,258:INFO:Initializing create_model()
2025-03-20 22:44:04,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x33a63ada0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-20 22:44:04,258:INFO:Checking exceptions
2025-03-20 22:44:04,259:INFO:Importing libraries
2025-03-20 22:44:04,259:INFO:Copying training dataset
2025-03-20 22:44:04,259:INFO:Defining folds
2025-03-20 22:44:04,260:INFO:Declaring metric variables
2025-03-20 22:44:04,260:INFO:Importing untrained model
2025-03-20 22:44:04,260:INFO:Declaring custom model
2025-03-20 22:44:04,260:INFO:Linear Regression Imported successfully
2025-03-20 22:44:04,261:INFO:Cross validation set to False
2025-03-20 22:44:04,261:INFO:Fitting Model
2025-03-20 22:44:04,270:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:04,270:INFO:create_model() successfully completed......................................
2025-03-20 22:44:04,359:INFO:_master_model_container: 1
2025-03-20 22:44:04,359:INFO:_display_container: 2
2025-03-20 22:44:04,361:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:04,361:INFO:finalize_model() successfully completed......................................
2025-03-20 22:44:04,457:INFO:Initializing save_model()
2025-03-20 22:44:04,457:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=model_final_time, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/pj/7l2xynk519q3g8w7z00w1gq40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-20 22:44:04,457:INFO:Adding model into prep_pipe
2025-03-20 22:44:04,457:WARNING:Only Model saved as it was a pipeline.
2025-03-20 22:44:04,459:INFO:model_final_time.pkl saved in current working directory
2025-03-20 22:44:04,461:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '15_km_Czas',
                                             '20_km_Czas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-20 22:44:04,461:INFO:save_model() successfully completed......................................
2025-03-20 22:54:14,768:INFO:Initializing predict_model()
2025-03-20 22:54:14,770:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc70880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x499588b80>)
2025-03-20 22:54:14,770:INFO:Checking exceptions
2025-03-20 22:54:14,770:INFO:Preloading libraries
2025-03-20 22:54:14,770:INFO:Set up data.
2025-03-20 22:54:17,577:INFO:Initializing predict_model()
2025-03-20 22:54:17,578:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc706d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x499588af0>)
2025-03-20 22:54:17,578:INFO:Checking exceptions
2025-03-20 22:54:17,578:INFO:Preloading libraries
2025-03-20 22:54:17,578:INFO:Set up data.
2025-03-20 22:54:20,775:INFO:Initializing predict_model()
2025-03-20 22:54:20,775:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc70580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x499588dc0>)
2025-03-20 22:54:20,775:INFO:Checking exceptions
2025-03-20 22:54:20,775:INFO:Preloading libraries
2025-03-20 22:54:20,776:INFO:Set up data.
2025-03-20 22:55:26,365:INFO:Initializing predict_model()
2025-03-20 22:55:26,365:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc59930>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x49958b520>)
2025-03-20 22:55:26,365:INFO:Checking exceptions
2025-03-20 22:55:26,365:INFO:Preloading libraries
2025-03-20 22:55:26,366:INFO:Set up data.
2025-03-20 22:55:26,367:INFO:Set up index.
2025-03-20 22:56:28,274:INFO:Initializing predict_model()
2025-03-20 22:56:28,275:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc59bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x499588d30>)
2025-03-20 22:56:28,275:INFO:Checking exceptions
2025-03-20 22:56:28,275:INFO:Preloading libraries
2025-03-20 22:56:28,275:INFO:Set up data.
2025-03-20 22:56:28,276:INFO:Set up index.
2025-03-20 22:56:29,040:INFO:Initializing predict_model()
2025-03-20 22:56:29,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc5a620>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Czas',
                                             '5_km_Tempo', '10_km_Czas',
                                             '10_km_Tempo', '15_km_Czas',
                                             '15_km_Tempo', '20_km_Czas',
                                             '20_km_Tempo', 'Tempo_Stabilność',
                                             'Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImpu...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=2,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x499588dc0>)
2025-03-20 22:56:29,040:INFO:Checking exceptions
2025-03-20 22:56:29,040:INFO:Preloading libraries
2025-03-20 22:56:29,040:INFO:Set up data.
2025-03-20 22:56:29,041:INFO:Set up index.
2025-03-20 22:56:57,391:INFO:Initializing predict_model()
2025-03-20 22:56:57,391:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dce5330>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc488b0>)
2025-03-20 22:56:57,391:INFO:Checking exceptions
2025-03-20 22:56:57,391:INFO:Preloading libraries
2025-03-20 22:56:57,391:INFO:Set up data.
2025-03-20 22:56:57,393:INFO:Set up index.
2025-03-20 22:56:58,607:INFO:Initializing predict_model()
2025-03-20 22:56:58,608:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dce54b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc48b80>)
2025-03-20 22:56:58,608:INFO:Checking exceptions
2025-03-20 22:56:58,608:INFO:Preloading libraries
2025-03-20 22:56:58,608:INFO:Set up data.
2025-03-20 22:56:58,610:INFO:Set up index.
2025-03-20 22:56:59,568:INFO:Initializing predict_model()
2025-03-20 22:56:59,568:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc59270>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc48670>)
2025-03-20 22:56:59,568:INFO:Checking exceptions
2025-03-20 22:56:59,568:INFO:Preloading libraries
2025-03-20 22:56:59,568:INFO:Set up data.
2025-03-20 22:56:59,570:INFO:Set up index.
2025-03-20 22:57:00,365:INFO:Initializing predict_model()
2025-03-20 22:57:00,365:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc5c190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc48550>)
2025-03-20 22:57:00,365:INFO:Checking exceptions
2025-03-20 22:57:00,365:INFO:Preloading libraries
2025-03-20 22:57:00,366:INFO:Set up data.
2025-03-20 22:57:00,368:INFO:Set up index.
2025-03-20 22:57:01,104:INFO:Initializing predict_model()
2025-03-20 22:57:01,104:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc5f280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc48c10>)
2025-03-20 22:57:01,104:INFO:Checking exceptions
2025-03-20 22:57:01,104:INFO:Preloading libraries
2025-03-20 22:57:01,105:INFO:Set up data.
2025-03-20 22:57:01,107:INFO:Set up index.
2025-03-20 22:57:01,932:INFO:Initializing predict_model()
2025-03-20 22:57:01,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc6ded0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc48820>)
2025-03-20 22:57:01,932:INFO:Checking exceptions
2025-03-20 22:57:01,932:INFO:Preloading libraries
2025-03-20 22:57:01,932:INFO:Set up data.
2025-03-20 22:57:01,934:INFO:Set up index.
2025-03-20 22:57:02,744:INFO:Initializing predict_model()
2025-03-20 22:57:02,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc5af50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc48ee0>)
2025-03-20 22:57:02,744:INFO:Checking exceptions
2025-03-20 22:57:02,744:INFO:Preloading libraries
2025-03-20 22:57:02,744:INFO:Set up data.
2025-03-20 22:57:02,746:INFO:Set up index.
2025-03-20 22:57:03,494:INFO:Initializing predict_model()
2025-03-20 22:57:03,494:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc5e7d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49120>)
2025-03-20 22:57:03,494:INFO:Checking exceptions
2025-03-20 22:57:03,494:INFO:Preloading libraries
2025-03-20 22:57:03,495:INFO:Set up data.
2025-03-20 22:57:03,497:INFO:Set up index.
2025-03-20 22:57:04,260:INFO:Initializing predict_model()
2025-03-20 22:57:04,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc38fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49360>)
2025-03-20 22:57:04,260:INFO:Checking exceptions
2025-03-20 22:57:04,260:INFO:Preloading libraries
2025-03-20 22:57:04,260:INFO:Set up data.
2025-03-20 22:57:04,262:INFO:Set up index.
2025-03-20 22:57:05,012:INFO:Initializing predict_model()
2025-03-20 22:57:05,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc397b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc491b0>)
2025-03-20 22:57:05,012:INFO:Checking exceptions
2025-03-20 22:57:05,012:INFO:Preloading libraries
2025-03-20 22:57:05,012:INFO:Set up data.
2025-03-20 22:57:05,014:INFO:Set up index.
2025-03-20 22:57:05,972:INFO:Initializing predict_model()
2025-03-20 22:57:05,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x49959d150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49480>)
2025-03-20 22:57:05,972:INFO:Checking exceptions
2025-03-20 22:57:05,972:INFO:Preloading libraries
2025-03-20 22:57:05,973:INFO:Set up data.
2025-03-20 22:57:05,975:INFO:Set up index.
2025-03-20 22:58:37,093:INFO:Initializing predict_model()
2025-03-20 22:58:37,093:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dca8760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49cf0>)
2025-03-20 22:58:37,093:INFO:Checking exceptions
2025-03-20 22:58:37,093:INFO:Preloading libraries
2025-03-20 22:58:37,094:INFO:Set up data.
2025-03-20 22:58:37,096:INFO:Set up index.
2025-03-20 22:58:38,465:INFO:Initializing predict_model()
2025-03-20 22:58:38,465:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dca86d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4a200>)
2025-03-20 22:58:38,465:INFO:Checking exceptions
2025-03-20 22:58:38,465:INFO:Preloading libraries
2025-03-20 22:58:38,466:INFO:Set up data.
2025-03-20 22:58:38,468:INFO:Set up index.
2025-03-20 22:58:40,173:INFO:Initializing predict_model()
2025-03-20 22:58:40,173:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dca8760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49fc0>)
2025-03-20 22:58:40,173:INFO:Checking exceptions
2025-03-20 22:58:40,173:INFO:Preloading libraries
2025-03-20 22:58:40,173:INFO:Set up data.
2025-03-20 22:58:40,175:INFO:Set up index.
2025-03-20 22:58:41,189:INFO:Initializing predict_model()
2025-03-20 22:58:41,189:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dca8c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49990>)
2025-03-20 22:58:41,189:INFO:Checking exceptions
2025-03-20 22:58:41,189:INFO:Preloading libraries
2025-03-20 22:58:41,189:INFO:Set up data.
2025-03-20 22:58:41,191:INFO:Set up index.
2025-03-20 22:58:41,981:INFO:Initializing predict_model()
2025-03-20 22:58:41,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dcc5f60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49870>)
2025-03-20 22:58:41,981:INFO:Checking exceptions
2025-03-20 22:58:41,981:INFO:Preloading libraries
2025-03-20 22:58:41,981:INFO:Set up data.
2025-03-20 22:58:41,983:INFO:Set up index.
2025-03-20 22:58:42,697:INFO:Initializing predict_model()
2025-03-20 22:58:42,698:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dcc5d80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc497e0>)
2025-03-20 22:58:42,698:INFO:Checking exceptions
2025-03-20 22:58:42,698:INFO:Preloading libraries
2025-03-20 22:58:42,698:INFO:Set up data.
2025-03-20 22:58:42,700:INFO:Set up index.
2025-03-20 22:58:46,578:INFO:Initializing predict_model()
2025-03-20 22:58:46,579:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc31120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4a5f0>)
2025-03-20 22:58:46,579:INFO:Checking exceptions
2025-03-20 22:58:46,579:INFO:Preloading libraries
2025-03-20 22:58:46,579:INFO:Set up data.
2025-03-20 22:58:46,581:INFO:Set up index.
2025-03-20 22:58:47,959:INFO:Initializing predict_model()
2025-03-20 22:58:47,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dcc46a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc49750>)
2025-03-20 22:58:47,959:INFO:Checking exceptions
2025-03-20 22:58:47,959:INFO:Preloading libraries
2025-03-20 22:58:47,959:INFO:Set up data.
2025-03-20 22:58:47,961:INFO:Set up index.
2025-03-20 22:58:48,651:INFO:Initializing predict_model()
2025-03-20 22:58:48,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc339d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4a8c0>)
2025-03-20 22:58:48,651:INFO:Checking exceptions
2025-03-20 22:58:48,651:INFO:Preloading libraries
2025-03-20 22:58:48,651:INFO:Set up data.
2025-03-20 22:58:48,653:INFO:Set up index.
2025-03-20 22:58:49,314:INFO:Initializing predict_model()
2025-03-20 22:58:49,314:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x42dc33370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4a710>)
2025-03-20 22:58:49,314:INFO:Checking exceptions
2025-03-20 22:58:49,314:INFO:Preloading libraries
2025-03-20 22:58:49,314:INFO:Set up data.
2025-03-20 22:58:49,316:INFO:Set up index.
2025-03-20 22:58:50,012:INFO:Initializing predict_model()
2025-03-20 22:58:50,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5187094b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4a9e0>)
2025-03-20 22:58:50,012:INFO:Checking exceptions
2025-03-20 22:58:50,012:INFO:Preloading libraries
2025-03-20 22:58:50,012:INFO:Set up data.
2025-03-20 22:58:50,014:INFO:Set up index.
2025-03-20 22:58:52,657:INFO:Initializing predict_model()
2025-03-20 22:58:52,657:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518720bb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4b010>)
2025-03-20 22:58:52,657:INFO:Checking exceptions
2025-03-20 22:58:52,657:INFO:Preloading libraries
2025-03-20 22:58:52,657:INFO:Set up data.
2025-03-20 22:58:52,659:INFO:Set up index.
2025-03-20 22:58:57,132:INFO:Initializing predict_model()
2025-03-20 22:58:57,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518723610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4b370>)
2025-03-20 22:58:57,132:INFO:Checking exceptions
2025-03-20 22:58:57,132:INFO:Preloading libraries
2025-03-20 22:58:57,132:INFO:Set up data.
2025-03-20 22:58:57,134:INFO:Set up index.
2025-03-20 22:59:00,240:INFO:Initializing predict_model()
2025-03-20 22:59:00,240:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518744a60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x42dc4b910>)
2025-03-20 22:59:00,240:INFO:Checking exceptions
2025-03-20 22:59:00,240:INFO:Preloading libraries
2025-03-20 22:59:00,241:INFO:Set up data.
2025-03-20 22:59:00,243:INFO:Set up index.
2025-03-20 22:59:04,510:INFO:Initializing predict_model()
2025-03-20 22:59:04,510:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518746680>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51877c1f0>)
2025-03-20 22:59:04,510:INFO:Checking exceptions
2025-03-20 22:59:04,510:INFO:Preloading libraries
2025-03-20 22:59:04,510:INFO:Set up data.
2025-03-20 22:59:04,512:INFO:Set up index.
2025-03-20 23:00:50,939:INFO:Initializing predict_model()
2025-03-20 23:00:50,939:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x51877d7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788ca0>)
2025-03-20 23:00:50,939:INFO:Checking exceptions
2025-03-20 23:00:50,939:INFO:Preloading libraries
2025-03-20 23:00:50,939:INFO:Set up data.
2025-03-20 23:00:53,481:INFO:Initializing predict_model()
2025-03-20 23:00:53,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518783f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788e50>)
2025-03-20 23:00:53,481:INFO:Checking exceptions
2025-03-20 23:00:53,482:INFO:Preloading libraries
2025-03-20 23:00:53,482:INFO:Set up data.
2025-03-20 23:02:18,423:INFO:Initializing predict_model()
2025-03-20 23:02:18,423:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518795930>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518789090>)
2025-03-20 23:02:18,423:INFO:Checking exceptions
2025-03-20 23:02:18,423:INFO:Preloading libraries
2025-03-20 23:02:18,423:INFO:Set up data.
2025-03-20 23:02:18,424:INFO:Set up index.
2025-03-20 23:02:19,581:INFO:Initializing predict_model()
2025-03-20 23:02:19,581:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518795b10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788280>)
2025-03-20 23:02:19,581:INFO:Checking exceptions
2025-03-20 23:02:19,582:INFO:Preloading libraries
2025-03-20 23:02:19,582:INFO:Set up data.
2025-03-20 23:02:19,584:INFO:Set up index.
2025-03-20 23:03:30,898:INFO:Initializing predict_model()
2025-03-20 23:03:30,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518754e20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788a60>)
2025-03-20 23:03:30,899:INFO:Checking exceptions
2025-03-20 23:03:30,899:INFO:Preloading libraries
2025-03-20 23:03:30,899:INFO:Set up data.
2025-03-20 23:03:30,901:INFO:Set up index.
2025-03-20 23:03:32,230:INFO:Initializing predict_model()
2025-03-20 23:03:32,230:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5187a82b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788700>)
2025-03-20 23:03:32,230:INFO:Checking exceptions
2025-03-20 23:03:32,230:INFO:Preloading libraries
2025-03-20 23:03:32,230:INFO:Set up data.
2025-03-20 23:03:32,232:INFO:Set up index.
2025-03-20 23:03:33,188:INFO:Initializing predict_model()
2025-03-20 23:03:33,189:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5187a9240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788820>)
2025-03-20 23:03:33,189:INFO:Checking exceptions
2025-03-20 23:03:33,189:INFO:Preloading libraries
2025-03-20 23:03:33,189:INFO:Set up data.
2025-03-20 23:03:33,191:INFO:Set up index.
2025-03-20 23:03:34,043:INFO:Initializing predict_model()
2025-03-20 23:03:34,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x51873ba00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518789750>)
2025-03-20 23:03:34,043:INFO:Checking exceptions
2025-03-20 23:03:34,043:INFO:Preloading libraries
2025-03-20 23:03:34,044:INFO:Set up data.
2025-03-20 23:03:34,045:INFO:Set up index.
2025-03-20 23:03:34,942:INFO:Initializing predict_model()
2025-03-20 23:03:34,943:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518783fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788dc0>)
2025-03-20 23:03:34,943:INFO:Checking exceptions
2025-03-20 23:03:34,943:INFO:Preloading libraries
2025-03-20 23:03:34,943:INFO:Set up data.
2025-03-20 23:03:34,944:INFO:Set up index.
2025-03-20 23:03:47,708:INFO:Initializing predict_model()
2025-03-20 23:03:47,708:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x51876b550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518788ee0>)
2025-03-20 23:03:47,708:INFO:Checking exceptions
2025-03-20 23:03:47,708:INFO:Preloading libraries
2025-03-20 23:03:47,708:INFO:Set up data.
2025-03-20 23:03:47,710:INFO:Set up index.
2025-03-20 23:03:52,094:INFO:Initializing predict_model()
2025-03-20 23:03:52,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x518747b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x518789c60>)
2025-03-20 23:03:52,094:INFO:Checking exceptions
2025-03-20 23:03:52,094:INFO:Preloading libraries
2025-03-20 23:03:52,094:INFO:Set up data.
2025-03-20 23:03:52,096:INFO:Set up index.
2025-03-20 23:03:54,937:INFO:Initializing predict_model()
2025-03-20 23:03:54,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5187ffa60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878a440>)
2025-03-20 23:03:54,937:INFO:Checking exceptions
2025-03-20 23:03:54,937:INFO:Preloading libraries
2025-03-20 23:03:54,937:INFO:Set up data.
2025-03-20 23:03:54,939:INFO:Set up index.
2025-03-20 23:03:58,723:INFO:Initializing predict_model()
2025-03-20 23:03:58,723:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5187ffee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878a4d0>)
2025-03-20 23:03:58,724:INFO:Checking exceptions
2025-03-20 23:03:58,724:INFO:Preloading libraries
2025-03-20 23:03:58,724:INFO:Set up data.
2025-03-20 23:03:58,726:INFO:Set up index.
2025-03-20 23:05:21,096:INFO:Initializing predict_model()
2025-03-20 23:05:21,097:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c739c7f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878ae60>)
2025-03-20 23:05:21,097:INFO:Checking exceptions
2025-03-20 23:05:21,097:INFO:Preloading libraries
2025-03-20 23:05:21,097:INFO:Set up data.
2025-03-20 23:05:21,098:INFO:Set up index.
2025-03-20 23:05:22,279:INFO:Initializing predict_model()
2025-03-20 23:05:22,279:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c7391840>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878b010>)
2025-03-20 23:05:22,279:INFO:Checking exceptions
2025-03-20 23:05:22,280:INFO:Preloading libraries
2025-03-20 23:05:22,280:INFO:Set up data.
2025-03-20 23:05:22,281:INFO:Set up index.
2025-03-20 23:05:22,925:INFO:Initializing predict_model()
2025-03-20 23:05:22,925:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c739c5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878ab00>)
2025-03-20 23:05:22,925:INFO:Checking exceptions
2025-03-20 23:05:22,925:INFO:Preloading libraries
2025-03-20 23:05:22,925:INFO:Set up data.
2025-03-20 23:05:22,927:INFO:Set up index.
2025-03-20 23:07:18,958:INFO:Initializing predict_model()
2025-03-20 23:07:18,958:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c73a1e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878a4d0>)
2025-03-20 23:07:18,958:INFO:Checking exceptions
2025-03-20 23:07:18,958:INFO:Preloading libraries
2025-03-20 23:07:18,958:INFO:Set up data.
2025-03-20 23:07:18,961:INFO:Set up index.
2025-03-20 23:07:20,082:INFO:Initializing predict_model()
2025-03-20 23:07:20,082:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c73a1810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878a680>)
2025-03-20 23:07:20,082:INFO:Checking exceptions
2025-03-20 23:07:20,082:INFO:Preloading libraries
2025-03-20 23:07:20,082:INFO:Set up data.
2025-03-20 23:07:20,084:INFO:Set up index.
2025-03-20 23:07:24,372:INFO:Initializing predict_model()
2025-03-20 23:07:24,373:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5187dfd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878ab90>)
2025-03-20 23:07:24,373:INFO:Checking exceptions
2025-03-20 23:07:24,373:INFO:Preloading libraries
2025-03-20 23:07:24,373:INFO:Set up data.
2025-03-20 23:07:24,375:INFO:Set up index.
2025-03-20 23:07:28,097:INFO:Initializing predict_model()
2025-03-20 23:07:28,097:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c7393c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x51878bc70>)
2025-03-20 23:07:28,097:INFO:Checking exceptions
2025-03-20 23:07:28,097:INFO:Preloading libraries
2025-03-20 23:07:28,097:INFO:Set up data.
2025-03-20 23:07:28,100:INFO:Set up index.
2025-03-20 23:07:33,030:INFO:Initializing predict_model()
2025-03-20 23:07:33,030:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x5c7393fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Płeć', 'Rocznik', '5_km_Tempo',
                                             '10_km_Czas', '10_km_Tempo',
                                             '15_km_Czas', '15_km_Tempo',
                                             '20_km_Czas', '20_km_Tempo'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remov...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=1,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x5c73f00d0>)
2025-03-20 23:07:33,030:INFO:Checking exceptions
2025-03-20 23:07:33,030:INFO:Preloading libraries
2025-03-20 23:07:33,030:INFO:Set up data.
2025-03-20 23:07:33,033:INFO:Set up index.
2025-03-20 23:14:07,096:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:08,495:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:09,366:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:10,196:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:12,146:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:13,215:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:13,937:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:16,806:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:17,461:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:19,465:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:19,621:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:19,811:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:14:20,000:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:13,731:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:19,814:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:20,412:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:21,122:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:21,756:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:22,338:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:23,025:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:24,349:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:17:25,122:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:20:20,321:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:20:26,518:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:20:27,148:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:20:27,740:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:20:28,258:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:23:09,459:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:23:13,682:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:23:14,234:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:23:14,660:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:24:27,349:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:24:34,553:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:24:44,472:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:24:53,934:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:25:00,763:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:26:42,901:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:26:45,596:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:26:59,161:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:28:29,057:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:28:32,902:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:28:35,085:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:29:55,495:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:31:06,477:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:31:08,720:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:31:09,434:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:31:10,121:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:82: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:41:59,390:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:10,226:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:10,842:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:11,633:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:12,595:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:13,138:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:13,555:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:14,072:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:14,756:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:15,175:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:15,362:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:15,541:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:15,830:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:16,189:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:16,459:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:16,660:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:17,435:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:17,736:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:18,076:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-20 23:42:19,465:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:05:58,793:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:14,086:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:14,709:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:15,180:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:15,657:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:15,995:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:16,430:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:16,635:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:16,812:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:16,965:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,126:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,260:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,407:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,541:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,677:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,825:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:17,970:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:18,113:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:18,272:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:18,416:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:18,588:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:18,743:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 11:10:18,927:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:02:15,092:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:02:18,489:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:130: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:45:31,916:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:137: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:46:21,634:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:137: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:46:22,298:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:137: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:46:22,893:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:137: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:46:23,669:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:137: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:09,994:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:15,344:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:15,935:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:16,764:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:17,363:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:17,664:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:50:17,812:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:54:10,913:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:54:15,536:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:54:21,868:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:123: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:57:55,712:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:14,755:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:15,315:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:15,608:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:15,748:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:15,885:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,024:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,164:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,292:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,426:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,561:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,720:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:16,857:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:38,737:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 12:58:44,622:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

2025-03-21 13:02:05,630:WARNING:/Users/rafaljaworowski/Desktop/GOTOIT Datascientist kurs AI/Moduł 9 /Zadanie domowe moduł 9/app.py:120: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  wynik_df = wynik_df.applymap(lambda x: format_time(x) if not pd.isnull(x) else "Brak danych")

